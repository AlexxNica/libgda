/* GNOME DB <provider-name> Provider
 * Copyright (C) 2000 <your name>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include "gda-<provider-name>.h"

static Gda_ServerImpl*         server_impl = NULL;
static Gda_ServerImplFunctions server_impl_functions =
{
  gda_<provider-name>_connection_new,
  gda_<provider-name>_connection_open,
  gda_<provider-name>_connection_close,
  gda_<provider-name>_connection_begin_transaction,
  gda_<provider-name>_connection_commit_transaction,
  gda_<provider-name>_connection_rollback_transaction,
  gda_<provider-name>_connection_open_schema,
  gda_<provider-name>_connection_start_logging,
  gda_<provider-name>_connection_stop_logging,
  gda_<provider-name>_connection_create_table,
  gda_<provider-name>_connection_supports,
  gda_<provider-name>_connection_get_gda_type,
  gda_<provider-name>_connection_get_c_type,
  gda_<provider-name>_connection_free,

  gda_<provider-name>_command_new,
  gda_<provider-name>_command_execute,
  gda_<provider-name>_command_free,

  gda_<provider-name>_recordset_new,
  gda_<provider-name>_recordset_move_next,
  gda_<provider-name>_recordset_move_prev,
  gda_<provider-name>_recordset_close,
  gda_<provider-name>_recordset_free,

  gda_<provider-name>_error_make
};

gint
main (gint argc, gchar *argv[])
{
  CORBA_Environment ev;
  CORBA_ORB         orb;

  /* initialize CORBA stuff */
#if USING_OAF
  oaf_init(argc, argv);
  g_set_prgname("gda-<provider-name>-srv");
#else
  CORBA_exception_init(&ev);
  orb = gnome_CORBA_init("gda-<provider-name>-srv", VERSION, &argc, argv,
			 GNORBA_INIT_SERVER_FUNC, &ev);
  gda_server_impl_exception(&ev);
#endif

  /* register the server implementation */
  server_impl = gda_server_impl_new("gda-<provider-name>", &server_impl_functions);
  if (server_impl)
    {
      gda_server_impl_start(server_impl);
    }
  else gda_log_error(_("Could not register <PROVIDER-NAME> provider implementation"));
  return 0;
}

