<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Gda" library="gda-3">
    <enum name="GValueAttribute" cname="GValueAttribute" gtype="g_value_attribute_get_type" type="flags">
      <member cname="GDA_VALUE_ATTR_IS_NULL" name="IsNull" value="1 &lt;&lt; 0" />
      <member cname="GDA_VALUE_ATTR_CAN_BE_NULL" name="CanBeNull" value="1 &lt;&lt; 1" />
      <member cname="GDA_VALUE_ATTR_IS_DEFAULT" name="IsDefault" value="1 &lt;&lt; 2" />
      <member cname="GDA_VALUE_ATTR_CAN_BE_DEFAULT" name="CanBeDefault" value="1 &lt;&lt; 3" />
      <member cname="GDA_VALUE_ATTR_IS_UNCHANGED" name="IsUnchanged" value="1 &lt;&lt; 4" />
      <member cname="GDA_VALUE_ATTR_ACTIONS_SHOWN" name="ActionsShown" value="1 &lt;&lt; 5" />
      <member cname="GDA_VALUE_ATTR_DATA_NON_VALID" name="DataNonValid" value="1 &lt;&lt; 6" />
      <member cname="GDA_VALUE_ATTR_HAS_VALUE_ORIG" name="HasValueOrig" value="1 &lt;&lt; 7" />
      <member cname="GDA_VALUE_ATTR_NO_MODIF" name="NoModif" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="BlobMode" cname="GdaBlobMode" gtype="gda_blob_mode_get_type" type="flags">
      <member cname="GDA_BLOB_MODE_READ" name="Read" value="1" />
      <member cname="GDA_BLOB_MODE_WRITE" name="Write" value="1 &lt;&lt; 1" />
      <member cname="GDA_BLOB_MODE_RDWR" name="Rdwr" value="0x03" />
    </enum>
    <enum name="ClientEvent" cname="GdaClientEvent" gtype="gda_client_event_get_type" type="enum">
      <member cname="GDA_CLIENT_EVENT_INVALID" name="Invalid" />
      <member cname="GDA_CLIENT_EVENT_ERROR" name="Error" />
      <member cname="GDA_CLIENT_EVENT_CONNECTION_OPENED" name="ConnectionOpened" />
      <member cname="GDA_CLIENT_EVENT_CONNECTION_CLOSED" name="ConnectionClosed" />
      <member cname="GDA_CLIENT_EVENT_TRANSACTION_STARTED" name="TransactionStarted" />
      <member cname="GDA_CLIENT_EVENT_TRANSACTION_COMMITTED" name="TransactionCommitted" />
      <member cname="GDA_CLIENT_EVENT_TRANSACTION_CANCELLED" name="TransactionCancelled" />
    </enum>
    <enum name="CommandOptions" cname="GdaCommandOptions" gtype="gda_command_options_get_type" type="flags">
      <member cname="GDA_COMMAND_OPTION_IGNORE_ERRORS" name="IgnoreErrors" value="1" />
      <member cname="GDA_COMMAND_OPTION_STOP_ON_ERRORS" name="StopOnErrors" value="1 &lt;&lt; 1" />
      <member cname="GDA_COMMAND_OPTION_BAD_OPTION" name="BadOption" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="CommandType" cname="GdaCommandType" gtype="gda_command_type_get_type" type="enum">
      <member cname="GDA_COMMAND_TYPE_SQL" name="Sql" />
      <member cname="GDA_COMMAND_TYPE_XML" name="Xml" />
      <member cname="GDA_COMMAND_TYPE_PROCEDURE" name="Procedure" />
      <member cname="GDA_COMMAND_TYPE_TABLE" name="Table" />
      <member cname="GDA_COMMAND_TYPE_SCHEMA" name="Schema" />
      <member cname="GDA_COMMAND_TYPE_INVALID" name="Invalid" />
    </enum>
    <enum name="ConnectionEventCode" cname="GdaConnectionEventCode" gtype="gda_connection_event_code_get_type" type="enum">
      <member cname="GDA_CONNECTION_EVENT_CODE_CONSTRAINT_VIOLATION" name="ConstraintViolation" />
      <member cname="GDA_CONNECTION_EVENT_CODE_RESTRICT_VIOLATION" name="RestrictViolation" />
      <member cname="GDA_CONNECTION_EVENT_CODE_NOT_NULL_VIOLATION" name="NotNullViolation" />
      <member cname="GDA_CONNECTION_EVENT_CODE_FOREIGN_KEY_VIOLATION" name="ForeignKeyViolation" />
      <member cname="GDA_CONNECTION_EVENT_CODE_UNIQUE_VIOLATION" name="UniqueViolation" />
      <member cname="GDA_CONNECTION_EVENT_CODE_CHECK_VIOLATION" name="CheckViolation" />
      <member cname="GDA_CONNECTION_EVENT_CODE_INSUFFICIENT_PRIVILEGES" name="InsufficientPrivileges" />
      <member cname="GDA_CONNECTION_EVENT_CODE_UNDEFINED_COLUMN" name="UndefinedColumn" />
      <member cname="GDA_CONNECTION_EVENT_CODE_UNDEFINED_FUNCTION" name="UndefinedFunction" />
      <member cname="GDA_CONNECTION_EVENT_CODE_UNDEFINED_TABLE" name="UndefinedTable" />
      <member cname="GDA_CONNECTION_EVENT_CODE_DUPLICATE_COLUMN" name="DuplicateColumn" />
      <member cname="GDA_CONNECTION_EVENT_CODE_DUPLICATE_DATABASE" name="DuplicateDatabase" />
      <member cname="GDA_CONNECTION_EVENT_CODE_DUPLICATE_FUNCTION" name="DuplicateFunction" />
      <member cname="GDA_CONNECTION_EVENT_CODE_DUPLICATE_SCHEMA" name="DuplicateSchema" />
      <member cname="GDA_CONNECTION_EVENT_CODE_DUPLICATE_TABLE" name="DuplicateTable" />
      <member cname="GDA_CONNECTION_EVENT_CODE_DUPLICATE_ALIAS" name="DuplicateAlias" />
      <member cname="GDA_CONNECTION_EVENT_CODE_DUPLICATE_OBJECT" name="DuplicateObject" />
      <member cname="GDA_CONNECTION_EVENT_CODE_SYNTAX_ERROR" name="SyntaxError" />
      <member cname="GDA_CONNECTION_EVENT_CODE_UNKNOWN" name="Unknown" />
    </enum>
    <enum name="ConnectionEventType" cname="GdaConnectionEventType" gtype="gda_connection_event_type_get_type" type="enum">
      <member cname="GDA_CONNECTION_EVENT_NOTICE" name="Notice" />
      <member cname="GDA_CONNECTION_EVENT_WARNING" name="Warning" />
      <member cname="GDA_CONNECTION_EVENT_ERROR" name="Error" />
    </enum>
    <enum name="ConnectionFeature" cname="GdaConnectionFeature" gtype="gda_connection_feature_get_type" type="enum">
      <member cname="GDA_CONNECTION_FEATURE_AGGREGATES" name="Aggregates" />
      <member cname="GDA_CONNECTION_FEATURE_BLOBS" name="Blobs" />
      <member cname="GDA_CONNECTION_FEATURE_INDEXES" name="Indexes" />
      <member cname="GDA_CONNECTION_FEATURE_INHERITANCE" name="Inheritance" />
      <member cname="GDA_CONNECTION_FEATURE_NAMESPACES" name="Namespaces" />
      <member cname="GDA_CONNECTION_FEATURE_PROCEDURES" name="Procedures" />
      <member cname="GDA_CONNECTION_FEATURE_SEQUENCES" name="Sequences" />
      <member cname="GDA_CONNECTION_FEATURE_SQL" name="Sql" />
      <member cname="GDA_CONNECTION_FEATURE_TRANSACTIONS" name="Transactions" />
      <member cname="GDA_CONNECTION_FEATURE_TRIGGERS" name="Triggers" />
      <member cname="GDA_CONNECTION_FEATURE_UPDATABLE_CURSOR" name="UpdatableCursor" />
      <member cname="GDA_CONNECTION_FEATURE_USERS" name="Users" />
      <member cname="GDA_CONNECTION_FEATURE_VIEWS" name="Views" />
      <member cname="GDA_CONNECTION_FEATURE_XML_QUERIES" name="XmlQueries" />
    </enum>
    <enum name="ConnectionOptions" cname="GdaConnectionOptions" gtype="gda_connection_options_get_type" type="flags">
      <member cname="GDA_CONNECTION_OPTIONS_READ_ONLY" name="ReadOnly" value="1 &lt;&lt; 0" />
      <member cname="GDA_CONNECTION_OPTIONS_DONT_SHARE" name="DontShare" value="2 &lt;&lt; 0" />
    </enum>
    <enum name="ConnectionSchema" cname="GdaConnectionSchema" gtype="gda_connection_schema_get_type" type="enum">
      <member cname="GDA_CONNECTION_SCHEMA_AGGREGATES" name="Aggregates" />
      <member cname="GDA_CONNECTION_SCHEMA_DATABASES" name="Databases" />
      <member cname="GDA_CONNECTION_SCHEMA_FIELDS" name="Fields" />
      <member cname="GDA_CONNECTION_SCHEMA_INDEXES" name="Indexes" />
      <member cname="GDA_CONNECTION_SCHEMA_LANGUAGES" name="Languages" />
      <member cname="GDA_CONNECTION_SCHEMA_NAMESPACES" name="Namespaces" />
      <member cname="GDA_CONNECTION_SCHEMA_PARENT_TABLES" name="ParentTables" />
      <member cname="GDA_CONNECTION_SCHEMA_PROCEDURES" name="Procedures" />
      <member cname="GDA_CONNECTION_SCHEMA_SEQUENCES" name="Sequences" />
      <member cname="GDA_CONNECTION_SCHEMA_TABLES" name="Tables" />
      <member cname="GDA_CONNECTION_SCHEMA_TRIGGERS" name="Triggers" />
      <member cname="GDA_CONNECTION_SCHEMA_TYPES" name="Types" />
      <member cname="GDA_CONNECTION_SCHEMA_USERS" name="Users" />
      <member cname="GDA_CONNECTION_SCHEMA_VIEWS" name="Views" />
      <member cname="GDA_CONNECTION_SCHEMA_CONSTRAINTS" name="Constraints" />
      <member cname="GDA_CONNECTION_SCHEMA_TABLE_CONTENTS" name="TableContents" />
    </enum>
    <enum name="DataModelAccessFlags" cname="GdaDataModelAccessFlags" gtype="gda_data_model_access_flags_get_type" type="flags">
      <member cname="GDA_DATA_MODEL_ACCESS_RANDOM" name="Random" value="1 &lt;&lt; 0" />
      <member cname="GDA_DATA_MODEL_ACCESS_CURSOR_FORWARD" name="CursorForward" value="1 &lt;&lt; 1" />
      <member cname="GDA_DATA_MODEL_ACCESS_CURSOR_BACKWARD" name="CursorBackward" value="1 &lt;&lt; 2" />
      <member cname="GDA_DATA_MODEL_ACCESS_INSERT" name="Insert" value="1 &lt;&lt; 3" />
      <member cname="GDA_DATA_MODEL_ACCESS_UPDATE" name="Update" value="1 &lt;&lt; 4" />
      <member cname="GDA_DATA_MODEL_ACCESS_DELETE" name="Delete" value="1 &lt;&lt; 5" />
      <member cname="GDA_DATA_MODEL_ACCESS_WRITE" name="Write" value="GDA_DATA_MODEL_ACCESS_INSERT | GDA_DATA_MODEL_ACCESS_UPDATE |GDA_DATA_MODEL_ACCESS_DELETE" />
    </enum>
    <enum name="DataModelHint" cname="GdaDataModelHint" gtype="gda_data_model_hint_get_type" type="enum">
      <member cname="GDA_DATA_MODEL_HINT_START_BATCH_UPDATE" name="StartBatchUpdate" />
      <member cname="GDA_DATA_MODEL_HINT_END_BATCH_UPDATE" name="EndBatchUpdate" />
      <member cname="GDA_DATA_MODEL_HINT_REFRESH" name="Refresh" />
    </enum>
    <enum name="DataModelIOFormat" cname="GdaDataModelIOFormat" type="enum">
      <member cname="GDA_DATA_MODEL_IO_DATA_ARRAY_XML" name="DataArrayXml" />
      <member cname="GDA_DATA_MODEL_IO_TEXT_SEPARATED" name="TextSeparated" />
    </enum>
    <enum name="DictConstraintFkAction" cname="GdaDictConstraintFkAction" gtype="gda_dict_constraint_fk_action_get_type" type="enum">
      <member cname="CONSTRAINT_FK_ACTION_CASCADE" name="Cascade" />
      <member cname="CONSTRAINT_FK_ACTION_SET_NULL" name="SetNull" />
      <member cname="CONSTRAINT_FK_ACTION_SET_DEFAULT" name="SetDefault" />
      <member cname="CONSTRAINT_FK_ACTION_SET_VALUE" name="SetValue" />
      <member cname="CONSTRAINT_FK_ACTION_NO_ACTION" name="NoAction" />
    </enum>
    <enum name="DictConstraintType" cname="GdaDictConstraintType" gtype="gda_dict_constraint_type_get_type" type="enum">
      <member cname="CONSTRAINT_PRIMARY_KEY" name="PrimaryKey" />
      <member cname="CONSTRAINT_FOREIGN_KEY" name="ForeignKey" />
      <member cname="CONSTRAINT_UNIQUE" name="Unique" />
      <member cname="CONSTRAINT_NOT_NULL" name="NotNull" />
      <member cname="CONSTRAINT_CHECK_EXPR" name="CheckExpr" />
      <member cname="CONSTRAINT_CHECK_IN_LIST" name="CheckInList" />
      <member cname="CONSTRAINT_CHECK_SETOF_LIST" name="CheckSetofList" />
      <member cname="CONSTRAINT_UNKNOWN" name="Unknown" />
    </enum>
    <enum name="DictFieldAttribute" cname="GdaDictFieldAttribute" gtype="gda_dict_field_attribute_get_type" type="flags">
      <member cname="FIELD_AUTO_INCREMENT" name="Increment" value="1 &lt;&lt; 0" />
    </enum>
    <enum name="GraphType" cname="GdaGraphType" gtype="gda_graph_type_get_type" type="enum">
      <member cname="GDA_GRAPH_DB_RELATIONS" name="DbRelations" />
      <member cname="GDA_GRAPH_QUERY_JOINS" name="QueryJoins" />
      <member cname="GDA_GRAPH_MODELLING" name="Modelling" />
    </enum>
    <enum name="ObjectRefType" cname="GdaObjectRefType" gtype="gda_object_ref_type_get_type" type="enum">
      <member cname="REFERENCE_BY_XML_ID" name="XmlId" />
      <member cname="REFERENCE_BY_NAME" name="Name" />
    </enum>
    <enum name="ParameterListParamHint" cname="GdaParameterListParamHint" gtype="gda_parameter_list_param_hint_get_type" type="flags">
      <member cname="GDA_PARAMETER_LIST_PARAM_READ_ONLY" name="ReadOnly" value="1 &lt;&lt; 0" />
      <member cname="GDA_PARAMETER_LIST_PARAM_HIDE" name="Hide" value="1 &lt;&lt; 1" />
    </enum>
    <enum name="QueryConditionOperator" cname="GdaQueryConditionOperator" gtype="gda_query_condition_operator_get_type" type="enum">
      <member cname="GDA_QUERY_CONDITION_OP_LEFT" name="Left" />
      <member cname="GDA_QUERY_CONDITION_OP_RIGHT" name="Right" value="1" />
      <member cname="GDA_QUERY_CONDITION_OP_RIGHT2" name="Right2" value="2" />
    </enum>
    <enum name="QueryConditionType" cname="GdaQueryConditionType" gtype="gda_query_condition_type_get_type" type="enum">
      <member cname="GDA_QUERY_CONDITION_NODE_AND" name="NodeAnd" />
      <member cname="GDA_QUERY_CONDITION_NODE_OR" name="NodeOr" />
      <member cname="GDA_QUERY_CONDITION_NODE_NOT" name="NodeNot" />
      <member cname="GDA_QUERY_CONDITION_LEAF_EQUAL" name="LeafEqual" />
      <member cname="GDA_QUERY_CONDITION_LEAF_DIFF" name="LeafDiff" />
      <member cname="GDA_QUERY_CONDITION_LEAF_SUP" name="LeafSup" />
      <member cname="GDA_QUERY_CONDITION_LEAF_SUPEQUAL" name="LeafSupequal" />
      <member cname="GDA_QUERY_CONDITION_LEAF_INF" name="LeafInf" />
      <member cname="GDA_QUERY_CONDITION_LEAF_INFEQUAL" name="LeafInfequal" />
      <member cname="GDA_QUERY_CONDITION_LEAF_LIKE" name="LeafLike" />
      <member cname="GDA_QUERY_CONDITION_LEAF_SIMILAR" name="LeafSimilar" />
      <member cname="GDA_QUERY_CONDITION_LEAF_REGEX" name="LeafRegex" />
      <member cname="GDA_QUERY_CONDITION_LEAF_REGEX_NOCASE" name="LeafRegexNocase" />
      <member cname="GDA_QUERY_CONDITION_LEAF_NOT_REGEX" name="LeafNotRegex" />
      <member cname="GDA_QUERY_CONDITION_LEAF_NOT_REGEX_NOCASE" name="LeafNotRegexNocase" />
      <member cname="GDA_QUERY_CONDITION_LEAF_IN" name="LeafIn" />
      <member cname="GDA_QUERY_CONDITION_LEAF_BETWEEN" name="LeafBetween" />
      <member cname="GDA_QUERY_CONDITION_TYPE_UNKNOWN" name="TypeUnknown" />
    </enum>
    <enum name="QueryFieldState" cname="GdaQueryFieldState" gtype="gda_query_field_state_get_type" type="flags">
      <member cname="GDA_ENTITY_FIELD_VISIBLE" name="Visible" value="1 &lt;&lt; 0" />
      <member cname="GDA_ENTITY_FIELD_INVISIBLE" name="Invisible" value="1 &lt;&lt; 1" />
      <member cname="GDA_ENTITY_FIELD_ANY" name="Any" value="GDA_ENTITY_FIELD_VISIBLE | GDA_ENTITY_FIELD_INVISIBLE" />
    </enum>
    <enum name="QueryJoinType" cname="GdaQueryJoinType" gtype="gda_query_join_type_get_type" type="enum">
      <member cname="GDA_QUERY_JOIN_TYPE_INNER" name="Inner" />
      <member cname="GDA_QUERY_JOIN_TYPE_LEFT_OUTER" name="LeftOuter" />
      <member cname="GDA_QUERY_JOIN_TYPE_RIGHT_OUTER" name="RightOuter" />
      <member cname="GDA_QUERY_JOIN_TYPE_FULL_OUTER" name="FullOuter" />
      <member cname="GDA_QUERY_JOIN_TYPE_CROSS" name="Cross" />
      <member cname="GDA_QUERY_JOIN_TYPE_LAST" name="Last" />
    </enum>
    <enum name="QueryTargetType" cname="GdaQueryTargetType" gtype="gda_query_target_type_get_type" type="enum">
      <member cname="GDA_QUERY_TARGET_TYPE_INNER" name="Inner" />
      <member cname="GDA_QUERY_TARGET_TYPE_LEFT_OUTER" name="LeftOuter" />
      <member cname="GDA_QUERY_TARGET_TYPE_RIGHT_OUTER" name="RightOuter" />
      <member cname="GDA_QUERY_TARGET_TYPE_FULL_OUTER" name="FullOuter" />
      <member cname="GDA_QUERY_TARGET_TYPE_CROSS" name="Cross" />
      <member cname="GDA_QUERY_TARGET_TYPE_LAST" name="Last" />
    </enum>
    <enum name="QueryType" cname="GdaQueryType" gtype="gda_query_type_get_type" type="enum">
      <member cname="GDA_QUERY_TYPE_SELECT" name="Select" />
      <member cname="GDA_QUERY_TYPE_INSERT" name="Insert" />
      <member cname="GDA_QUERY_TYPE_UPDATE" name="Update" />
      <member cname="GDA_QUERY_TYPE_DELETE" name="Delete" />
      <member cname="GDA_QUERY_TYPE_UNION" name="Union" />
      <member cname="GDA_QUERY_TYPE_INTERSECT" name="Intersect" />
      <member cname="GDA_QUERY_TYPE_EXCEPT" name="Except" />
      <member cname="GDA_QUERY_TYPE_NON_PARSED_SQL" name="NonParsedSql" />
    </enum>
    <enum name="RendererOptions" cname="GdaRendererOptions" gtype="gda_renderer_options_get_type" type="flags">
      <member cname="GDA_RENDERER_EXTRA_PRETTY_SQL" name="ExtraPrettySql" value="1 &lt;&lt; 0" />
      <member cname="GDA_RENDERER_EXTRA_VAL_ATTRS" name="ExtraValAttrs" value="1 &lt;&lt; 1" />
      <member cname="GDA_RENDERER_ERROR_IF_DEFAULT" name="ErrorIfDefault" value="1 &lt;&lt; 2" />
      <member cname="GDA_RENDERER_FIELDS_NO_TARGET_ALIAS" name="FieldsNoTargetAlias" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="ServerOperationNodeStatus" cname="GdaServerOperationNodeStatus" gtype="gda_server_operation_node_status_get_type" type="enum">
      <member cname="GDA_SERVER_OPERATION_STATUS_OPTIONAL" name="Optional" />
      <member cname="GDA_SERVER_OPERATION_STATUS_REQUIRED" name="Required" />
      <member cname="GDA_SERVER_OPERATION_STATUS_UNKNOWN" name="Unknown" />
    </enum>
    <enum name="ServerOperationNodeType" cname="GdaServerOperationNodeType" gtype="gda_server_operation_node_type_get_type" type="enum">
      <member cname="GDA_SERVER_OPERATION_NODE_PARAMLIST" name="Paramlist" />
      <member cname="GDA_SERVER_OPERATION_NODE_DATA_MODEL" name="DataModel" />
      <member cname="GDA_SERVER_OPERATION_NODE_PARAM" name="Param" />
      <member cname="GDA_SERVER_OPERATION_NODE_SEQUENCE" name="Sequence" />
      <member cname="GDA_SERVER_OPERATION_NODE_SEQUENCE_ITEM" name="SequenceItem" />
      <member cname="GDA_SERVER_OPERATION_NODE_DATA_MODEL_COLUMN" name="DataModelColumn" />
      <member cname="GDA_SERVER_OPERATION_NODE_UNKNOWN" name="Unknown" />
    </enum>
    <enum name="ServerOperationType" cname="GdaServerOperationType" gtype="gda_server_operation_type_get_type" type="enum">
      <member cname="GDA_SERVER_OPERATION_CREATE_DB" name="CreateDb" />
      <member cname="GDA_SERVER_OPERATION_DROP_DB" name="DropDb" />
      <member cname="GDA_SERVER_OPERATION_CREATE_TABLE" name="CreateTable" />
      <member cname="GDA_SERVER_OPERATION_DROP_TABLE" name="DropTable" />
      <member cname="GDA_SERVER_OPERATION_RENAME_TABLE" name="RenameTable" />
      <member cname="GDA_SERVER_OPERATION_ADD_COLUMN" name="AddColumn" />
      <member cname="GDA_SERVER_OPERATION_DROP_COLUMN" name="DropColumn" />
      <member cname="GDA_SERVER_OPERATION_CREATE_INDEX" name="CreateIndex" />
      <member cname="GDA_SERVER_OPERATION_DROP_INDEX" name="DropIndex" />
      <member cname="GDA_SERVER_OPERATION_NB" name="Nb" />
    </enum>
    <enum name="Sorting" cname="GdaSorting" gtype="gda_sorting_get_type" type="enum">
      <member cname="GDA_SORTING_ASCENDING" name="Ascending" />
      <member cname="GDA_SORTING_DESCENDING" name="Descending" />
    </enum>
    <enum name="TransactionIsolation" cname="GdaTransactionIsolation" gtype="gda_transaction_isolation_get_type" type="enum">
      <member cname="GDA_TRANSACTION_ISOLATION_UNKNOWN" name="Unknown" />
      <member cname="GDA_TRANSACTION_ISOLATION_READ_COMMITTED" name="ReadCommitted" />
      <member cname="GDA_TRANSACTION_ISOLATION_READ_UNCOMMITTED" name="ReadUncommitted" />
      <member cname="GDA_TRANSACTION_ISOLATION_REPEATABLE_READ" name="RepeatableRead" />
      <member cname="GDA_TRANSACTION_ISOLATION_SERIALIZABLE" name="Serializable" />
    </enum>
    <callback name="ConfigListenerFunc" cname="GdaConfigListenerFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="const-gchar*" name="path" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="InitFunc" cname="GdaInitFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ThreaderFunc" cname="GdaThreaderFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdaThreader*" name="arg1" />
        <parameter type="guint" name="arg2" />
        <parameter type="gpointer" name="arg3" />
      </parameters>
    </callback>
    <interface name="DataHandler" cname="GdaDataHandler">
      <virtual_method name="GetSqlFromValue" cname="get_sql_from_value">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetStrFromValue" cname="get_str_from_value">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetValueFromSql" cname="get_value_from_sql">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="const-gchar*" name="sql" />
          <parameter type="GType" name="type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetValueFromStr" cname="get_value_from_str">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="const-gchar*" name="str" />
          <parameter type="GType" name="type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSaneInitValue" cname="get_sane_init_value">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="GType" name="type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNbGTypes" cname="get_nb_g_types">
        <return-type type="guint" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetGTypeIndex" cname="get_g_type_index">
        <return-type type="GType" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="guint" name="index" />
        </parameters>
      </virtual_method>
      <virtual_method name="AcceptsGType" cname="accepts_g_type">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="GType" name="type" />
        </parameters>
      </virtual_method>
      <method name="AcceptsGType" cname="gda_data_handler_accepts_g_type">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetDescr" cname="gda_data_handler_get_descr">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetGTypeIndex" cname="gda_data_handler_get_g_type_index">
        <return-type type="GType" />
        <parameters>
          <parameter type="guint" name="index" />
        </parameters>
      </method>
      <method name="GetNbGTypes" cname="gda_data_handler_get_nb_g_types">
        <return-type type="guint" />
      </method>
      <method name="GetSaneInitValue" cname="gda_data_handler_get_sane_init_value">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetSqlFromValue" cname="gda_data_handler_get_sql_from_value">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetStrFromValue" cname="gda_data_handler_get_str_from_value">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_data_handler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValueFromSql" cname="gda_data_handler_get_value_from_sql">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="const-gchar*" name="sql" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetValueFromStr" cname="gda_data_handler_get_value_from_str">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
    </interface>
    <interface name="DataModel" cname="GdaDataModel">
      <signal name="RowInserted" cname="row_inserted" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
        </parameters>
      </signal>
      <signal name="RowUpdated" cname="row_updated" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
        </parameters>
      </signal>
      <signal name="RowRemoved" cname="row_removed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
        </parameters>
      </signal>
      <virtual_method name="IGetNRows" cname="i_get_n_rows">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="IGetNColumns" cname="i_get_n_columns">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="IDescribeColumn" cname="i_describe_column">
        <return-type type="GdaColumn*" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="col" />
        </parameters>
      </virtual_method>
      <virtual_method name="IGetAccessFlags" cname="i_get_access_flags">
        <return-type type="guint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="IGetAttributesAt" cname="i_get_attributes_at">
        <return-type type="guint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="col" />
          <parameter type="gint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="ICreateIter" cname="i_create_iter">
        <return-type type="GdaDataModelIter*" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="IIterAtRow" cname="i_iter_at_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GdaDataModelIter*" name="iter" />
          <parameter type="gint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="IIterNext" cname="i_iter_next">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GdaDataModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IIterPrev" cname="i_iter_prev">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GdaDataModelIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="ISetValueAt" cname="i_set_value_at">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="col" />
          <parameter type="gint" name="row" />
          <parameter type="const-GValue*" name="value" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="ISetValues" cname="i_set_values">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
          <parameter type="GList*" name="values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="IAppendValues" cname="i_append_values">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="const-GList*" name="values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="IAppendRow" cname="i_append_row">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="IRemoveRow" cname="i_remove_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="IFindRow" cname="i_find_row">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GSList*" name="values" />
          <parameter type="gint*" name="cols_index" />
        </parameters>
      </virtual_method>
      <virtual_method name="ISetNotify" cname="i_set_notify">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gboolean" name="do_notify_changes" />
        </parameters>
      </virtual_method>
      <virtual_method name="IGetNotify" cname="i_get_notify">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="ISendHint" cname="i_send_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GdaDataModelHint" name="hint" />
          <parameter type="const-GValue*" name="hint_value" />
        </parameters>
      </virtual_method>
      <method name="AppendRow" cname="gda_data_model_append_row">
        <return-type type="gint" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AppendValues" cname="gda_data_model_append_values">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-GList*" name="values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="CreateIter" cname="gda_data_model_create_iter">
        <return-type type="GdaDataModelIter*" />
      </method>
      <method name="DescribeColumn" cname="gda_data_model_describe_column">
        <return-type type="GdaColumn*" />
        <parameters>
          <parameter type="gint" name="col" />
        </parameters>
      </method>
      <method name="Dump" cname="gda_data_model_dump">
        <return-type type="void" />
        <parameters>
          <parameter type="FILE*" name="to_stream" />
        </parameters>
      </method>
      <method name="DumpAsString" cname="gda_data_model_dump_as_string">
        <return-type type="gchar*" />
      </method>
      <method name="ExportToFile" cname="gda_data_model_export_to_file">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelIOFormat" name="format" />
          <parameter type="const-gchar*" name="file" />
          <parameter type="const-gint*" name="cols" />
          <parameter type="gint" name="nb_cols" />
          <parameter type="GdaParameterList*" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ExportToString" cname="gda_data_model_export_to_string">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaDataModelIOFormat" name="format" />
          <parameter type="const-gint*" name="cols" />
          <parameter type="gint" name="nb_cols" />
          <parameter type="GdaParameterList*" name="options" />
        </parameters>
      </method>
      <method name="Freeze" cname="gda_data_model_freeze">
        <return-type type="void" />
      </method>
      <method name="GetAccessFlags" cname="gda_data_model_get_access_flags">
        <return-type type="guint" />
      </method>
      <method name="GetAttributesAt" cname="gda_data_model_get_attributes_at">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="col" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="GetColumnTitle" cname="gda_data_model_get_column_title">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="col" />
        </parameters>
      </method>
      <method name="GetNColumns" cname="gda_data_model_get_n_columns">
        <return-type type="gint" />
      </method>
      <method name="GetNRows" cname="gda_data_model_get_n_rows">
        <return-type type="gint" />
      </method>
      <method name="GetRowFromValues" cname="gda_data_model_get_row_from_values">
        <return-type type="gint" />
        <parameters>
          <parameter type="GSList*" name="values" />
          <parameter type="gint*" name="cols_index" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_data_model_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValueAt" cname="gda_data_model_get_value_at">
        <return-type type="const-GValue*" />
        <parameters>
          <parameter type="gint" name="col" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="IsUpdatable" cname="gda_data_model_is_updatable">
        <return-type type="gboolean" />
      </method>
      <method name="MoveIterAtRow" cname="gda_data_model_move_iter_at_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="MoveIterAtRowDefault" cname="gda_data_model_move_iter_at_row_default">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="MoveIterNext" cname="gda_data_model_move_iter_next">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
        </parameters>
      </method>
      <method name="MoveIterNextDefault" cname="gda_data_model_move_iter_next_default">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
        </parameters>
      </method>
      <method name="MoveIterPrev" cname="gda_data_model_move_iter_prev">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
        </parameters>
      </method>
      <method name="MoveIterPrevDefault" cname="gda_data_model_move_iter_prev_default">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
        </parameters>
      </method>
      <method name="RemoveRow" cname="gda_data_model_remove_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SendHint" cname="gda_data_model_send_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModelHint" name="hint" />
          <parameter type="const-GValue*" name="hint_value" />
        </parameters>
      </method>
      <method name="SetColumnTitle" cname="gda_data_model_set_column_title">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="col" />
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetValueAt" cname="gda_data_model_set_value_at">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="col" />
          <parameter type="gint" name="row" />
          <parameter type="const-GValue*" name="value" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetValues" cname="gda_data_model_set_values">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="GList*" name="values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SignalEmitChanged" cname="gda_data_model_signal_emit_changed">
        <return-type type="void" />
      </method>
      <method name="Thaw" cname="gda_data_model_thaw">
        <return-type type="void" />
      </method>
    </interface>
    <interface name="Entity" cname="GdaEntity">
      <virtual_method name="HasField" cname="has_field">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFields" cname="get_fields">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFieldByName" cname="get_field_by_name">
        <return-type type="GdaEntityField*" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFieldByXmlId" cname="get_field_by_xml_id">
        <return-type type="GdaEntityField*" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="const-gchar*" name="xml_id" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFieldByIndex" cname="get_field_by_index">
        <return-type type="GdaEntityField*" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="gint" name="index" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFieldIndex" cname="get_field_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddField" cname="add_field">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddFieldBefore" cname="add_field_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
          <parameter type="GdaEntityField*" name="field_before" />
        </parameters>
      </virtual_method>
      <virtual_method name="SwapFields" cname="swap_fields">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field1" />
          <parameter type="GdaEntityField*" name="field2" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveField" cname="remove_field">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsWritable" cname="is_writable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="FieldAdded" cname="field_added">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </virtual_method>
      <virtual_method name="FieldRemoved" cname="field_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </virtual_method>
      <virtual_method name="FieldUpdated" cname="field_updated">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </virtual_method>
      <virtual_method name="FieldsOrderChanged" cname="fields_order_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntity*" name="iface" />
        </parameters>
      </virtual_method>
      <method name="AddField" cname="gda_entity_add_field">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </method>
      <method name="AddFieldBefore" cname="gda_entity_add_field_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntityField*" name="field" />
          <parameter type="GdaEntityField*" name="field_before" />
        </parameters>
      </method>
      <method name="GetFieldByIndex" cname="gda_entity_get_field_by_index">
        <return-type type="GdaEntityField*" />
        <parameters>
          <parameter type="gint" name="index" />
        </parameters>
      </method>
      <method name="GetFieldByName" cname="gda_entity_get_field_by_name">
        <return-type type="GdaEntityField*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetFieldByXmlId" cname="gda_entity_get_field_by_xml_id">
        <return-type type="GdaEntityField*" />
        <parameters>
          <parameter type="const-gchar*" name="xml_id" />
        </parameters>
      </method>
      <method name="GetFieldIndex" cname="gda_entity_get_field_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </method>
      <method name="GetFields" cname="gda_entity_get_fields">
        <return-type type="GSList*" />
      </method>
      <method name="GetNFields" cname="gda_entity_get_n_fields">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gda_entity_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasField" cname="gda_entity_has_field">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </method>
      <method name="IsWritable" cname="gda_entity_is_writable">
        <return-type type="gboolean" />
      </method>
      <method name="RemoveField" cname="gda_entity_remove_field">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntityField*" name="field" />
        </parameters>
      </method>
      <method name="SwapFields" cname="gda_entity_swap_fields">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaEntityField*" name="field1" />
          <parameter type="GdaEntityField*" name="field2" />
        </parameters>
      </method>
    </interface>
    <interface name="EntityField" cname="GdaEntityField">
      <virtual_method name="GetEntity" cname="get_entity">
        <return-type type="GdaEntity*" />
        <parameters>
          <parameter type="GdaEntityField*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetGType" cname="get_g_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="GdaEntityField*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDataType" cname="get_data_type">
        <return-type type="GdaDictType*" />
        <parameters>
          <parameter type="GdaEntityField*" name="iface" />
        </parameters>
      </virtual_method>
      <method name="GetDescription" cname="gda_entity_field_get_description">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDictType" cname="gda_entity_field_get_dict_type">
        <return-type type="GdaDictType*" />
      </method>
      <method name="GetEntity" cname="gda_entity_field_get_entity">
        <return-type type="GdaEntity*" />
      </method>
      <method name="GetGType" cname="gda_entity_field_get_g_type">
        <return-type type="GType" />
      </method>
      <method name="GetName" cname="gda_entity_field_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_entity_field_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <interface name="Referer" cname="GdaReferer">
      <virtual_method name="Activate" cname="activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaReferer*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="Deactivate" cname="deactivate">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaReferer*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsActive" cname="is_active">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaReferer*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRefObjects" cname="get_ref_objects">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaReferer*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="ReplaceRefs" cname="replace_refs">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaReferer*" name="iface" />
          <parameter type="GHashTable*" name="replacements" />
        </parameters>
      </virtual_method>
      <virtual_method name="Activated" cname="activated">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaReferer*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="Deactivated" cname="deactivated">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaReferer*" name="iface" />
        </parameters>
      </virtual_method>
      <method name="Activate" cname="gda_referer_activate">
        <return-type type="gboolean" />
      </method>
      <method name="Deactivate" cname="gda_referer_deactivate">
        <return-type type="void" />
      </method>
      <method name="GetRefObjects" cname="gda_referer_get_ref_objects">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gda_referer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsActive" cname="gda_referer_is_active">
        <return-type type="gboolean" />
      </method>
      <method name="ReplaceRefs" cname="gda_referer_replace_refs">
        <return-type type="void" />
        <parameters>
          <parameter type="GHashTable*" name="replacements" />
        </parameters>
      </method>
    </interface>
    <interface name="Renderer" cname="GdaRenderer">
      <virtual_method name="RenderAsSql" cname="render_as_sql">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaRenderer*" name="iface" />
          <parameter type="GdaParameterList*" name="context" />
          <parameter type="guint" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="RenderAsStr" cname="render_as_str">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaRenderer*" name="iface" />
          <parameter type="GdaParameterList*" name="context" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsValid" cname="is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaRenderer*" name="iface" />
          <parameter type="GdaParameterList*" name="context" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <method name="GetType" cname="gda_renderer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsValid" cname="gda_renderer_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaParameterList*" name="context" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RenderAsSql" cname="gda_renderer_render_as_sql">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaParameterList*" name="context" />
          <parameter type="guint" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RenderAsStr" cname="gda_renderer_render_as_str">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaParameterList*" name="context" />
        </parameters>
      </method>
    </interface>
    <interface name="XmlStorage" cname="GdaXmlStorage">
      <virtual_method name="GetXmlId" cname="get_xml_id">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaXmlStorage*" name="iface" />
        </parameters>
      </virtual_method>
      <virtual_method name="SaveToXml" cname="save_to_xml">
        <return-type type="xmlNodePtr" />
        <parameters>
          <parameter type="GdaXmlStorage*" name="iface" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="LoadFromXml" cname="load_from_xml">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaXmlStorage*" name="iface" />
          <parameter type="xmlNodePtr" name="node" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <method name="GetType" cname="gda_xml_storage_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetXmlId" cname="gda_xml_storage_get_xml_id">
        <return-type type="gchar*" />
      </method>
      <method name="LoadFromXml" cname="gda_xml_storage_load_from_xml">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="xmlNodePtr" name="node" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SaveToXml" cname="gda_xml_storage_save_to_xml">
        <return-type type="xmlNodePtr" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </interface>
    <object name="Blob" cname="GdaBlob" parent="GObject">
      <virtual_method name="Open" cname="open">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaBlob*" name="blob" />
          <parameter type="GdaBlobMode" name="mode" />
        </parameters>
      </virtual_method>
      <virtual_method name="Read" cname="read">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaBlob*" name="blob" />
          <parameter type="gpointer" name="buf" />
          <parameter type="gint" name="size" />
          <parameter type="gint*" name="bytes_read" />
        </parameters>
      </virtual_method>
      <virtual_method name="Write" cname="write">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaBlob*" name="blob" />
          <parameter type="gpointer" name="buf" />
          <parameter type="gint" name="size" />
          <parameter type="gint*" name="bytes_written" />
        </parameters>
      </virtual_method>
      <virtual_method name="Lseek" cname="lseek">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaBlob*" name="blob" />
          <parameter type="gint" name="offset" />
          <parameter type="gint" name="whence" />
        </parameters>
      </virtual_method>
      <virtual_method name="Close" cname="close">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaBlob*" name="blob" />
        </parameters>
      </virtual_method>
      <virtual_method name="Remove" cname="remove">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaBlob*" name="blob" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSqlId" cname="get_sql_id">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaBlob*" name="blob" />
        </parameters>
      </virtual_method>
      <method name="Close" cname="gda_blob_close">
        <return-type type="gint" />
      </method>
      <method name="GetSqlId" cname="gda_blob_get_sql_id">
        <return-type type="gchar*" />
      </method>
      <method name="GetType" cname="gda_blob_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lseek" cname="gda_blob_lseek">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="gint" name="whence" />
        </parameters>
      </method>
      <method name="Open" cname="gda_blob_open">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaBlobMode" name="mode" />
        </parameters>
      </method>
      <method name="Read" cname="gda_blob_read">
        <return-type type="gint" />
        <parameters>
          <parameter type="gpointer" name="buf" />
          <parameter type="gint" name="size" />
          <parameter type="gint*" name="bytes_read" />
        </parameters>
      </method>
      <method name="Remove" cname="gda_blob_remove">
        <return-type type="gint" />
      </method>
      <method name="Write" cname="gda_blob_write">
        <return-type type="gint" />
        <parameters>
          <parameter type="gpointer" name="buf" />
          <parameter type="gint" name="size" />
          <parameter type="gint*" name="bytes_written" />
        </parameters>
      </method>
    </object>
    <object name="Client" cname="GdaClient" parent="GObject">
      <field name="Priv" cname="priv" type="GdaClientPrivate*" />
      <signal name="EventNotification" cname="event_notification" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaClient*" name="client" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaClientEvent" name="event" />
          <parameter type="GdaParameterList*" name="params" />
        </parameters>
      </signal>
      <method name="BeginTransaction" cname="gda_client_begin_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="CloseAllConnections" cname="gda_client_close_all_connections">
        <return-type type="void" />
      </method>
      <method name="CommitTransaction" cname="gda_client_commit_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="DeclareConnection" cname="gda_client_declare_connection">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="FindConnection" cname="gda_client_find_connection">
        <return-type type="GdaConnection*" />
        <parameters>
          <parameter type="const-gchar*" name="dsn" />
          <parameter type="const-gchar*" name="username" />
          <parameter type="const-gchar*" name="password" />
        </parameters>
      </method>
      <method name="GetConnections" cname="gda_client_get_connections">
        <return-type type="const-GList*" />
      </method>
      <method name="GetDsnSpecs" cname="gda_client_get_dsn_specs">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="provider" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_client_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_client_new" />
      <method name="NotifyConnectionClosedEvent" cname="gda_client_notify_connection_closed_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="NotifyConnectionOpenedEvent" cname="gda_client_notify_connection_opened_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="NotifyErrorEvent" cname="gda_client_notify_error_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaConnectionEvent*" name="error" />
        </parameters>
      </method>
      <method name="NotifyEvent" cname="gda_client_notify_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaClientEvent" name="event" />
          <parameter type="GdaParameterList*" name="params" />
        </parameters>
      </method>
      <method name="NotifyTransactionCancelledEvent" cname="gda_client_notify_transaction_cancelled_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="NotifyTransactionCommittedEvent" cname="gda_client_notify_transaction_committed_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="NotifyTransactionStartedEvent" cname="gda_client_notify_transaction_started_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="OpenConnection" cname="gda_client_open_connection">
        <return-type type="GdaConnection*" />
        <parameters>
          <parameter type="const-gchar*" name="dsn" />
          <parameter type="const-gchar*" name="username" />
          <parameter type="const-gchar*" name="password" />
          <parameter type="GdaConnectionOptions" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="OpenConnectionFromString" cname="gda_client_open_connection_from_string">
        <return-type type="GdaConnection*" />
        <parameters>
          <parameter type="const-gchar*" name="provider_id" />
          <parameter type="const-gchar*" name="cnc_string" />
          <parameter type="const-gchar*" name="username" />
          <parameter type="const-gchar*" name="password" />
          <parameter type="GdaConnectionOptions" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="PerformCreateDatabase" cname="gda_client_perform_create_database">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="provider" />
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="PerformDropDatabase" cname="gda_client_perform_drop_database">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="provider" />
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="PrepareCreateDatabase" cname="gda_client_prepare_create_database">
        <return-type type="GdaServerOperation*" />
        <parameters>
          <parameter type="const-gchar*" name="provider" />
        </parameters>
      </method>
      <method name="PrepareDropDatabase" cname="gda_client_prepare_drop_database">
        <return-type type="GdaServerOperation*" />
        <parameters>
          <parameter type="const-gchar*" name="provider" />
        </parameters>
      </method>
      <method name="RollbackTransaction" cname="gda_client_rollback_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
    </object>
    <object name="Column" cname="GdaColumn" parent="GObject">
      <field name="Priv" cname="priv" type="GdaColumnPrivate*" />
      <signal name="NameChanged" cname="name_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaColumn*" name="column" />
          <parameter type="const-gchar*" name="old_name" />
        </parameters>
      </signal>
      <signal name="GTypeChanged" cname="g_type_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaColumn*" name="column" />
          <parameter type="GType" name="old_type" />
          <parameter type="GType" name="new_type" />
        </parameters>
      </signal>
      <property name="Id" cname="id" type="gchar*" readable="true" writeable="true" />
      <method name="Copy" cname="gda_column_copy">
        <return-type type="GdaColumn*" owned="true" />
      </method>
      <method name="GetAllowNull" cname="gda_column_get_allow_null">
        <return-type type="gboolean" />
      </method>
      <method name="GetAutoIncrement" cname="gda_column_get_auto_increment">
        <return-type type="gboolean" />
      </method>
      <method name="GetCaption" cname="gda_column_get_caption">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDbmsType" cname="gda_column_get_dbms_type">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDefaultValue" cname="gda_column_get_default_value">
        <return-type type="const-GValue*" />
      </method>
      <method name="GetDefinedSize" cname="gda_column_get_defined_size">
        <return-type type="glong" />
      </method>
      <method name="GetGType" cname="gda_column_get_g_type">
        <return-type type="GType" />
      </method>
      <method name="GetName" cname="gda_column_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPosition" cname="gda_column_get_position">
        <return-type type="gint" />
      </method>
      <method name="GetPrimaryKey" cname="gda_column_get_primary_key">
        <return-type type="gboolean" />
      </method>
      <method name="GetReferences" cname="gda_column_get_references">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetScale" cname="gda_column_get_scale">
        <return-type type="glong" />
      </method>
      <method name="GetTable" cname="gda_column_get_table">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetTitle" cname="gda_column_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_column_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUniqueKey" cname="gda_column_get_unique_key">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_column_new" />
      <method name="SetAllowNull" cname="gda_column_set_allow_null">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="allow" />
        </parameters>
      </method>
      <method name="SetAutoIncrement" cname="gda_column_set_auto_increment">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_auto" />
        </parameters>
      </method>
      <method name="SetCaption" cname="gda_column_set_caption">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="caption" />
        </parameters>
      </method>
      <method name="SetDbmsType" cname="gda_column_set_dbms_type">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="dbms_type" />
        </parameters>
      </method>
      <method name="SetDefaultValue" cname="gda_column_set_default_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GValue*" name="default_value" />
        </parameters>
      </method>
      <method name="SetDefinedSize" cname="gda_column_set_defined_size">
        <return-type type="void" />
        <parameters>
          <parameter type="glong" name="size" />
        </parameters>
      </method>
      <method name="SetGType" cname="gda_column_set_g_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="SetName" cname="gda_column_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gda_column_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetPrimaryKey" cname="gda_column_set_primary_key">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="pk" />
        </parameters>
      </method>
      <method name="SetReferences" cname="gda_column_set_references">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="ref" />
        </parameters>
      </method>
      <method name="SetScale" cname="gda_column_set_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="glong" name="scale" />
        </parameters>
      </method>
      <method name="SetTable" cname="gda_column_set_table">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="table" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gda_column_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetUniqueKey" cname="gda_column_set_unique_key">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="uk" />
        </parameters>
      </method>
    </object>
    <object name="ColumnIndex" cname="GdaColumnIndex" parent="GObject">
      <field name="Priv" cname="priv" type="GdaColumnIndexPrivate*" />
      <method name="Copy" cname="gda_column_index_copy">
        <return-type type="GdaColumnIndex*" owned="true" />
      </method>
      <method name="Equal" cname="gda_column_index_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdaColumnIndex*" name="rhs" />
        </parameters>
      </method>
      <method name="GetColumnName" cname="gda_column_index_get_column_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDefinedSize" cname="gda_column_index_get_defined_size">
        <return-type type="glong" />
      </method>
      <method name="GetReferences" cname="gda_column_index_get_references">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSorting" cname="gda_column_index_get_sorting">
        <return-type type="GdaSorting" />
      </method>
      <method name="GetType" cname="gda_column_index_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_column_index_new" />
      <method name="SetColumnName" cname="gda_column_index_set_column_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="column_name" />
        </parameters>
      </method>
      <method name="SetDefinedSize" cname="gda_column_index_set_defined_size">
        <return-type type="void" />
        <parameters>
          <parameter type="glong" name="size" />
        </parameters>
      </method>
      <method name="SetReferences" cname="gda_column_index_set_references">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="ref" />
        </parameters>
      </method>
      <method name="SetSorting" cname="gda_column_index_set_sorting">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaSorting" name="sorting" />
        </parameters>
      </method>
    </object>
    <object name="Connection" cname="GdaConnection" parent="GObject">
      <field name="Priv" cname="priv" type="GdaConnectionPrivate*" />
      <signal name="Error" cname="error" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaConnectionEvent*" name="error" />
        </parameters>
      </signal>
      <signal name="ConnOpened" cname="conn_opened" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="obj" />
        </parameters>
      </signal>
      <signal name="ConnToClose" cname="conn_to_close" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="obj" />
        </parameters>
      </signal>
      <signal name="ConnClosed" cname="conn_closed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="obj" />
        </parameters>
      </signal>
      <signal name="DsnChanged" cname="dsn_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="obj" />
        </parameters>
      </signal>
      <property name="Client" cname="client" type="gpointer" readable="true" writeable="true" />
      <property name="Dsn" cname="dsn" type="gchar*" readable="true" writeable="true" />
      <property name="CncString" cname="cnc_string" type="gchar*" readable="true" writeable="true" />
      <property name="ProviderObj" cname="provider_obj" type="gpointer" readable="true" writeable="true" />
      <property name="Username" cname="username" type="gchar*" readable="true" writeable="true" />
      <property name="Password" cname="password" type="gchar*" readable="true" writeable="true" />
      <property name="Options" cname="options" type="guint" readable="true" writeable="true" />
      <method name="AddEvent" cname="gda_connection_add_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnectionEvent*" name="error" />
        </parameters>
      </method>
      <method name="AddEventString" cname="gda_connection_add_event_string">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="AddEventsList" cname="gda_connection_add_events_list">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="events_list" />
        </parameters>
      </method>
      <method name="BeginTransaction" cname="gda_connection_begin_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="ChangeDatabase" cname="gda_connection_change_database">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="ClearEventsList" cname="gda_connection_clear_events_list">
        <return-type type="void" />
      </method>
      <method name="Close" cname="gda_connection_close">
        <return-type type="void" />
      </method>
      <method name="CloseNoWarning" cname="gda_connection_close_no_warning">
        <return-type type="void" />
      </method>
      <method name="CommitTransaction" cname="gda_connection_commit_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="CreateBlob" cname="gda_connection_create_blob">
        <return-type type="GdaBlob*" />
      </method>
      <method name="ExecuteCommand" cname="gda_connection_execute_command">
        <return-type type="GdaDataModel*" />
        <parameters>
          <parameter type="GdaCommand*" name="cmd" />
          <parameter type="GdaParameterList*" name="params" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ExecuteCommandL" cname="gda_connection_execute_command_l">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GdaCommand*" name="cmd" />
          <parameter type="GdaParameterList*" name="params" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="FetchBlobById" cname="gda_connection_fetch_blob_by_id">
        <return-type type="GdaBlob*" />
        <parameters>
          <parameter type="const-gchar*" name="sql_id" />
        </parameters>
      </method>
      <method name="GetClient" cname="gda_connection_get_client">
        <return-type type="GdaClient*" />
      </method>
      <method name="GetCncString" cname="gda_connection_get_cnc_string">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDatabase" cname="gda_connection_get_database">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDsn" cname="gda_connection_get_dsn">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetEvents" cname="gda_connection_get_events">
        <return-type type="const-GList*" />
      </method>
      <method name="GetInfos" cname="gda_connection_get_infos">
        <return-type type="GdaServerProviderInfo*" />
      </method>
      <method name="GetLastInsertId" cname="gda_connection_get_last_insert_id">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaDataModel*" name="recset" />
        </parameters>
      </method>
      <method name="GetOptions" cname="gda_connection_get_options">
        <return-type type="guint" />
      </method>
      <method name="GetPassword" cname="gda_connection_get_password">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetProvider" cname="gda_connection_get_provider">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetProviderObj" cname="gda_connection_get_provider_obj">
        <return-type type="GdaServerProvider*" />
      </method>
      <method name="GetSchema" cname="gda_connection_get_schema">
        <return-type type="GdaDataModel*" />
        <parameters>
          <parameter type="GdaConnectionSchema" name="schema" />
          <parameter type="GdaParameterList*" name="params" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetServerVersion" cname="gda_connection_get_server_version">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_connection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUsername" cname="gda_connection_get_username">
        <return-type type="const-gchar*" />
      </method>
      <method name="IsOpened" cname="gda_connection_is_opened">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_connection_new">
        <parameters>
          <parameter type="GdaClient*" name="client" />
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="const-gchar*" name="dsn" />
          <parameter type="const-gchar*" name="username" />
          <parameter type="const-gchar*" name="password" />
          <parameter type="guint" name="options" />
        </parameters>
      </constructor>
      <method name="Open" cname="gda_connection_open">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RollbackTransaction" cname="gda_connection_rollback_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="SetDsn" cname="gda_connection_set_dsn">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="datasource" />
        </parameters>
      </method>
      <method name="SetPassword" cname="gda_connection_set_password">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="password" />
        </parameters>
      </method>
      <method name="SetUsername" cname="gda_connection_set_username">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="username" />
        </parameters>
      </method>
      <method name="SupportsFeature" cname="gda_connection_supports_feature">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnectionFeature" name="feature" />
        </parameters>
      </method>
      <method name="ValueToSqlString" cname="gda_connection_value_to_sql_string">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GValue*" name="from" />
        </parameters>
      </method>
    </object>
    <object name="ConnectionEvent" cname="GdaConnectionEvent" parent="GObject">
      <field name="Priv" cname="priv" type="GdaConnectionEventPrivate*" />
      <method name="Free" cname="gda_connection_event_free">
        <return-type type="void" />
      </method>
      <method name="GetCode" cname="gda_connection_event_get_code">
        <return-type type="glong" />
      </method>
      <method name="GetDescription" cname="gda_connection_event_get_description">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetEventType" cname="gda_connection_event_get_event_type">
        <return-type type="GdaConnectionEventType" />
      </method>
      <method name="GetGdaCode" cname="gda_connection_event_get_gda_code">
        <return-type type="GdaConnectionEventCode" />
      </method>
      <method name="GetSource" cname="gda_connection_event_get_source">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSqlstate" cname="gda_connection_event_get_sqlstate">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_connection_event_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListCopy" cname="gda_connection_event_list_copy" shared="true">
        <return-type type="GList*" />
        <parameters>
          <parameter type="const-GList*" name="events" />
        </parameters>
      </method>
      <method name="ListFree" cname="gda_connection_event_list_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="events" />
        </parameters>
      </method>
      <constructor cname="gda_connection_event_new">
        <parameters>
          <parameter type="GdaConnectionEventType" name="type" />
        </parameters>
      </constructor>
      <method name="SetCode" cname="gda_connection_event_set_code">
        <return-type type="void" />
        <parameters>
          <parameter type="glong" name="code" />
        </parameters>
      </method>
      <method name="SetDescription" cname="gda_connection_event_set_description">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </method>
      <method name="SetEventType" cname="gda_connection_event_set_event_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnectionEventType" name="type" />
        </parameters>
      </method>
      <method name="SetGdaCode" cname="gda_connection_event_set_gda_code">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnectionEventCode" name="code" />
        </parameters>
      </method>
      <method name="SetSource" cname="gda_connection_event_set_source">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="source" />
        </parameters>
      </method>
      <method name="SetSqlstate" cname="gda_connection_event_set_sqlstate">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="sqlstate" />
        </parameters>
      </method>
    </object>
    <object name="DataAccessWrapper" cname="GdaDataAccessWrapper" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDataAccessWrapperPrivate*" />
      <property name="Model" cname="model" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <implements>
        <interface cname="GdaDataModel" />
      </implements>
      <method name="GetType" cname="gda_data_access_wrapper_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_data_access_wrapper_new">
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </constructor>
      <method name="RowExists" cname="gda_data_access_wrapper_row_exists">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
    </object>
    <object name="DataModelArray" cname="GdaDataModelArray" parent="GdaDataModelRow">
      <field name="Priv" cname="priv" type="GdaDataModelArrayPrivate*" />
      <method name="Clear" cname="gda_data_model_array_clear">
        <return-type type="void" />
      </method>
      <method name="CopyModel" cname="gda_data_model_array_copy_model" shared="true">
        <return-type type="GdaDataModel*" />
        <parameters>
          <parameter type="GdaDataModel*" name="src" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_data_model_array_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_data_model_array_new">
        <parameters>
          <parameter type="gint" name="cols" />
        </parameters>
      </constructor>
      <constructor cname="gda_data_model_array_new_with_g_types">
        <parameters>
          <parameter type="gint" name="cols" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="SetNColumns" cname="gda_data_model_array_set_n_columns">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="cols" />
        </parameters>
      </method>
    </object>
    <object name="DataModelFilterSQL" cname="GdaDataModelFilterSQL" parent="GdaDataModelArray">
      <field name="Priv" cname="priv" type="GdaDataModelFilterSQLPrivate*" />
      <method name="AddSource" cname="gda_data_model_filter_sql_add_source">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GdaDataModel*" name="source" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_data_model_filter_sql_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_data_model_filter_sql_new" />
      <method name="Run" cname="gda_data_model_filter_sql_run">
        <return-type type="gboolean" />
      </method>
      <method name="SetSql" cname="gda_data_model_filter_sql_set_sql">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="sql" />
        </parameters>
      </method>
    </object>
    <object name="DataModelHash" cname="GdaDataModelHash" parent="GdaDataModelRow">
      <field name="Priv" cname="priv" type="GdaDataModelHashPrivate*" />
      <method name="Clear" cname="gda_data_model_hash_clear">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gda_data_model_hash_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertRow" cname="gda_data_model_hash_insert_row">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="rownum" />
          <parameter type="GdaRow*" name="row" />
        </parameters>
      </method>
      <constructor cname="gda_data_model_hash_new">
        <parameters>
          <parameter type="gint" name="cols" />
        </parameters>
      </constructor>
      <method name="SetNColumns" cname="gda_data_model_hash_set_n_columns">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="cols" />
        </parameters>
      </method>
    </object>
    <object name="DataModelImport" cname="GdaDataModelImport" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDataModelImportPrivate*" />
      <property name="RandomAccess" cname="random_access" type="gboolean" readable="true" writeable="true" construct-only="true" />
      <property name="Filename" cname="filename" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="DataString" cname="data_string" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="XmlNode" cname="xml_node" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Options" cname="options" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <implements>
        <interface cname="GdaDataModel" />
      </implements>
      <method name="CleanErrors" cname="gda_data_model_import_clean_errors">
        <return-type type="void" />
      </method>
      <method name="FromFile" cname="gda_data_model_import_from_file" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="const-gchar*" name="file" />
          <parameter type="GHashTable*" name="cols_trans" />
          <parameter type="GdaParameterList*" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="FromModel" cname="gda_data_model_import_from_model" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="to" />
          <parameter type="GdaDataModel*" name="from" />
          <parameter type="GHashTable*" name="cols_trans" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="FromString" cname="gda_data_model_import_from_string" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="const-gchar*" name="string" />
          <parameter type="GHashTable*" name="cols_trans" />
          <parameter type="GdaParameterList*" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetErrors" cname="gda_data_model_import_get_errors">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gda_data_model_import_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_data_model_import_new_file">
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="gboolean" name="random_access" />
          <parameter type="GdaParameterList*" name="options" />
        </parameters>
      </constructor>
      <constructor cname="gda_data_model_import_new_mem">
        <parameters>
          <parameter type="const-gchar*" name="data" />
          <parameter type="gboolean" name="random_access" />
          <parameter type="GdaParameterList*" name="options" />
        </parameters>
      </constructor>
      <constructor cname="gda_data_model_import_new_xml_node">
        <parameters>
          <parameter type="xmlNodePtr" name="node" />
        </parameters>
      </constructor>
    </object>
    <object name="DataModelIter" cname="GdaDataModelIter" parent="GdaParameterList">
      <field name="Priv" cname="priv" type="GdaDataModelIterPrivate*" />
      <signal name="RowChanged" cname="row_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
          <parameter type="gint" name="row" />
        </parameters>
      </signal>
      <signal name="EndOfData" cname="end_of_data" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModelIter*" name="iter" />
        </parameters>
      </signal>
      <property name="DataModel" cname="data_model" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="ForcedModel" cname="forced_model" type="gpointer" readable="true" writeable="true" />
      <property name="CurrentRow" cname="current_row" type="gint" readable="true" writeable="true" />
      <property name="UpdateModel" cname="update_model" type="gboolean" readable="true" writeable="true" />
      <method name="GetColumnForParam" cname="gda_data_model_iter_get_column_for_param">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </method>
      <method name="GetParamForColumn" cname="gda_data_model_iter_get_param_for_column">
        <return-type type="GdaParameter*" />
        <parameters>
          <parameter type="gint" name="col" />
        </parameters>
      </method>
      <method name="GetRow" cname="gda_data_model_iter_get_row">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gda_data_model_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InvalidateContents" cname="gda_data_model_iter_invalidate_contents">
        <return-type type="void" />
      </method>
      <method name="IsValid" cname="gda_data_model_iter_is_valid">
        <return-type type="gboolean" />
      </method>
      <method name="MoveNext" cname="gda_data_model_iter_move_next">
        <return-type type="gboolean" />
      </method>
      <method name="MovePrev" cname="gda_data_model_iter_move_prev">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_data_model_iter_new">
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </constructor>
      <method name="SetAtRow" cname="gda_data_model_iter_set_at_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
    </object>
    <object name="DataModelQuery" cname="GdaDataModelQuery" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDataModelQueryPrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="InsertQuery" cname="insert_query" type="gpointer" readable="true" writeable="true" />
      <property name="UpdateQuery" cname="update_query" type="gpointer" readable="true" writeable="true" />
      <property name="DeleteQuery" cname="delete_query" type="gpointer" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaDataModel" />
      </implements>
      <method name="GetParamList" cname="gda_data_model_query_get_param_list">
        <return-type type="GdaParameterList*" />
      </method>
      <method name="GetType" cname="gda_data_model_query_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_data_model_query_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
        </parameters>
      </constructor>
      <method name="Refresh" cname="gda_data_model_query_refresh">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetModificationQuery" cname="gda_data_model_query_set_modification_query">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="query" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="DataModelRow" cname="GdaDataModelRow" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDataModelRowPrivate*" />
      <property name="ReadOnly" cname="read_only" type="gboolean" readable="true" writeable="true" />
      <property name="CommandText" cname="command_text" type="gchar*" readable="true" writeable="true" />
      <property name="CommandType" cname="command_type" type="gint" readable="true" writeable="true" />
      <virtual_method name="GetNRows" cname="get_n_rows">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNColumns" cname="get_n_columns">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRow" cname="get_row">
        <return-type type="GdaRow*" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
          <parameter type="gint" name="row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsUpdatable" cname="is_updatable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
        </parameters>
      </virtual_method>
      <virtual_method name="AppendValues" cname="append_values">
        <return-type type="GdaRow*" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
          <parameter type="const-GList*" name="values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="AppendRow" cname="append_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
          <parameter type="GdaRow*" name="row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="UpdateRow" cname="update_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
          <parameter type="GdaRow*" name="row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveRow" cname="remove_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModelRow*" name="model" />
          <parameter type="GdaRow*" name="row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <implements>
        <interface cname="GdaDataModel" />
      </implements>
      <method name="GetRow" cname="gda_data_model_row_get_row">
        <return-type type="GdaRow*" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_data_model_row_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Inserted" cname="gda_data_model_row_inserted" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="Removed" cname="gda_data_model_row_removed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="Updated" cname="gda_data_model_row_updated" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
    </object>
    <object name="DataProxy" cname="GdaDataProxy" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDataProxyPrivate*" />
      <signal name="RowDeleteChanged" cname="row_delete_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataProxy*" name="proxy" />
          <parameter type="gint" name="row" />
          <parameter type="gboolean" name="to_be_deleted" />
        </parameters>
      </signal>
      <signal name="SampleSizeChanged" cname="sample_size_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataProxy*" name="proxy" />
          <parameter type="gint" name="sample_size" />
        </parameters>
      </signal>
      <signal name="SampleChanged" cname="sample_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataProxy*" name="proxy" />
          <parameter type="gint" name="sample_start" />
          <parameter type="gint" name="sample_end" />
        </parameters>
      </signal>
      <property name="Model" cname="model" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Autocommit" cname="autocommit" type="gboolean" readable="true" writeable="true" />
      <property name="PrependNullEntry" cname="prepend_null_entry" type="gboolean" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaDataModel" />
      </implements>
      <method name="AlterValueAttributes" cname="gda_data_proxy_alter_value_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
          <parameter type="gint" name="col" />
          <parameter type="guint" name="alter_flags" />
        </parameters>
      </method>
      <method name="ApplyAllChanges" cname="gda_data_proxy_apply_all_changes">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ApplyRowChanges" cname="gda_data_proxy_apply_row_changes">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AssignModelCol" cname="gda_data_proxy_assign_model_col">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="proxy_col" />
          <parameter type="gint" name="model_col" />
        </parameters>
      </method>
      <method name="CancelAllChanges" cname="gda_data_proxy_cancel_all_changes">
        <return-type type="gboolean" />
      </method>
      <method name="CancelRowChanges" cname="gda_data_proxy_cancel_row_changes">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
          <parameter type="gint" name="col" />
        </parameters>
      </method>
      <method name="ClearModelRowValue" cname="gda_data_proxy_clear_model_row_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="proxy_row" />
          <parameter type="gint" name="extra_col" />
        </parameters>
      </method>
      <method name="Delete" cname="gda_data_proxy_delete">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
        </parameters>
      </method>
      <method name="FindRowFromValues" cname="gda_data_proxy_find_row_from_values">
        <return-type type="gint" />
        <parameters>
          <parameter type="GSList*" name="values" />
          <parameter type="gint*" name="cols_index" />
        </parameters>
      </method>
      <method name="GetAssignedModelCol" cname="gda_data_proxy_get_assigned_model_col">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="model_col" />
        </parameters>
      </method>
      <method name="GetModelRowValue" cname="gda_data_proxy_get_model_row_value">
        <return-type type="const-GValue*" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="proxy_row" />
          <parameter type="gint" name="extra_col" />
        </parameters>
      </method>
      <method name="GetNNewRows" cname="gda_data_proxy_get_n_new_rows">
        <return-type type="gint" />
      </method>
      <method name="GetProxiedModel" cname="gda_data_proxy_get_proxied_model">
        <return-type type="GdaDataModel*" />
      </method>
      <method name="GetProxiedModelNCols" cname="gda_data_proxy_get_proxied_model_n_cols">
        <return-type type="gint" />
      </method>
      <method name="GetProxiedModelNRows" cname="gda_data_proxy_get_proxied_model_n_rows">
        <return-type type="gint" />
      </method>
      <method name="GetProxiedModelRow" cname="gda_data_proxy_get_proxied_model_row">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
        </parameters>
      </method>
      <method name="GetSampleEnd" cname="gda_data_proxy_get_sample_end">
        <return-type type="gint" />
      </method>
      <method name="GetSampleSize" cname="gda_data_proxy_get_sample_size">
        <return-type type="gint" />
      </method>
      <method name="GetSampleStart" cname="gda_data_proxy_get_sample_start">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gda_data_proxy_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValueAttributes" cname="gda_data_proxy_get_value_attributes">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
          <parameter type="gint" name="col" />
        </parameters>
      </method>
      <method name="GetValues" cname="gda_data_proxy_get_values">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
          <parameter type="gint*" name="cols_index" />
          <parameter type="gint" name="n_cols" />
        </parameters>
      </method>
      <method name="HasChanged" cname="gda_data_proxy_has_changed">
        <return-type type="gboolean" />
      </method>
      <method name="IsReadOnly" cname="gda_data_proxy_is_read_only">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_data_proxy_new">
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </constructor>
      <method name="RowHasChanged" cname="gda_data_proxy_row_has_changed">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
        </parameters>
      </method>
      <method name="RowIsDeleted" cname="gda_data_proxy_row_is_deleted">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
        </parameters>
      </method>
      <method name="RowIsInserted" cname="gda_data_proxy_row_is_inserted">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
        </parameters>
      </method>
      <method name="SetModelRowValue" cname="gda_data_proxy_set_model_row_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="proxy_row" />
          <parameter type="gint" name="extra_col" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetSampleSize" cname="gda_data_proxy_set_sample_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sample_size" />
        </parameters>
      </method>
      <method name="SetSampleStart" cname="gda_data_proxy_set_sample_start">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sample_start" />
        </parameters>
      </method>
      <method name="Undelete" cname="gda_data_proxy_undelete">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="proxy_row" />
        </parameters>
      </method>
    </object>
    <object name="Dict" cname="GdaDict" parent="GObject">
      <field name="Priv" cname="priv" type="GdaDictPrivate*" />
      <signal name="ObjectAdded" cname="object_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="GdaObject*" name="obj" />
        </parameters>
      </signal>
      <signal name="ObjectRemoved" cname="object_removed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="GdaObject*" name="obj" />
        </parameters>
      </signal>
      <signal name="ObjectUpdated" cname="object_updated" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="GdaObject*" name="obj" />
        </parameters>
      </signal>
      <signal name="ObjectActChanged" cname="object_act_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="GdaObject*" name="obj" />
        </parameters>
      </signal>
      <signal name="DataUpdateStarted" cname="data_update_started" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </signal>
      <signal name="UpdateProgress" cname="update_progress" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="gchar*" name="msg" />
          <parameter type="guint" name="now" />
          <parameter type="guint" name="total" />
        </parameters>
      </signal>
      <signal name="DataUpdateFinished" cname="data_update_finished" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </signal>
      <signal name="Changed" cname="changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </signal>
      <property name="Dsn" cname="dsn" type="gchar*" readable="true" writeable="true" />
      <property name="Username" cname="username" type="gchar*" readable="true" writeable="true" />
      <method name="AssumeObject" cname="gda_dict_assume_object">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </method>
      <method name="AssumeObjectAs" cname="gda_dict_assume_object_as">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
          <parameter type="GType" name="as_type" />
        </parameters>
      </method>
      <method name="ComputeXmlFilename" cname="gda_dict_compute_xml_filename">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="datasource" />
          <parameter type="const-gchar*" name="app_id" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DeclareObject" cname="gda_dict_declare_object">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </method>
      <method name="DeclareObjectAs" cname="gda_dict_declare_object_as">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
          <parameter type="GType" name="as_type" />
        </parameters>
      </method>
      <method name="DeclareObjectStringIdChange" cname="gda_dict_declare_object_string_id_change">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="obj" />
          <parameter type="const-gchar*" name="oldid" />
        </parameters>
      </method>
      <method name="ExtendWithFunctions" cname="gda_dict_extend_with_functions">
        <return-type type="void" />
      </method>
      <method name="GetConnection" cname="gda_dict_get_connection">
        <return-type type="GdaConnection*" />
      </method>
      <method name="GetDatabase" cname="gda_dict_get_database">
        <return-type type="GdaDictDatabase*" />
      </method>
      <method name="GetDefaultHandler" cname="gda_dict_get_default_handler">
        <return-type type="GdaDataHandler*" />
        <parameters>
          <parameter type="GType" name="for_type" />
        </parameters>
      </method>
      <method name="GetHandler" cname="gda_dict_get_handler">
        <return-type type="GdaDataHandler*" />
        <parameters>
          <parameter type="GType" name="for_type" />
        </parameters>
      </method>
      <method name="GetObjectByName" cname="gda_dict_get_object_by_name">
        <return-type type="GdaObject*" />
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetObjectByStringId" cname="gda_dict_get_object_by_string_id">
        <return-type type="GdaObject*" />
        <parameters>
          <parameter type="const-gchar*" name="strid" />
        </parameters>
      </method>
      <method name="GetObjectByXmlId" cname="gda_dict_get_object_by_xml_id">
        <return-type type="GdaObject*" />
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="const-gchar*" name="xml_id" />
        </parameters>
      </method>
      <method name="GetObjects" cname="gda_dict_get_objects">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_dict_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetXmlFilename" cname="gda_dict_get_xml_filename">
        <return-type type="const-gchar*" />
      </method>
      <method name="Load" cname="gda_dict_load">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="LoadXmlFile" cname="gda_dict_load_xml_file">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="xmlfile" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <constructor cname="gda_dict_new" />
      <method name="Save" cname="gda_dict_save">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SaveXmlFile" cname="gda_dict_save_xml_file">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="xmlfile" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetConnection" cname="gda_dict_set_connection">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="SetXmlFilename" cname="gda_dict_set_xml_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="xmlfile" />
        </parameters>
      </method>
      <method name="StopUpdateDbmsData" cname="gda_dict_stop_update_dbms_meta_data">
        <return-type type="void" />
      </method>
      <method name="UnassumeObject" cname="gda_dict_unassume_object">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </method>
      <method name="UpdateDbmsData" cname="gda_dict_update_dbms_meta_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GType" name="limit_to_type" />
          <parameter type="const-gchar*" name="limit_obj_name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="DictAggregate" cname="GdaDictAggregate" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDictAggregatePrivate*" />
      <property name="Prop" cname="prop" type="gpointer" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
      </implements>
      <method name="GetArgType" cname="gda_dict_aggregate_get_arg_dict_type">
        <return-type type="GdaDictType*" />
      </method>
      <method name="GetDbmsId" cname="gda_dict_aggregate_get_dbms_id">
        <return-type type="gchar*" />
      </method>
      <method name="GetRetType" cname="gda_dict_aggregate_get_ret_dict_type">
        <return-type type="GdaDictType*" />
      </method>
      <method name="GetSqlname" cname="gda_dict_aggregate_get_sqlname">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_dict_aggregate_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_dict_aggregate_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <method name="SetArgType" cname="gda_dict_aggregate_set_arg_dict_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictType*" name="dt" />
        </parameters>
      </method>
      <method name="SetDbmsId" cname="gda_dict_aggregate_set_dbms_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="id" />
        </parameters>
      </method>
      <method name="SetRetType" cname="gda_dict_aggregate_set_ret_dict_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictType*" name="dt" />
        </parameters>
      </method>
      <method name="SetSqlname" cname="gda_dict_aggregate_set_sqlname">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="sqlname" />
        </parameters>
      </method>
    </object>
    <object name="DictConstraint" cname="GdaDictConstraint" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDictConstraintPrivate*" />
      <property name="UserConstraint" cname="user_constraint" type="gboolean" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
      </implements>
      <method name="Equal" cname="gda_dict_constraint_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDictConstraint*" name="cstr2" />
        </parameters>
      </method>
      <method name="FkeyGetActions" cname="gda_dict_constraint_fkey_get_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictConstraintFkAction*" name="on_update" />
          <parameter type="GdaDictConstraintFkAction*" name="on_delete" />
        </parameters>
      </method>
      <method name="FkeyGetFields" cname="gda_dict_constraint_fkey_get_fields">
        <return-type type="GSList*" />
      </method>
      <method name="FkeyGetRefTable" cname="gda_dict_constraint_fkey_get_ref_table">
        <return-type type="GdaDictTable*" />
      </method>
      <method name="FkeySetActions" cname="gda_dict_constraint_fkey_set_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictConstraintFkAction" name="on_update" />
          <parameter type="GdaDictConstraintFkAction" name="on_delete" />
        </parameters>
      </method>
      <method name="FkeySetFields" cname="gda_dict_constraint_fkey_set_fields">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GSList*" name="pairs" />
        </parameters>
      </method>
      <method name="GetConstraintType" cname="gda_dict_constraint_get_constraint_type">
        <return-type type="GdaDictConstraintType" />
      </method>
      <method name="GetTable" cname="gda_dict_constraint_get_table">
        <return-type type="GdaDictTable*" />
      </method>
      <method name="GetType" cname="gda_dict_constraint_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_dict_constraint_new">
        <parameters>
          <parameter type="GdaDictTable*" name="table" />
          <parameter type="GdaDictConstraintType" name="type" />
        </parameters>
      </constructor>
      <constructor cname="gda_dict_constraint_new_with_db">
        <parameters>
          <parameter type="GdaDictDatabase*" name="db" />
        </parameters>
      </constructor>
      <method name="NotNullGetField" cname="gda_dict_constraint_not_null_get_field">
        <return-type type="GdaDictField*" />
      </method>
      <method name="NotNullSetField" cname="gda_dict_constraint_not_null_set_field">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictField*" name="field" />
        </parameters>
      </method>
      <method name="PkeyGetFields" cname="gda_dict_constraint_pkey_get_fields">
        <return-type type="GSList*" />
      </method>
      <method name="PkeySetFields" cname="gda_dict_constraint_pkey_set_fields">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GSList*" name="fields" />
        </parameters>
      </method>
      <method name="UniqueGetFields" cname="gda_dict_constraint_unique_get_fields">
        <return-type type="GSList*" />
      </method>
      <method name="UniqueSetFields" cname="gda_dict_constraint_unique_set_fields">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GSList*" name="fields" />
        </parameters>
      </method>
      <method name="UsesField" cname="gda_dict_constraint_uses_field">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDictField*" name="field" />
        </parameters>
      </method>
    </object>
    <object name="DictDatabase" cname="GdaDictDatabase" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDictDatabasePrivate*" />
      <signal name="TableAdded" cname="table_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictTable*" name="table" />
        </parameters>
      </signal>
      <signal name="TableRemoved" cname="table_removed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictTable*" name="table" />
        </parameters>
      </signal>
      <signal name="TableUpdated" cname="table_updated" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictTable*" name="table" />
        </parameters>
      </signal>
      <signal name="FieldAdded" cname="field_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictField*" name="field" />
        </parameters>
      </signal>
      <signal name="FieldRemoved" cname="field_removed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictField*" name="field" />
        </parameters>
      </signal>
      <signal name="FieldUpdated" cname="field_updated" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictField*" name="field" />
        </parameters>
      </signal>
      <signal name="ConstraintAdded" cname="constraint_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictConstraint*" name="cstr" />
        </parameters>
      </signal>
      <signal name="ConstraintRemoved" cname="constraint_removed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictConstraint*" name="cstr" />
        </parameters>
      </signal>
      <signal name="ConstraintUpdated" cname="constraint_updated" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="GdaDictConstraint*" name="cstr" />
        </parameters>
      </signal>
      <signal name="DataUpdateStarted" cname="data_update_started" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
        </parameters>
      </signal>
      <signal name="UpdateProgress" cname="update_progress" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
          <parameter type="gchar*" name="msg" />
          <parameter type="guint" name="now" />
          <parameter type="guint" name="total" />
        </parameters>
      </signal>
      <signal name="DataUpdateFinished" cname="data_update_finished" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictDatabase*" name="obj" />
        </parameters>
      </signal>
      <property name="Prop" cname="prop" type="gpointer" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
      </implements>
      <method name="AddConstraint" cname="gda_dict_database_add_constraint">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictConstraint*" name="cstr" />
        </parameters>
      </method>
      <method name="GetAllConstraints" cname="gda_dict_database_get_all_constraints">
        <return-type type="GSList*" />
      </method>
      <method name="GetAllFkConstraints" cname="gda_dict_database_get_all_fk_constraints">
        <return-type type="GSList*" />
      </method>
      <method name="GetDict" cname="gda_dict_database_get_dict">
        <return-type type="GdaDict*" />
      </method>
      <method name="GetFieldByName" cname="gda_dict_database_get_field_by_name">
        <return-type type="GdaDictField*" />
        <parameters>
          <parameter type="const-gchar*" name="fullname" />
        </parameters>
      </method>
      <method name="GetFieldByXmlId" cname="gda_dict_database_get_field_by_xml_id">
        <return-type type="GdaDictField*" />
        <parameters>
          <parameter type="const-gchar*" name="xml_id" />
        </parameters>
      </method>
      <method name="GetTableByName" cname="gda_dict_database_get_table_by_name">
        <return-type type="GdaDictTable*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetTableByXmlId" cname="gda_dict_database_get_table_by_xml_id">
        <return-type type="GdaDictTable*" />
        <parameters>
          <parameter type="const-gchar*" name="xml_id" />
        </parameters>
      </method>
      <method name="GetTableConstraints" cname="gda_dict_database_get_table_constraints">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaDictTable*" name="table" />
        </parameters>
      </method>
      <method name="GetTables" cname="gda_dict_database_get_tables">
        <return-type type="GSList*" />
      </method>
      <method name="GetTablesFkConstraints" cname="gda_dict_database_get_tables_fk_constraints">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaDictTable*" name="table1" />
          <parameter type="GdaDictTable*" name="table2" />
          <parameter type="gboolean" name="table1_has_fk" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_dict_database_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_dict_database_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <method name="StopUpdateDbmsData" cname="gda_dict_database_stop_update_dbms_data">
        <return-type type="void" />
      </method>
      <method name="UpdateDbmsData" cname="gda_dict_database_update_dbms_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GType" name="limit_to_type" />
          <parameter type="const-gchar*" name="limit_obj_name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="DictField" cname="GdaDictField" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDictFieldPrivate*" />
      <property name="DbTable" cname="db_table" type="gpointer" readable="true" writeable="true" />
      <property name="EntryPlugin" cname="entry_plugin" type="gchar*" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaRenderer" />
      </implements>
      <method name="GetAttributes" cname="gda_dict_field_get_attributes">
        <return-type type="guint" />
      </method>
      <method name="GetConstraints" cname="gda_dict_field_get_constraints">
        <return-type type="GSList*" />
      </method>
      <method name="GetDefaultValue" cname="gda_dict_field_get_default_value">
        <return-type type="const-GValue*" />
      </method>
      <method name="GetLength" cname="gda_dict_field_get_length">
        <return-type type="gint" />
      </method>
      <method name="GetScale" cname="gda_dict_field_get_scale">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gda_dict_field_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsFkeyAlone" cname="gda_dict_field_is_fkey_alone">
        <return-type type="gboolean" />
      </method>
      <method name="IsFkeyPart" cname="gda_dict_field_is_fkey_part">
        <return-type type="gboolean" />
      </method>
      <method name="IsNullAllowed" cname="gda_dict_field_is_null_allowed">
        <return-type type="gboolean" />
      </method>
      <method name="IsPkeyAlone" cname="gda_dict_field_is_pkey_alone">
        <return-type type="gboolean" />
      </method>
      <method name="IsPkeyPart" cname="gda_dict_field_is_pkey_part">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_dict_field_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="GdaDictType*" name="type" />
        </parameters>
      </constructor>
      <method name="SetAttributes" cname="gda_dict_field_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="attributes" />
        </parameters>
      </method>
      <method name="SetDefaultValue" cname="gda_dict_field_set_default_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetDictType" cname="gda_dict_field_set_dict_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictType*" name="type" />
        </parameters>
      </method>
      <method name="SetLength" cname="gda_dict_field_set_length">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="length" />
        </parameters>
      </method>
      <method name="SetScale" cname="gda_dict_field_set_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="length" />
        </parameters>
      </method>
    </object>
    <object name="DictFunction" cname="GdaDictFunction" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDictFunctionPrivate*" />
      <property name="Prop" cname="prop" type="gpointer" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
      </implements>
      <method name="AcceptsArgs" cname="gda_dict_function_accepts_arg_dict_types">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GSList*" name="arg_types" />
        </parameters>
      </method>
      <method name="GetArgTypes" cname="gda_dict_function_get_arg_dict_types">
        <return-type type="const-GSList*" />
      </method>
      <method name="GetDbmsId" cname="gda_dict_function_get_dbms_id">
        <return-type type="gchar*" />
      </method>
      <method name="GetRetType" cname="gda_dict_function_get_ret_dict_type">
        <return-type type="GdaDictType*" />
      </method>
      <method name="GetSqlname" cname="gda_dict_function_get_sqlname">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_dict_function_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_dict_function_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <method name="SetArgTypes" cname="gda_dict_function_set_arg_dict_types">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GSList*" name="arg_types" />
        </parameters>
      </method>
      <method name="SetDbmsId" cname="gda_dict_function_set_dbms_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="id" />
        </parameters>
      </method>
      <method name="SetRetType" cname="gda_dict_function_set_ret_dict_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictType*" name="dt" />
        </parameters>
      </method>
      <method name="SetSqlname" cname="gda_dict_function_set_sqlname">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="sqlname" />
        </parameters>
      </method>
    </object>
    <object name="DictTable" cname="GdaDictTable" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDictTablePrivate*" />
      <property name="Database" cname="database" type="gpointer" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
      </implements>
      <method name="GetConstraints" cname="gda_dict_table_get_constraints">
        <return-type type="GSList*" />
      </method>
      <method name="GetDatabase" cname="gda_dict_table_get_database">
        <return-type type="GdaDictDatabase*" />
      </method>
      <method name="GetParents" cname="gda_dict_table_get_parents">
        <return-type type="const-GSList*" />
      </method>
      <method name="GetPkConstraint" cname="gda_dict_table_get_pk_constraint">
        <return-type type="GdaDictConstraint*" />
      </method>
      <method name="GetType" cname="gda_dict_table_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsView" cname="gda_dict_table_is_view">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_dict_table_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <method name="UpdateDbmsData" cname="gda_dict_table_update_dbms_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="DictType" cname="GdaDictType" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaDictTypePrivate*" />
      <property name="Prop" cname="prop" type="gpointer" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
      </implements>
      <method name="AddSynonym" cname="gda_dict_type_add_synonym">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="synonym" />
        </parameters>
      </method>
      <method name="ClearSynonyms" cname="gda_dict_type_clear_synonyms">
        <return-type type="void" />
      </method>
      <method name="GetGType" cname="gda_dict_type_get_g_type">
        <return-type type="GType" />
      </method>
      <method name="GetSqlname" cname="gda_dict_type_get_sqlname">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSynonyms" cname="gda_dict_type_get_synonyms">
        <return-type type="const-GSList*" />
      </method>
      <method name="GetType" cname="gda_dict_type_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_dict_type_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <method name="SetGType" cname="gda_dict_type_set_g_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="g_type" />
        </parameters>
      </method>
      <method name="SetSqlname" cname="gda_dict_type_set_sqlname">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="sqlname" />
        </parameters>
      </method>
    </object>
    <object name="Graphviz" cname="GdaGraphviz" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaGraphvizPrivate*" />
      <property name="Prop" cname="prop" type="gpointer" readable="true" writeable="true" />
      <method name="AddToGraph" cname="gda_graphviz_add_to_graph">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_graphviz_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_graphviz_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <method name="SaveFile" cname="gda_graphviz_save_file">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="Object" cname="GdaObject" parent="GObject">
      <field name="Priv" cname="priv" type="GdaObjectPrivate*" />
      <signal name="Changed" cname="changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </signal>
      <signal name="NameChanged" cname="name_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </signal>
      <signal name="IdChanged" cname="id_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </signal>
      <signal name="DescrChanged" cname="descr_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </signal>
      <signal name="OwnerChanged" cname="owner_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </signal>
      <signal name="Destroyed" cname="destroyed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </signal>
      <signal name="ToBeDestroyed" cname="to_be_destroyed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </signal>
      <property name="Dict" cname="dict" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="ChangedBlocked" cname="changed_blocked" type="gboolean" readable="true" writeable="true" />
      <property name="StringId" cname="string_id" type="gchar*" readable="true" writeable="true" />
      <virtual_method name="SignalChanged" cname="signal_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
          <parameter type="gboolean" name="block_changed_signal" />
        </parameters>
      </virtual_method>
      <method name="BlockChanged" cname="gda_object_block_changed">
        <return-type type="void" />
      </method>
      <method name="ConnectDestroy" cname="gda_object_connect_destroy" shared="true">
        <return-type type="gulong" />
        <parameters>
          <parameter type="gpointer" name="object" />
          <parameter type="GCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Destroy" cname="gda_object_destroy">
        <return-type type="void" />
      </method>
      <method name="DestroyCheck" cname="gda_object_destroy_check">
        <return-type type="void" />
      </method>
      <method name="GetDescription" cname="gda_object_get_description">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDict" cname="gda_object_get_dict">
        <return-type type="GdaDict*" />
      </method>
      <method name="GetId" cname="gda_object_get_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetName" cname="gda_object_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetOwner" cname="gda_object_get_owner">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_object_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetDescription" cname="gda_object_set_description">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="descr" />
        </parameters>
      </method>
      <method name="SetId" cname="gda_object_set_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="strid" />
        </parameters>
      </method>
      <method name="SetName" cname="gda_object_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetOwner" cname="gda_object_set_owner">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="owner" />
        </parameters>
      </method>
      <method name="SignalEmitChanged" cname="gda_object_signal_emit_changed">
        <return-type type="void" />
      </method>
      <method name="UnblockChanged" cname="gda_object_unblock_changed">
        <return-type type="void" />
      </method>
    </object>
    <object name="ObjectRef" cname="GdaObjectRef" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaObjectRefPrivate*" />
      <signal name="RefFound" cname="ref_found" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObjectRef*" name="obj" />
        </parameters>
      </signal>
      <signal name="RefLost" cname="ref_lost" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObjectRef*" name="obj" />
        </parameters>
      </signal>
      <property name="HelperRef" cname="helper_ref" type="gpointer" readable="true" writeable="true" />
      <property name="ObjName" cname="obj_name" type="gchar*" readable="true" writeable="true" />
      <method name="Activate" cname="gda_object_ref_activate">
        <return-type type="gboolean" />
      </method>
      <method name="Deactivate" cname="gda_object_ref_deactivate">
        <return-type type="void" />
      </method>
      <method name="GetRefName" cname="gda_object_ref_get_ref_name">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GType*" name="ref_type" />
          <parameter type="GdaObjectRefType*" name="type" />
        </parameters>
      </method>
      <method name="GetRefObject" cname="gda_object_ref_get_ref_object">
        <return-type type="GdaObject*" />
      </method>
      <method name="GetRefObjectName" cname="gda_object_ref_get_ref_object_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetRefType" cname="gda_object_ref_get_ref_type">
        <return-type type="GType" />
      </method>
      <method name="GetType" cname="gda_object_ref_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsActive" cname="gda_object_ref_is_active">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_object_ref_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <constructor cname="gda_object_ref_new_copy">
        <parameters>
          <parameter type="GdaObjectRef*" name="orig" />
        </parameters>
      </constructor>
      <constructor cname="gda_object_ref_new_no_ref_count">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <method name="ReplaceRefObject" cname="gda_object_ref_replace_ref_object">
        <return-type type="void" />
        <parameters>
          <parameter type="GHashTable*" name="replacements" />
        </parameters>
      </method>
      <method name="SetRefName" cname="gda_object_ref_set_ref_name">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="ref_type" />
          <parameter type="GdaObjectRefType" name="type" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetRefObject" cname="gda_object_ref_set_ref_object">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
        </parameters>
      </method>
      <method name="SetRefObjectType" cname="gda_object_ref_set_ref_object_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="object" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
    </object>
    <object name="Parameter" cname="GdaParameter" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaParameterPrivate*" />
      <signal name="RestrictChanged" cname="restrict_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </signal>
      <property name="GType" cname="g_type" type="ulong" readable="true" writeable="true" construct-only="true" />
      <property name="EntryPlugin" cname="entry_plugin" type="gchar*" readable="true" writeable="true" />
      <property name="UseDefaultValue" cname="use_default_value" type="gboolean" readable="true" writeable="true" />
      <property name="SimpleBind" cname="simple_bind" type="gpointer" readable="true" writeable="true" />
      <property name="FullBind" cname="full_bind" type="gpointer" readable="true" writeable="true" />
      <property name="RestrictModel" cname="restrict_model" type="gpointer" readable="true" writeable="true" />
      <property name="RestrictColumn" cname="restrict_column" type="gint" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaReferer" />
      </implements>
      <method name="BindToParam" cname="gda_parameter_bind_to_param">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameter*" name="bind_to" />
        </parameters>
      </method>
      <method name="DeclareInvalid" cname="gda_parameter_declare_invalid">
        <return-type type="void" />
      </method>
      <method name="DeclareParamUser" cname="gda_parameter_declare_param_user">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaObject*" name="user" />
        </parameters>
      </method>
      <method name="GetBindParam" cname="gda_parameter_get_bind_param">
        <return-type type="GdaParameter*" />
      </method>
      <method name="GetDefaultValue" cname="gda_parameter_get_default_value">
        <return-type type="const-GValue*" />
      </method>
      <method name="GetExistsDefaultValue" cname="gda_parameter_get_exists_default_value">
        <return-type type="gboolean" />
      </method>
      <method name="GetGType" cname="gda_parameter_get_g_type">
        <return-type type="GType" />
      </method>
      <method name="GetNotNull" cname="gda_parameter_get_not_null">
        <return-type type="gboolean" />
      </method>
      <method name="GetParamUsers" cname="gda_parameter_get_param_users">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gda_parameter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValue" cname="gda_parameter_get_value">
        <return-type type="const-GValue*" />
      </method>
      <method name="HasRestrictValues" cname="gda_parameter_has_restrict_values">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel**" name="model" />
          <parameter type="gint*" name="col" />
        </parameters>
      </method>
      <method name="IsValid" cname="gda_parameter_is_valid">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_parameter_new">
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </constructor>
      <constructor cname="gda_parameter_new_boolean">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="gboolean" name="value" />
        </parameters>
      </constructor>
      <constructor cname="gda_parameter_new_copy">
        <parameters>
          <parameter type="GdaParameter*" name="orig" />
        </parameters>
      </constructor>
      <constructor cname="gda_parameter_new_string">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </constructor>
      <method name="ReplaceParamUsers" cname="gda_parameter_replace_param_users">
        <return-type type="void" />
        <parameters>
          <parameter type="GHashTable*" name="replacements" />
        </parameters>
      </method>
      <method name="RestrictValues" cname="gda_parameter_restrict_values">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="col" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetDefaultValue" cname="gda_parameter_set_default_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetExistsDefaultValue" cname="gda_parameter_set_exists_default_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="default_value_exists" />
        </parameters>
      </method>
      <method name="SetNotNull" cname="gda_parameter_set_not_null">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="not_null" />
        </parameters>
      </method>
      <method name="SetValue" cname="gda_parameter_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetValueStr" cname="gda_parameter_set_value_str">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="value" />
        </parameters>
      </method>
    </object>
    <object name="ParameterList" cname="GdaParameterList" parent="GdaObject">
      <field name="Parameters" cname="parameters" type="GSList*" />
      <field name="NodesList" cname="nodes_list" type="GSList*" />
      <field name="SourcesList" cname="sources_list" type="GSList*" />
      <field name="GroupsList" cname="groups_list" type="GSList*" />
      <field name="Priv" cname="priv" type="GdaParameterListPrivate*" />
      <signal name="ParamChanged" cname="param_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameterList*" name="paramlist" />
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </signal>
      <signal name="PublicDataChanged" cname="public_data_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameterList*" name="paramlist" />
        </parameters>
      </signal>
      <method name="AddParam" cname="gda_parameter_list_add_param">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </method>
      <method name="AddParamFromString" cname="gda_parameter_list_add_param_from_string">
        <return-type type="GdaParameter*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GType" name="type" />
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="AddParamFromValue" cname="gda_parameter_list_add_param_from_value">
        <return-type type="GdaParameter*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="FindGroupForParam" cname="gda_parameter_list_find_group_for_param">
        <return-type type="GdaParameterListGroup*" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </method>
      <method name="FindNodeForParam" cname="gda_parameter_list_find_node_for_param">
        <return-type type="GdaParameterListNode*" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </method>
      <method name="FindParam" cname="gda_parameter_list_find_param">
        <return-type type="GdaParameter*" />
        <parameters>
          <parameter type="const-gchar*" name="param_name" />
        </parameters>
      </method>
      <method name="FindParamForUser" cname="gda_parameter_list_find_param_for_user">
        <return-type type="GdaParameter*" />
        <parameters>
          <parameter type="GdaObject*" name="user" />
        </parameters>
      </method>
      <method name="FindSource" cname="gda_parameter_list_find_source">
        <return-type type="GdaParameterListSource*" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </method>
      <method name="FindSourceForParam" cname="gda_parameter_list_find_source_for_param">
        <return-type type="GdaParameterListSource*" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </method>
      <method name="GetLength" cname="gda_parameter_list_get_length">
        <return-type type="guint" />
      </method>
      <method name="GetParamDefaultValue" cname="gda_parameter_list_get_param_default_value">
        <return-type type="const-GValue*" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
        </parameters>
      </method>
      <method name="GetSpec" cname="gda_parameter_list_get_spec">
        <return-type type="gchar*" />
      </method>
      <method name="GetType" cname="gda_parameter_list_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsCoherent" cname="gda_parameter_list_is_coherent">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="IsValid" cname="gda_parameter_list_is_valid">
        <return-type type="gboolean" />
      </method>
      <method name="Merge" cname="gda_parameter_list_merge">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameterList*" name="paramlist_to_merge" />
        </parameters>
      </method>
      <constructor cname="gda_parameter_list_new">
        <parameters>
          <parameter type="GSList*" name="params" />
        </parameters>
      </constructor>
      <constructor cname="gda_parameter_list_new_from_spec_node">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="xmlNodePtr" name="xml_spec" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gda_parameter_list_new_from_spec_string">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="xml_spec" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="SetParamDefaultAlias" cname="gda_parameter_list_set_param_default_alias">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
          <parameter type="GdaParameter*" name="alias" />
        </parameters>
      </method>
      <method name="SetParamDefaultValue" cname="gda_parameter_list_set_param_default_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaParameter*" name="param" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
    </object>
    <object name="Query" cname="GdaQuery" parent="GdaQueryObject">
      <field name="Priv" cname="priv" type="GdaQueryPrivate*" />
      <signal name="TypeChanged" cname="type_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
        </parameters>
      </signal>
      <signal name="ConditionChanged" cname="condition_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
        </parameters>
      </signal>
      <signal name="TargetAdded" cname="target_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryTarget*" name="target" />
        </parameters>
      </signal>
      <signal name="TargetRemoved" cname="target_removed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryTarget*" name="target" />
        </parameters>
      </signal>
      <signal name="TargetUpdated" cname="target_updated" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryTarget*" name="target" />
        </parameters>
      </signal>
      <signal name="JoinAdded" cname="join_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryJoin*" name="join" />
        </parameters>
      </signal>
      <signal name="JoinRemoved" cname="join_removed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryJoin*" name="join" />
        </parameters>
      </signal>
      <signal name="JoinUpdated" cname="join_updated" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryJoin*" name="join" />
        </parameters>
      </signal>
      <signal name="SubQueryAdded" cname="sub_query_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQuery*" name="sub_query" />
        </parameters>
      </signal>
      <signal name="SubQueryRemoved" cname="sub_query_removed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQuery*" name="sub_query" />
        </parameters>
      </signal>
      <signal name="SubQueryUpdated" cname="sub_query_updated" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQuery*" name="sub_query" />
        </parameters>
      </signal>
      <property name="TargetSerial" cname="target_serial" type="guint" readable="true" />
      <property name="FieldSerial" cname="field_serial" type="guint" readable="true" />
      <property name="CondSerial" cname="cond_serial" type="guint" readable="true" />
      <property name="ReallyAllFields" cname="really_all_fields" type="gpointer" readable="true" />
      <property name="AutoClean" cname="auto_clean" type="gboolean" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaEntity" />
        <interface cname="GdaReferer" />
      </implements>
      <method name="AddFieldFromSql" cname="gda_query_add_field_from_sql">
        <return-type type="GdaQueryField*" />
        <parameters>
          <parameter type="const-gchar*" name="field" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AddJoin" cname="gda_query_add_join">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryJoin*" name="join" />
        </parameters>
      </method>
      <method name="AddParamSource" cname="gda_query_add_param_source">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="param_source" />
        </parameters>
      </method>
      <method name="AddSubQuery" cname="gda_query_add_sub_query">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="sub_query" />
        </parameters>
      </method>
      <method name="AddTarget" cname="gda_query_add_target">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AppendCondition" cname="gda_query_append_condition">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="cond" />
          <parameter type="gboolean" name="append_as_and" />
        </parameters>
      </method>
      <method name="DeclareCondition" cname="gda_query_declare_condition">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="cond" />
        </parameters>
      </method>
      <method name="DelJoin" cname="gda_query_del_join">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryJoin*" name="join" />
        </parameters>
      </method>
      <method name="DelParamSource" cname="gda_query_del_param_source">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="param_source" />
        </parameters>
      </method>
      <method name="DelSubQuery" cname="gda_query_del_sub_query">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="sub_query" />
        </parameters>
      </method>
      <method name="DelTarget" cname="gda_query_del_target">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target" />
        </parameters>
      </method>
      <method name="Execute" cname="gda_query_execute">
        <return-type type="GdaDataModel*" />
        <parameters>
          <parameter type="GdaParameterList*" name="params" />
          <parameter type="gboolean" name="iter_model_only_requested" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ExpandAllField" cname="gda_query_expand_all_field">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target" />
        </parameters>
      </method>
      <method name="GetAllFields" cname="gda_query_get_all_fields">
        <return-type type="GSList*" />
      </method>
      <method name="GetCondition" cname="gda_query_get_condition">
        <return-type type="GdaQueryCondition*" />
      </method>
      <method name="GetFieldByRefField" cname="gda_query_get_field_by_ref_field">
        <return-type type="GdaQueryField*" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target" />
          <parameter type="GdaEntityField*" name="ref_field" />
          <parameter type="GdaQueryFieldState" name="field_state" />
        </parameters>
      </method>
      <method name="GetFieldBySqlNaming" cname="gda_query_get_field_by_sql_naming">
        <return-type type="GdaQueryField*" />
        <parameters>
          <parameter type="const-gchar*" name="sql_naming" />
        </parameters>
      </method>
      <method name="GetFieldBySqlNamingFields" cname="gda_query_get_field_by_sql_naming_fields">
        <return-type type="GdaQueryField*" />
        <parameters>
          <parameter type="const-gchar*" name="sql_name" />
          <parameter type="GSList*" name="fields_list" />
        </parameters>
      </method>
      <method name="GetFieldsByTarget" cname="gda_query_get_fields_by_target">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target" />
          <parameter type="gboolean" name="visible_fields_only" />
        </parameters>
      </method>
      <method name="GetFirstFieldForTarget" cname="gda_query_get_first_field_for_target">
        <return-type type="GdaQueryField*" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target" />
        </parameters>
      </method>
      <method name="GetJoinByTargets" cname="gda_query_get_join_by_targets">
        <return-type type="GdaQueryJoin*" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target1" />
          <parameter type="GdaQueryTarget*" name="target2" />
        </parameters>
      </method>
      <method name="GetJoins" cname="gda_query_get_joins">
        <return-type type="GSList*" />
      </method>
      <method name="GetMainConditions" cname="gda_query_get_main_conditions">
        <return-type type="GSList*" />
      </method>
      <method name="GetOrderByField" cname="gda_query_get_order_by_field">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaQueryField*" name="field" />
          <parameter type="gboolean*" name="ascendant" />
        </parameters>
      </method>
      <method name="GetParamSources" cname="gda_query_get_param_sources">
        <return-type type="const-GSList*" />
      </method>
      <method name="GetParameters" cname="gda_query_get_parameters">
        <return-type type="GSList*" />
      </method>
      <method name="GetParametersBoxed" cname="gda_query_get_parameters_boxed">
        <return-type type="GdaParameterList*" />
      </method>
      <method name="GetParentQuery" cname="gda_query_get_parent_query">
        <return-type type="GdaQuery*" />
      </method>
      <method name="GetQueryType" cname="gda_query_get_query_type">
        <return-type type="GdaQueryType" />
      </method>
      <method name="GetQueryTypeString" cname="gda_query_get_query_type_string">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSqlText" cname="gda_query_get_sql_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSubQueries" cname="gda_query_get_sub_queries">
        <return-type type="GSList*" />
      </method>
      <method name="GetTargetByAlias" cname="gda_query_get_target_by_alias">
        <return-type type="GdaQueryTarget*" />
        <parameters>
          <parameter type="const-gchar*" name="alias_or_name" />
        </parameters>
      </method>
      <method name="GetTargetByXmlId" cname="gda_query_get_target_by_xml_id">
        <return-type type="GdaQueryTarget*" />
        <parameters>
          <parameter type="const-gchar*" name="xml_id" />
        </parameters>
      </method>
      <method name="GetTargetPkfields" cname="gda_query_get_target_pkfields">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaQueryTarget*" name="target" />
        </parameters>
      </method>
      <method name="GetTargets" cname="gda_query_get_targets">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gda_query_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsDeleteQuery" cname="gda_query_is_delete_query">
        <return-type type="gboolean" />
      </method>
      <method name="IsInsertQuery" cname="gda_query_is_insert_query">
        <return-type type="gboolean" />
      </method>
      <method name="IsModifQuery" cname="gda_query_is_modif_query">
        <return-type type="gboolean" />
      </method>
      <method name="IsSelectQuery" cname="gda_query_is_select_query">
        <return-type type="gboolean" />
      </method>
      <method name="IsUpdateQuery" cname="gda_query_is_update_query">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_query_new">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_new_copy">
        <parameters>
          <parameter type="GdaQuery*" name="orig" />
          <parameter type="GHashTable*" name="replacements" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_new_from_sql">
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="sql" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="OrderFieldsUsingJoinConds" cname="gda_query_order_fields_using_join_conds">
        <return-type type="void" />
      </method>
      <method name="SetCondition" cname="gda_query_set_condition">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="cond" />
        </parameters>
      </method>
      <method name="SetOrderByField" cname="gda_query_set_order_by_field">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryField*" name="field" />
          <parameter type="gint" name="order" />
          <parameter type="gboolean" name="ascendant" />
        </parameters>
      </method>
      <method name="SetQueryType" cname="gda_query_set_query_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryType" name="type" />
        </parameters>
      </method>
      <method name="SetSqlText" cname="gda_query_set_sql_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="sql" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="UndeclareCondition" cname="gda_query_undeclare_condition">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="cond" />
        </parameters>
      </method>
    </object>
    <object name="QueryCondition" cname="GdaQueryCondition" parent="GdaQueryObject">
      <field name="Priv" cname="priv" type="GdaQueryConditionPrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Join" cname="join" type="gpointer" readable="true" writeable="true" />
      <property name="CondType" cname="cond_type" type="gint" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaReferer" />
      </implements>
      <method name="GetChildByXmlId" cname="gda_query_condition_get_child_by_xml_id">
        <return-type type="GdaQueryCondition*" />
        <parameters>
          <parameter type="const-gchar*" name="xml_id" />
        </parameters>
      </method>
      <method name="GetChildren" cname="gda_query_condition_get_children">
        <return-type type="GSList*" />
      </method>
      <method name="GetCondType" cname="gda_query_condition_get_cond_type">
        <return-type type="GdaQueryConditionType" />
      </method>
      <method name="GetMainConditions" cname="gda_query_condition_get_main_conditions">
        <return-type type="GSList*" />
      </method>
      <method name="GetParent" cname="gda_query_condition_get_parent">
        <return-type type="GdaQueryCondition*" />
      </method>
      <method name="GetRefObjectsAll" cname="gda_query_condition_get_ref_objects_all">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gda_query_condition_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsAncestor" cname="gda_query_condition_is_ancestor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="ancestor" />
        </parameters>
      </method>
      <method name="IsLeaf" cname="gda_query_condition_is_leaf">
        <return-type type="gboolean" />
      </method>
      <method name="LeafGetOperator" cname="gda_query_condition_leaf_get_operator">
        <return-type type="GdaQueryField*" />
        <parameters>
          <parameter type="GdaQueryConditionOperator" name="op" />
        </parameters>
      </method>
      <method name="LeafSetOperator" cname="gda_query_condition_leaf_set_operator">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryConditionOperator" name="op" />
          <parameter type="GdaQueryField*" name="field" />
        </parameters>
      </method>
      <constructor cname="gda_query_condition_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryConditionType" name="type" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_condition_new_copy">
        <parameters>
          <parameter type="GdaQueryCondition*" name="orig" />
          <parameter type="GHashTable*" name="replacements" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_condition_new_from_sql">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="sql_cond" />
          <parameter type="GSList**" name="targets" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="NodeAddChild" cname="gda_query_condition_node_add_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="child" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="NodeDelChild" cname="gda_query_condition_node_del_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="child" />
        </parameters>
      </method>
      <method name="RepresentsJoin" cname="gda_query_condition_represents_join">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryTarget**" name="target1" />
          <parameter type="GdaQueryTarget**" name="target2" />
          <parameter type="gboolean*" name="is_equi_join" />
        </parameters>
      </method>
      <method name="RepresentsJoinStrict" cname="gda_query_condition_represents_join_strict">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryTarget**" name="target1" />
          <parameter type="GdaQueryTarget**" name="target2" />
        </parameters>
      </method>
      <method name="SetCondType" cname="gda_query_condition_set_cond_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryConditionType" name="type" />
        </parameters>
      </method>
    </object>
    <object name="QueryField" cname="GdaQueryField" parent="GdaQueryObject">
      <field name="Priv" cname="priv" type="GdaQueryFieldPrivate*" />
      <virtual_method name="Copy" cname="copy">
        <return-type type="GObject*" owned="true" />
        <parameters>
          <parameter type="GdaQueryField*" name="orig" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetParams" cname="get_params">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaQueryField*" name="qfield" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsEqual" cname="is_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryField*" name="qfield1" />
          <parameter type="GdaQueryField*" name="qfield2" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsList" cname="is_list">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryField*" name="qfield" />
        </parameters>
      </virtual_method>
      <method name="GetAlias" cname="gda_query_field_get_alias">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDictType" cname="gda_query_field_get_dict_type">
        <return-type type="GdaDictType*" />
      </method>
      <method name="GetParameters" cname="gda_query_field_get_parameters">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gda_query_field_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsEqual" cname="gda_query_field_is_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryField*" name="qfield2" />
        </parameters>
      </method>
      <method name="IsInternal" cname="gda_query_field_is_internal">
        <return-type type="gboolean" />
      </method>
      <method name="IsList" cname="gda_query_field_is_list">
        <return-type type="gboolean" />
      </method>
      <method name="IsVisible" cname="gda_query_field_is_visible">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_query_field_new_copy">
        <parameters>
          <parameter type="GdaQueryField*" name="orig" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_field_new_from_sql">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="sqlfield" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_field_new_from_xml">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="xmlNodePtr" name="node" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="SetAlias" cname="gda_query_field_set_alias">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="alias" />
        </parameters>
      </method>
      <method name="SetInternal" cname="gda_query_field_set_internal">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="internal" />
        </parameters>
      </method>
      <method name="SetVisible" cname="gda_query_field_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
    </object>
    <object name="QueryFieldAgg" cname="GdaQueryFieldAgg" parent="GdaQueryField">
      <field name="Priv" cname="priv" type="GdaQueryFieldAggPrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Aggregate" cname="aggregate" type="gpointer" readable="true" writeable="true" />
      <property name="AggregateName" cname="aggregate_name" type="gchar*" writeable="true" />
      <property name="AggregateId" cname="aggregate_id" type="gchar*" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaRenderer" />
      </implements>
      <method name="GetArg" cname="gda_query_field_agg_get_arg">
        <return-type type="GdaQueryField*" />
      </method>
      <method name="GetRefAgg" cname="gda_query_field_agg_get_ref_agg">
        <return-type type="GdaDictAggregate*" />
      </method>
      <method name="GetType" cname="gda_query_field_agg_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_query_field_agg_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="agg_name" />
        </parameters>
      </constructor>
      <method name="SetArg" cname="gda_query_field_agg_set_arg">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryField*" name="arg" />
        </parameters>
      </method>
    </object>
    <object name="QueryFieldAll" cname="GdaQueryFieldAll" parent="GdaQueryField">
      <field name="Priv" cname="priv" type="GdaQueryFieldAllPrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Target" cname="target" type="gpointer" readable="true" writeable="true" />
      <property name="TargetName" cname="target_name" type="gchar*" writeable="true" />
      <property name="TargetId" cname="target_id" type="gchar*" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaRenderer" />
      </implements>
      <method name="GetTarget" cname="gda_query_field_all_get_target">
        <return-type type="GdaQueryTarget*" />
      </method>
      <method name="GetType" cname="gda_query_field_all_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_query_field_all_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="target" />
        </parameters>
      </constructor>
    </object>
    <object name="QueryFieldField" cname="GdaQueryFieldField" parent="GdaQueryField">
      <field name="Priv" cname="priv" type="GdaQueryFieldFieldPrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="ValueProvider" cname="value_provider" type="gpointer" readable="true" writeable="true" />
      <property name="ValueProviderXmlId" cname="value_provider_xml_id" type="gchar*" readable="true" writeable="true" />
      <property name="EntryPlugin" cname="entry_plugin" type="gchar*" readable="true" writeable="true" />
      <property name="Target" cname="target" type="gpointer" readable="true" writeable="true" />
      <property name="TargetName" cname="target_name" type="gchar*" writeable="true" />
      <property name="TargetId" cname="target_id" type="gchar*" writeable="true" />
      <property name="Field" cname="field" type="gpointer" readable="true" writeable="true" />
      <property name="FieldName" cname="field_name" type="gchar*" writeable="true" />
      <property name="FieldId" cname="field_id" type="gchar*" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaRenderer" />
      </implements>
      <method name="GetRefField" cname="gda_query_field_field_get_ref_field">
        <return-type type="GdaEntityField*" />
      </method>
      <method name="GetRefFieldName" cname="gda_query_field_field_get_ref_field_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetTarget" cname="gda_query_field_field_get_target">
        <return-type type="GdaQueryTarget*" />
      </method>
      <method name="GetType" cname="gda_query_field_field_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_query_field_field_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="field" />
        </parameters>
      </constructor>
    </object>
    <object name="QueryFieldFunc" cname="GdaQueryFieldFunc" parent="GdaQueryField">
      <field name="Priv" cname="priv" type="GdaQueryFieldFuncPrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Function" cname="function" type="gpointer" readable="true" writeable="true" />
      <property name="FunctionName" cname="function_name" type="gchar*" writeable="true" />
      <property name="FunctionId" cname="function_id" type="gchar*" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaRenderer" />
      </implements>
      <method name="GetArgs" cname="gda_query_field_func_get_args">
        <return-type type="GSList*" />
      </method>
      <method name="GetRefFunc" cname="gda_query_field_func_get_ref_func">
        <return-type type="GdaDictFunction*" />
      </method>
      <method name="GetRefFuncName" cname="gda_query_field_func_get_ref_func_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_query_field_func_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_query_field_func_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="func_name" />
        </parameters>
      </constructor>
      <method name="SetArgs" cname="gda_query_field_func_set_args">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GSList*" name="args" />
        </parameters>
      </method>
    </object>
    <object name="QueryFieldValue" cname="GdaQueryFieldValue" parent="GdaQueryField">
      <field name="Priv" cname="priv" type="GdaQueryFieldValuePrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="GType" cname="g_type" type="ulong" readable="true" writeable="true" />
      <property name="RestrictModel" cname="restrict_model" type="gpointer" readable="true" writeable="true" />
      <property name="RestrictColumn" cname="restrict_column" type="gint" readable="true" writeable="true" />
      <property name="EntryPlugin" cname="entry_plugin" type="gchar*" readable="true" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaRenderer" />
      </implements>
      <method name="GetDefaultValue" cname="gda_query_field_value_get_default_value">
        <return-type type="const-GValue*" />
      </method>
      <method name="GetDictType" cname="gda_query_field_value_get_dict_type">
        <return-type type="GdaDictType*" />
      </method>
      <method name="GetGType" cname="gda_query_field_value_get_g_type">
        <return-type type="GType" />
      </method>
      <method name="GetNotNull" cname="gda_query_field_value_get_not_null">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gda_query_field_value_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValue" cname="gda_query_field_value_get_value">
        <return-type type="const-GValue*" />
      </method>
      <method name="IsParameter" cname="gda_query_field_value_is_parameter">
        <return-type type="gboolean" />
      </method>
      <method name="IsValueNull" cname="gda_query_field_value_is_value_null">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaParameterList*" name="context" />
        </parameters>
      </method>
      <constructor cname="gda_query_field_value_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GType" name="type" />
        </parameters>
      </constructor>
      <method name="Restrict" cname="gda_query_field_value_restrict">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="col" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetDefaultValue" cname="gda_query_field_value_set_default_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GValue*" name="default_val" />
        </parameters>
      </method>
      <method name="SetDictType" cname="gda_query_field_value_set_dict_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictType*" name="type" />
        </parameters>
      </method>
      <method name="SetIsParameter" cname="gda_query_field_value_set_is_parameter">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_param" />
        </parameters>
      </method>
      <method name="SetNotNull" cname="gda_query_field_value_set_not_null">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="not_null" />
        </parameters>
      </method>
      <method name="SetValue" cname="gda_query_field_value_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GValue*" name="val" />
        </parameters>
      </method>
    </object>
    <object name="QueryJoin" cname="GdaQueryJoin" parent="GdaQueryObject">
      <field name="Priv" cname="priv" type="GdaQueryJoinPrivate*" />
      <signal name="TypeChanged" cname="type_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryJoin*" name="join" />
        </parameters>
      </signal>
      <signal name="ConditionChanged" cname="condition_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryJoin*" name="join" />
        </parameters>
      </signal>
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Target1" cname="target1" type="gpointer" readable="true" writeable="true" />
      <property name="Target1Id" cname="target1_id" type="gchar*" writeable="true" />
      <property name="Target2" cname="target2" type="gpointer" readable="true" writeable="true" />
      <property name="Target2Id" cname="target2_id" type="gchar*" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
      </implements>
      <method name="GetCondition" cname="gda_query_join_get_condition">
        <return-type type="GdaQueryCondition*" />
      </method>
      <method name="GetJoinType" cname="gda_query_join_get_join_type">
        <return-type type="GdaQueryJoinType" />
      </method>
      <method name="GetQuery" cname="gda_query_join_get_query">
        <return-type type="GdaQuery*" />
      </method>
      <method name="GetTarget1" cname="gda_query_join_get_target_1">
        <return-type type="GdaQueryTarget*" />
      </method>
      <method name="GetTarget2" cname="gda_query_join_get_target_2">
        <return-type type="GdaQueryTarget*" />
      </method>
      <method name="GetType" cname="gda_query_join_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_query_join_new_copy">
        <parameters>
          <parameter type="GdaQueryJoin*" name="orig" />
          <parameter type="GHashTable*" name="replacements" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_join_new_with_targets">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="GdaQueryTarget*" name="target_1" />
          <parameter type="GdaQueryTarget*" name="target_2" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_join_new_with_xml_ids">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="target_1_xml_id" />
          <parameter type="const-gchar*" name="target_2_xml_id" />
        </parameters>
      </constructor>
      <method name="RenderType" cname="gda_query_join_render_type">
        <return-type type="const-gchar*" />
      </method>
      <method name="SetCondition" cname="gda_query_join_set_condition">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaQueryCondition*" name="cond" />
        </parameters>
      </method>
      <method name="SetConditionFromFkcons" cname="gda_query_join_set_condition_from_fkcons">
        <return-type type="gboolean" />
      </method>
      <method name="SetConditionFromSql" cname="gda_query_join_set_condition_from_sql">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="cond" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetJoinType" cname="gda_query_join_set_join_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryJoinType" name="type" />
        </parameters>
      </method>
      <method name="SwapTargets" cname="gda_query_join_swap_targets">
        <return-type type="void" />
      </method>
    </object>
    <object name="QueryObject" cname="GdaQueryObject" parent="GdaObject">
      <field name="Priv" cname="priv" type="GdaQueryObjectPrivate*" />
      <signal name="NumidChanged" cname="numid_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryObject*" name="object" />
        </parameters>
      </signal>
      <virtual_method name="SetIntId" cname="set_int_id">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQueryObject*" name="object" />
          <parameter type="guint" name="id" />
        </parameters>
      </virtual_method>
      <method name="GetIntId" cname="gda_query_object_get_int_id">
        <return-type type="guint" />
      </method>
      <method name="GetType" cname="gda_query_object_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetIntId" cname="gda_query_object_set_int_id">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="id" />
        </parameters>
      </method>
    </object>
    <object name="QueryTarget" cname="GdaQueryTarget" parent="GdaQueryObject">
      <field name="Priv" cname="priv" type="GdaQueryTargetPrivate*" />
      <property name="Query" cname="query" type="gpointer" readable="true" writeable="true" construct-only="true" />
      <property name="Entity" cname="entity" type="gpointer" readable="true" writeable="true" />
      <property name="EntityName" cname="entity_name" type="gchar*" writeable="true" />
      <property name="EntityId" cname="entity_id" type="gchar*" writeable="true" />
      <implements>
        <interface cname="GdaXmlStorage" />
        <interface cname="GdaRenderer" />
      </implements>
      <method name="GetAlias" cname="gda_query_target_get_alias">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetCompleteName" cname="gda_query_target_get_complete_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetQuery" cname="gda_query_target_get_query">
        <return-type type="GdaQuery*" />
      </method>
      <method name="GetRepresentedEntity" cname="gda_query_target_get_represented_entity">
        <return-type type="GdaEntity*" />
      </method>
      <method name="GetRepresentedTableName" cname="gda_query_target_get_represented_table_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_query_target_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_query_target_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="const-gchar*" name="table" />
        </parameters>
      </constructor>
      <constructor cname="gda_query_target_new_copy">
        <parameters>
          <parameter type="GdaQueryTarget*" name="orig" />
        </parameters>
      </constructor>
      <method name="SetAlias" cname="gda_query_target_set_alias">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="alias" />
        </parameters>
      </method>
    </object>
    <object name="Row" cname="GdaRow" parent="GObject">
      <field name="Priv" cname="priv" type="GdaRowPrivate*" />
      <signal name="ValueChanged" cname="value_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaRow*" name="row" />
          <parameter type="gint" name="num" />
          <parameter type="const-GValue*" name="old_value" />
          <parameter type="const-GValue*" name="new_value" />
        </parameters>
      </signal>
      <signal name="ValueToChange" cname="value_to_change" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaRow*" name="row" />
          <parameter type="gint" name="num" />
          <parameter type="const-GValue*" name="current" />
          <parameter type="const-GValue*" name="proposed" />
        </parameters>
      </signal>
      <property name="Model" cname="model" type="gpointer" readable="true" writeable="true" />
      <property name="Values" cname="values" type="gpointer" writeable="true" />
      <property name="NbValues" cname="nb_values" type="gint" writeable="true" />
      <method name="Copy" cname="gda_row_copy">
        <return-type type="GdaRow*" owned="true" />
      </method>
      <method name="GetId" cname="gda_row_get_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIsDefault" cname="gda_row_get_is_default">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="num" />
        </parameters>
      </method>
      <method name="GetLength" cname="gda_row_get_length">
        <return-type type="gint" />
      </method>
      <method name="GetModel" cname="gda_row_get_model">
        <return-type type="GdaDataModel*" />
      </method>
      <method name="GetNumber" cname="gda_row_get_number">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gda_row_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValue" cname="gda_row_get_value">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="gint" name="num" />
        </parameters>
      </method>
      <constructor cname="gda_row_new">
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="gint" name="count" />
        </parameters>
      </constructor>
      <constructor cname="gda_row_new_from_list">
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="const-GList*" name="values" />
        </parameters>
      </constructor>
      <method name="SetId" cname="gda_row_set_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="id" />
        </parameters>
      </method>
      <method name="SetIsDefault" cname="gda_row_set_is_default">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="num" />
          <parameter type="gboolean" name="is_default" />
        </parameters>
      </method>
      <method name="SetModel" cname="gda_row_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
        </parameters>
      </method>
      <method name="SetNumber" cname="gda_row_set_number">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="number" />
        </parameters>
      </method>
      <method name="SetValue" cname="gda_row_set_value">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="num" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
    </object>
    <object name="ServerOperation" cname="GdaServerOperation" parent="GObject">
      <field name="Priv" cname="priv" type="GdaServerOperationPrivate*" />
      <signal name="SequenceItemAdded" cname="sequence_item_added" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="const-gchar*" name="seq_path" />
          <parameter type="gint" name="item_index" />
        </parameters>
      </signal>
      <signal name="SequenceItemRemove" cname="sequence_item_remove" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="const-gchar*" name="seq_path" />
          <parameter type="gint" name="item_index" />
        </parameters>
      </signal>
      <property name="Dict" cname="dict" type="gpointer" writeable="true" construct-only="true" />
      <property name="Connection" cname="connection" type="gpointer" writeable="true" construct-only="true" />
      <property name="ProviderObj" cname="provider_obj" type="gpointer" writeable="true" construct-only="true" />
      <property name="SpecFile" cname="spec_file" type="gchar*" writeable="true" construct-only="true" />
      <property name="OpType" cname="op_type" type="gint" readable="true" writeable="true" construct-only="true" />
      <method name="AddItemToSequence" cname="gda_server_operation_add_item_to_sequence">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="DelItemFromSequence" cname="gda_server_operation_del_item_from_sequence">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="item_path" />
        </parameters>
      </method>
      <method name="GetNodeInfo" cname="gda_server_operation_get_node_info">
        <return-type type="GdaServerOperationNode*" />
        <parameters>
          <parameter type="const-gchar*" name="path_format" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetNodeParent" cname="gda_server_operation_get_node_parent">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetNodePathPortion" cname="gda_server_operation_get_node_path_portion">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetNodeType" cname="gda_server_operation_get_node_type">
        <return-type type="GdaServerOperationNodeType" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdaServerOperationNodeStatus*" name="status" />
        </parameters>
      </method>
      <method name="GetOpType" cname="gda_server_operation_get_op_type">
        <return-type type="GdaServerOperationType" />
      </method>
      <method name="GetRootNodes" cname="gda_server_operation_get_root_nodes">
        <return-type type="gchar**" />
      </method>
      <method name="GetSequenceItemNames" cname="gda_server_operation_get_sequence_item_names">
        <return-type type="gchar**" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetSequenceMaxSize" cname="gda_server_operation_get_sequence_max_size">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetSequenceMinSize" cname="gda_server_operation_get_sequence_min_size">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetSequenceName" cname="gda_server_operation_get_sequence_name">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetSequenceSize" cname="gda_server_operation_get_sequence_size">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_server_operation_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValueAt" cname="gda_server_operation_get_value_at">
        <return-type type="const-GValue*" />
        <parameters>
          <parameter type="const-gchar*" name="path_format" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="IsValid" cname="gda_server_operation_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="xml_file" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="LoadDataFromXml" cname="gda_server_operation_load_data_from_xml">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="xmlNodePtr" name="node" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <constructor cname="gda_server_operation_new">
        <parameters>
          <parameter type="GdaServerOperationType" name="op_type" />
          <parameter type="const-gchar*" name="xml_file" />
        </parameters>
      </constructor>
      <method name="OpTypeToString" cname="gda_server_operation_op_type_to_string" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GdaServerOperationType" name="type" />
        </parameters>
      </method>
      <method name="SaveDataToXml" cname="gda_server_operation_save_data_to_xml">
        <return-type type="xmlNodePtr" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="ServerProvider" cname="GdaServerProvider" parent="GObject">
      <field name="Priv" cname="priv" type="GdaServerProviderPrivate*" />
      <virtual_method name="LastConnectionGone" cname="last_connection_gone">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetInfo" cname="get_info">
        <return-type type="GdaServerProviderInfo*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </virtual_method>
      <virtual_method name="SupportsFeature" cname="supports_feature">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaConnectionFeature" name="feature" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSchema" cname="get_schema">
        <return-type type="GdaDataModel*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaConnectionSchema" name="schema" />
          <parameter type="GdaParameterList*" name="params" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDataHandler" cname="get_data_handler">
        <return-type type="GdaDataHandler*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GType" name="g_type" />
          <parameter type="const-gchar*" name="dbms_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="StringToValue" cname="string_to_value">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="const-gchar*" name="string" />
          <parameter type="GType" name="prefered_type" />
          <parameter type="gchar**" name="dbms_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="OpenConnection" cname="open_connection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaQuarkList*" name="params" />
          <parameter type="const-gchar*" name="username" />
          <parameter type="const-gchar*" name="password" />
        </parameters>
      </virtual_method>
      <virtual_method name="CloseConnection" cname="close_connection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </virtual_method>
      <virtual_method name="ChangeDatabase" cname="change_database">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </virtual_method>
      <virtual_method name="SupportsOperation" cname="supports_operation">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperationType" name="type" />
          <parameter type="GdaParameterList*" name="options" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateOperation" cname="create_operation">
        <return-type type="GdaServerOperation*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperationType" name="type" />
          <parameter type="GdaParameterList*" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="RenderOperation" cname="render_operation">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="PerformOperation" cname="perform_operation">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="ExecuteCommand" cname="execute_command">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaCommand*" name="cmd" />
          <parameter type="GdaParameterList*" name="params" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetLastInsertId" cname="get_last_insert_id">
        <return-type type="char*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaDataModel*" name="recset" />
        </parameters>
      </virtual_method>
      <virtual_method name="BeginTransaction" cname="begin_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </virtual_method>
      <virtual_method name="CommitTransaction" cname="commit_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </virtual_method>
      <virtual_method name="RollbackTransaction" cname="rollback_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateBlob" cname="create_blob">
        <return-type type="GdaBlob*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </virtual_method>
      <virtual_method name="FetchBlob" cname="fetch_blob">
        <return-type type="GdaBlob*" />
        <parameters>
          <parameter type="GdaServerProvider*" name="provider" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="const-gchar*" name="sql_id" />
        </parameters>
      </virtual_method>
      <method name="BeginTransaction" cname="gda_server_provider_begin_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="ChangeDatabase" cname="gda_server_provider_change_database">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="CloseConnection" cname="gda_server_provider_close_connection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="CommitTransaction" cname="gda_server_provider_commit_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="CreateBlob" cname="gda_server_provider_create_blob">
        <return-type type="GdaBlob*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="CreateOperation" cname="gda_server_provider_create_operation">
        <return-type type="GdaServerOperation*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperationType" name="type" />
          <parameter type="GdaParameterList*" name="options" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ExecuteCommand" cname="gda_server_provider_execute_command">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaCommand*" name="cmd" />
          <parameter type="GdaParameterList*" name="params" />
        </parameters>
      </method>
      <method name="FetchBlobById" cname="gda_server_provider_fetch_blob_by_id">
        <return-type type="GdaBlob*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="const-gchar*" name="sql_id" />
        </parameters>
      </method>
      <method name="GetDataHandlerDbms" cname="gda_server_provider_get_data_handler_dbms">
        <return-type type="GdaDataHandler*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="const-gchar*" name="for_type" />
        </parameters>
      </method>
      <method name="GetDataHandlerGtype" cname="gda_server_provider_get_data_handler_gtype">
        <return-type type="GdaDataHandler*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GType" name="for_type" />
        </parameters>
      </method>
      <method name="GetDatabase" cname="gda_server_provider_get_database">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="GetDefaultDbmsType" cname="gda_server_provider_get_default_dbms_type">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetInfo" cname="gda_server_provider_get_info">
        <return-type type="GdaServerProviderInfo*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="GetLastInsertId" cname="gda_server_provider_get_last_insert_id">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaDataModel*" name="recset" />
        </parameters>
      </method>
      <method name="GetSchema" cname="gda_server_provider_get_schema">
        <return-type type="GdaDataModel*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaConnectionSchema" name="schema" />
          <parameter type="GdaParameterList*" name="params" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetSchemaNbColumns" cname="gda_server_provider_get_schema_nb_columns" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdaConnectionSchema" name="schema" />
        </parameters>
      </method>
      <method name="GetServerVersion" cname="gda_server_provider_get_server_version">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_server_provider_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVersion" cname="gda_server_provider_get_version">
        <return-type type="const-gchar*" />
      </method>
      <method name="HandlerDeclare" cname="gda_server_provider_handler_declare">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDataHandler*" name="dh" />
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GType" name="g_type" />
          <parameter type="const-gchar*" name="dbms_type" />
        </parameters>
      </method>
      <method name="HandlerFind" cname="gda_server_provider_handler_find">
        <return-type type="GdaDataHandler*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GType" name="g_type" />
          <parameter type="const-gchar*" name="dbms_type" />
        </parameters>
      </method>
      <method name="InitSchemaModel" cname="gda_server_provider_init_schema_model" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GdaConnectionSchema" name="schema" />
        </parameters>
      </method>
      <method name="OpenConnection" cname="gda_server_provider_open_connection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaQuarkList*" name="params" />
          <parameter type="const-gchar*" name="username" />
          <parameter type="const-gchar*" name="password" />
        </parameters>
      </method>
      <method name="PerformOperation" cname="gda_server_provider_perform_operation">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RenderOperation" cname="gda_server_provider_render_operation">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperation*" name="op" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ResetConnection" cname="gda_server_provider_reset_connection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
        </parameters>
      </method>
      <method name="RollbackTransaction" cname="gda_server_provider_rollback_transaction">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
      <method name="StringToValue" cname="gda_server_provider_string_to_value">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="const-gchar*" name="string" />
          <parameter type="GType" name="prefered_type" />
          <parameter type="gchar**" name="dbms_type" />
        </parameters>
      </method>
      <method name="SupportsFeature" cname="gda_server_provider_supports_feature">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaConnectionFeature" name="feature" />
        </parameters>
      </method>
      <method name="SupportsOperation" cname="gda_server_provider_supports_operation">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GdaServerOperationType" name="type" />
          <parameter type="GdaParameterList*" name="options" />
        </parameters>
      </method>
      <method name="TestSchemaModel" cname="gda_server_provider_test_schema_model" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataModel*" name="model" />
          <parameter type="GdaConnectionSchema" name="schema" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ValueToSqlString" cname="gda_server_provider_value_to_sql_string">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GdaConnection*" name="cnc" />
          <parameter type="GValue*" name="from" />
        </parameters>
      </method>
    </object>
    <object name="Threader" cname="GdaThreader" parent="GObject">
      <field name="Priv" cname="priv" type="GdaThreaderPrivate*" />
      <signal name="Finished" cname="finished" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaThreader*" name="thread" />
          <parameter type="guint" name="job_id" />
          <parameter type="gpointer" name="arg_data" />
        </parameters>
      </signal>
      <signal name="Cancelled" cname="cancelled" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaThreader*" name="thread" />
          <parameter type="guint" name="job_id" />
          <parameter type="gpointer" name="arg_data" />
        </parameters>
      </signal>
      <method name="Cancel" cname="gda_threader_cancel">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="job_id" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_threader_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_threader_new" />
      <method name="StartThread" cname="gda_threader_start_thread">
        <return-type type="guint" />
        <parameters>
          <parameter type="GThreadFunc" name="func" />
          <parameter type="gpointer" name="func_arg" />
          <parameter type="GdaThreaderFunc" name="ok_callback" />
          <parameter type="GdaThreaderFunc" name="cancel_callback" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="Transaction" cname="GdaTransaction" parent="GObject">
      <field name="Priv" cname="priv" type="GdaTransactionPrivate*" />
      <method name="GetIsolationLevel" cname="gda_transaction_get_isolation_level">
        <return-type type="GdaTransactionIsolation" />
      </method>
      <method name="GetName" cname="gda_transaction_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_transaction_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_transaction_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <method name="SetIsolationLevel" cname="gda_transaction_set_isolation_level">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaTransactionIsolation" name="level" />
        </parameters>
      </method>
      <method name="SetName" cname="gda_transaction_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </object>
    <boxed name="Binary" cname="GdaBinary">
      <field name="Data" cname="data" type="guchar*" />
      <field name="BinaryLength" cname="binary_length" type="glong" />
      <method name="Copy" cname="gda_binary_copy" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="Free" cname="gda_binary_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_binary_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ToString" cname="gda_binary_to_string">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="maxlen" />
        </parameters>
      </method>
    </boxed>
    <boxed name="Command" cname="GdaCommand" opaque="true">
      <field name="Text" cname="text" type="gchar*" access="public" writeable="true" />
      <field name="Type" cname="type" type="GdaCommandType" access="public" writeable="true" />
      <field name="Options" cname="options" type="GdaCommandOptions" access="public" writeable="true" />
      <field name="Xaction" cname="xaction" type="GdaTransaction*" access="public" writeable="true" />
      <method name="Copy" cname="gda_command_copy">
        <return-type type="GdaCommand*" owned="true" />
      </method>
      <method name="Free" cname="gda_command_free">
        <return-type type="void" />
      </method>
      <method name="GetCommandType" cname="gda_command_get_command_type">
        <return-type type="GdaCommandType" />
      </method>
      <method name="GetOptions" cname="gda_command_get_options">
        <return-type type="GdaCommandOptions" />
      </method>
      <method name="GetText" cname="gda_command_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetTransaction" cname="gda_command_get_transaction">
        <return-type type="GdaTransaction*" />
      </method>
      <method name="GetType" cname="gda_command_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_command_new">
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="GdaCommandType" name="type" />
          <parameter type="GdaCommandOptions" name="options" />
        </parameters>
      </constructor>
      <method name="SetCommandType" cname="gda_command_set_command_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaCommandType" name="type" />
        </parameters>
      </method>
      <method name="SetOptions" cname="gda_command_set_options">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaCommandOptions" name="options" />
        </parameters>
      </method>
      <method name="SetText" cname="gda_command_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetTransaction" cname="gda_command_set_transaction">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaTransaction*" name="xaction" />
        </parameters>
      </method>
    </boxed>
    <boxed name="DataModelIndex" cname="GdaDataModelIndex" opaque="true">
      <field name="Name" cname="name" type="gchar*" access="public" writeable="true" />
      <field name="TableName" cname="table_name" type="gchar*" access="public" writeable="true" />
      <field name="PrimaryKey" cname="primary_key" type="gboolean" access="public" writeable="true" />
      <field name="UniqueKey" cname="unique_key" type="gboolean" access="public" writeable="true" />
      <field name="References" cname="references" type="gchar*" access="public" writeable="true" />
      <field name="ColIdxList" cname="col_idx_list" type="GList*" access="public" writeable="true" />
      <method name="Copy" cname="gda_data_model_index_copy">
        <return-type type="GdaDataModelIndex*" owned="true" />
      </method>
      <method name="Equal" cname="gda_data_model_index_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdaDataModelIndex*" name="rhs" />
        </parameters>
      </method>
      <method name="Free" cname="gda_data_model_index_free">
        <return-type type="void" />
      </method>
      <method name="GetColumnIndexList" cname="gda_data_model_index_get_column_index_list">
        <return-type type="GList*" />
      </method>
      <method name="GetName" cname="gda_data_model_index_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPrimaryKey" cname="gda_data_model_index_get_primary_key">
        <return-type type="gboolean" />
      </method>
      <method name="GetReferences" cname="gda_data_model_index_get_references">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetTableName" cname="gda_data_model_index_get_table_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gda_data_model_index_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUniqueKey" cname="gda_data_model_index_get_unique_key">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gda_data_model_index_new" />
      <method name="SetColumnIndexList" cname="gda_data_model_index_set_column_index_list">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="col_idx_list" />
        </parameters>
      </method>
      <method name="SetName" cname="gda_data_model_index_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetPrimaryKey" cname="gda_data_model_index_set_primary_key">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="pk" />
        </parameters>
      </method>
      <method name="SetReferences" cname="gda_data_model_index_set_references">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="ref" />
        </parameters>
      </method>
      <method name="SetTableName" cname="gda_data_model_index_set_table_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetUniqueKey" cname="gda_data_model_index_set_unique_key">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="uk" />
        </parameters>
      </method>
    </boxed>
    <boxed name="DataSourceInfo" cname="GdaDataSourceInfo">
      <field name="Name" cname="name" type="gchar*" />
      <field name="Provider" cname="provider" type="gchar*" />
      <field name="CncString" cname="cnc_string" type="gchar*" />
      <field name="Description" cname="description" type="gchar*" />
      <field name="Username" cname="username" type="gchar*" />
      <field name="Password" cname="password" type="gchar*" />
      <field name="IsGlobal" cname="is_global" type="gboolean" />
      <method name="Copy" cname="gda_data_source_info_copy">
        <return-type type="GdaDataSourceInfo*" owned="true" />
      </method>
      <method name="Equal" cname="gda_data_source_info_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataSourceInfo*" name="info2" />
        </parameters>
      </method>
      <method name="Free" cname="gda_data_source_info_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gda_data_source_info_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="DictConstraintFkeyPair" cname="GdaDictConstraintFkeyPair">
      <field name="Fkey" cname="fkey" type="GdaDictField*" />
      <field name="RefPkey" cname="ref_pkey" type="GdaDictField*" />
      <field name="RefPkeyRepl" cname="ref_pkey_repl" type="GdaObjectRef*" />
    </struct>
    <boxed name="GeometricPoint" cname="GdaGeometricPoint">
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <method name="Copy" cname="gda_geometricpoint_copy" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="Free" cname="gda_geometricpoint_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_geometricpoint_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="Graph" cname="GdaGraph" opaque="true" />
    <struct name="GraphClass" cname="GdaGraphClass" opaque="true" />
    <struct name="GraphItem" cname="GdaGraphItem" opaque="true" />
    <struct name="GraphItemClass" cname="GdaGraphItemClass" opaque="true" />
    <struct name="GraphQuery" cname="GdaGraphQuery" opaque="true" />
    <struct name="GraphQueryClass" cname="GdaGraphQueryClass" opaque="true" />
    <boxed name="Numeric" cname="GdaNumeric">
      <field name="Number" cname="number" type="gchar*" />
      <field name="Precision" cname="precision" type="glong" />
      <field name="Width" cname="width" type="glong" />
      <method name="Copy" cname="gda_numeric_copy" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="Free" cname="gda_numeric_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_numeric_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="ParameterListGroup" cname="GdaParameterListGroup">
      <field name="Nodes" cname="nodes" type="GSList*" />
      <field name="NodesSource" cname="nodes_source" type="GdaParameterListSource*" />
    </struct>
    <struct name="ParameterListNode" cname="GdaParameterListNode">
      <field name="Param" cname="param" type="GdaParameter*" />
      <field name="SourceModel" cname="source_model" type="GdaDataModel*" />
      <field name="SourceColumn" cname="source_column" type="gint" />
      <field name="Hint" cname="hint" type="guint" />
    </struct>
    <struct name="ParameterListSource" cname="GdaParameterListSource">
      <field name="DataModel" cname="data_model" type="GdaDataModel*" />
      <field name="Nodes" cname="nodes" type="GSList*" />
      <field name="ShownNCols" cname="shown_n_cols" type="gint" />
      <field name="ShownColsIndex" cname="shown_cols_index" type="gint*" />
      <field name="RefNCols" cname="ref_n_cols" type="gint" />
      <field name="RefColsIndex" cname="ref_cols_index" type="gint*" />
    </struct>
    <boxed name="ProviderInfo" cname="GdaProviderInfo">
      <field name="Id" cname="id" type="gchar*" />
      <field name="Location" cname="location" type="gchar*" />
      <field name="Description" cname="description" type="gchar*" />
      <field name="GdaParams" cname="gda_params" type="GdaParameterList*" />
      <field name="DsnSpec" cname="dsn_spec" type="gchar*" />
      <method name="Copy" cname="gda_provider_info_copy">
        <return-type type="GdaProviderInfo*" owned="true" />
      </method>
      <method name="Free" cname="gda_provider_info_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gda_provider_info_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="QuarkList" cname="GdaQuarkList" opaque="true">
      <method name="AddFromString" cname="gda_quark_list_add_from_string">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
          <parameter type="gboolean" name="cleanup" />
        </parameters>
      </method>
      <method name="Clear" cname="gda_quark_list_clear">
        <return-type type="void" />
      </method>
      <method name="Copy" cname="gda_quark_list_copy">
        <return-type type="GdaQuarkList*" owned="true" />
      </method>
      <method name="Find" cname="gda_quark_list_find">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="Free" cname="gda_quark_list_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gda_quark_list_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gda_quark_list_new" />
      <constructor cname="gda_quark_list_new_from_string">
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </constructor>
      <method name="Remove" cname="gda_quark_list_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </struct>
    <struct name="ServerOperationNode" cname="GdaServerOperationNode" opaque="true" />
    <struct name="ServerProviderHandlerInfo" cname="GdaServerProviderHandlerInfo">
      <field name="Cnc" cname="cnc" type="GdaConnection*" />
      <field name="GType" cname="g_type" type="GType" />
      <field name="DbmsType" cname="dbms_type" type="gchar*" />
      <method name="EqualFunc" cname="gda_server_provider_handler_info_equal_func">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaServerProviderHandlerInfo*" name="b" />
        </parameters>
      </method>
      <method name="Free" cname="gda_server_provider_handler_info_free">
        <return-type type="void" />
      </method>
      <method name="HashFunc" cname="gda_server_provider_handler_info_hash_func">
        <return-type type="guint" />
      </method>
    </struct>
    <struct name="ServerProviderInfo" cname="GdaServerProviderInfo">
      <field name="ProviderName" cname="provider_name" type="gchar*" />
      <field name="IsCaseInsensitive" cname="is_case_insensitive" type="gboolean" />
      <field name="ImplicitDataTypesCasts" cname="implicit_data_types_casts" type="gboolean" />
      <field name="AliasNeedsAsKeyword" cname="alias_needs_as_keyword" type="gboolean" />
      <field name="SupportsAlias" cname="supports_alias" type="gboolean" />
      <field name="SupportsPrefixedFields" cname="supports_prefixed_fields" type="gboolean" />
    </struct>
    <boxed name="Time" cname="GdaTime">
      <field name="Hour" cname="hour" type="gushort" />
      <field name="Minute" cname="minute" type="gushort" />
      <field name="Second" cname="second" type="gushort" />
      <field name="Fraction" cname="fraction" type="gulong" />
      <field name="Timezone" cname="timezone" type="glong" />
      <method name="Copy" cname="gda_time_copy" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="Free" cname="gda_time_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_time_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <boxed name="Timestamp" cname="GdaTimestamp">
      <field name="Year" cname="year" type="gshort" />
      <field name="Month" cname="month" type="gushort" />
      <field name="Day" cname="day" type="gushort" />
      <field name="Hour" cname="hour" type="gushort" />
      <field name="Minute" cname="minute" type="gushort" />
      <field name="Second" cname="second" type="gushort" />
      <field name="Fraction" cname="fraction" type="gulong" />
      <field name="Timezone" cname="timezone" type="glong" />
      <method name="Copy" cname="gda_timestamp_copy" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="Free" cname="gda_timestamp_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="boxed" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_timestamp_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <alias name="ValueList" cname="GdaValueList" type="GList" />
    <struct name="ParseData" cname="ParseData" opaque="true">
      <field name="PrevTargets" cname="prev_targets" type="GSList*" access="public" writeable="true" />
      <field name="PrevFields" cname="prev_fields" type="GSList*" access="public" writeable="true" />
      <field name="ParsedTargets" cname="parsed_targets" type="GSList*" access="public" writeable="true" />
      <field name="NewTargets" cname="new_targets" type="GHashTable*" access="public" writeable="true" />
      <field name="SqlTableTargets" cname="sql_table_targets" type="GHashTable*" access="public" writeable="true" />
      <method name="ComputeTargetsHash" cname="parse_data_compute_targets_hash" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaQuery*" name="query" />
          <parameter type="ParseData*" name="pdata" />
        </parameters>
      </method>
      <method name="Destroy" cname="parse_data_destroy">
        <return-type type="void" />
      </method>
      <constructor cname="parse_data_new">
        <parameters>
          <parameter type="GdaQuery*" name="query" />
        </parameters>
      </constructor>
    </struct>
    <class name="Aggregates" cname="GdaAggregates_">
      <method name="GetByDbmsId" cname="gda_aggregates_get_by_dbms_id" shared="true">
        <return-type type="GdaDictAggregate*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="dbms_id" />
        </parameters>
      </method>
      <method name="GetByName" cname="gda_aggregates_get_by_name" shared="true">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="aggname" />
        </parameters>
      </method>
      <method name="GetByNameArg" cname="gda_aggregates_get_by_name_arg" shared="true">
        <return-type type="GdaDictAggregate*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="aggname" />
          <parameter type="GdaDictType*" name="argtype" />
        </parameters>
      </method>
      <method name="GetByNameArgInList" cname="gda_aggregates_get_by_name_arg_in_list" shared="true">
        <return-type type="GdaDictAggregate*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="GSList*" name="aggregates" />
          <parameter type="const-gchar*" name="aggname" />
          <parameter type="GdaDictType*" name="argtype" />
        </parameters>
      </method>
      <method name="GetRegister" cname="gda_aggregates_get_register" shared="true">
        <return-type type="GdaDictRegisterStruct*" />
      </method>
    </class>
    <class name="Config" cname="GdaConfig_">
      <method name="AddListener" cname="gda_config_add_listener" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdaConfigListenerFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="CanModifyGlobalConfig" cname="gda_config_can_modify_global_config" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="FindDataSource" cname="gda_config_find_data_source" shared="true">
        <return-type type="GdaDataSourceInfo*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="FreeDataSourceList" cname="gda_config_free_data_source_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="list" />
        </parameters>
      </method>
      <method name="FreeList" cname="gda_config_free_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="list" />
        </parameters>
      </method>
      <method name="FreeProviderList" cname="gda_config_free_provider_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="list" />
        </parameters>
      </method>
      <method name="GetBoolean" cname="gda_config_get_boolean" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetDataSourceList" cname="gda_config_get_data_source_list" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="GetDataSourceModel" cname="gda_config_get_data_source_model" shared="true">
        <return-type type="GdaDataModel*" />
      </method>
      <method name="GetFloat" cname="gda_config_get_float" shared="true">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetInt" cname="gda_config_get_int" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetProviderByName" cname="gda_config_get_provider_by_name" shared="true">
        <return-type type="GdaProviderInfo*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetProviderList" cname="gda_config_get_provider_list" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="GetProviderModel" cname="gda_config_get_provider_model" shared="true">
        <return-type type="GdaDataModel*" />
      </method>
      <method name="GetString" cname="gda_config_get_string" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetType" cname="gda_config_get_type" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="HasKey" cname="gda_config_has_key" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="HasSection" cname="gda_config_has_section" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="ListKeys" cname="gda_config_list_keys" shared="true">
        <return-type type="GList*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="ListSections" cname="gda_config_list_sections" shared="true">
        <return-type type="GList*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="RemoveDataSource" cname="gda_config_remove_data_source" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="RemoveKey" cname="gda_config_remove_key" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="RemoveListener" cname="gda_config_remove_listener" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="id" />
        </parameters>
      </method>
      <method name="RemoveSection" cname="gda_config_remove_section" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="SaveDataSource" cname="gda_config_save_data_source" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="provider" />
          <parameter type="const-gchar*" name="cnc_string" />
          <parameter type="const-gchar*" name="description" />
          <parameter type="const-gchar*" name="username" />
          <parameter type="const-gchar*" name="password" />
          <parameter type="gboolean" name="is_global" />
        </parameters>
      </method>
      <method name="SaveDataSourceInfo" cname="gda_config_save_data_source_info" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdaDataSourceInfo*" name="dsn_info" />
        </parameters>
      </method>
      <method name="SetBoolean" cname="gda_config_set_boolean" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="gboolean" name="new_value" />
        </parameters>
      </method>
      <method name="SetFloat" cname="gda_config_set_float" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="gdouble" name="new_value" />
        </parameters>
      </method>
      <method name="SetInt" cname="gda_config_set_int" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="gint" name="new_value" />
        </parameters>
      </method>
      <method name="SetString" cname="gda_config_set_string" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
          <parameter type="const-gchar*" name="new_value" />
        </parameters>
      </method>
    </class>
    <class name="Default" cname="GdaDefault_">
      <method name="EscapeChars" cname="gda_default_escape_chars" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="UnescapeChars" cname="gda_default_unescape_chars" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
    </class>
    <class name="File" cname="GdaFile_">
      <method name="Load" cname="gda_file_load" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="Save" cname="gda_file_save" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="const-gchar*" name="buffer" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
    </class>
    <class name="Functions" cname="GdaFunctions_">
      <method name="GetByDbmsId" cname="gda_functions_get_by_dbms_id" shared="true">
        <return-type type="GdaDictFunction*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="dbms_id" />
        </parameters>
      </method>
      <method name="GetByName" cname="gda_functions_get_by_name" shared="true">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="aggname" />
        </parameters>
      </method>
      <method name="GetByNameArg" cname="gda_functions_get_by_name_arg" shared="true">
        <return-type type="GdaDictFunction*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="const-gchar*" name="aggname" />
          <parameter type="const-GSList*" name="argtypes" />
        </parameters>
      </method>
      <method name="GetByNameArgInList" cname="gda_functions_get_by_name_arg_in_list" shared="true">
        <return-type type="GdaDictFunction*" />
        <parameters>
          <parameter type="GdaDict*" name="dict" />
          <parameter type="GSList*" name="functions" />
          <parameter type="const-gchar*" name="aggname" />
          <parameter type="const-GSList*" name="argtypes" />
        </parameters>
      </method>
      <method name="GetRegister" cname="gda_functions_get_register" shared="true">
        <return-type type="GdaDictRegisterStruct*" />
      </method>
    </class>
    <class name="Global" cname="GdaGlobal">
      <method name="GetDefaultDict" cname="gda_get_default_dict" shared="true">
        <return-type type="GdaDict*" />
      </method>
      <method name="ShortGetType" cname="gda_short_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SqlReplacePlaceholders" cname="gda_sql_replace_placeholders" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="sql" />
          <parameter type="GdaParameterList*" name="params" />
        </parameters>
      </method>
      <method name="StringHashToList" cname="gda_string_hash_to_list" shared="true">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GHashTable*" name="hash_table" />
        </parameters>
      </method>
      <method name="StringToBinary" cname="gda_string_to_binary" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GdaBinary*" name="bin" />
        </parameters>
      </method>
      <method name="TypesGetRegister" cname="g_types_get_register" shared="true">
        <return-type type="GdaDictRegisterStruct*" />
      </method>
      <method name="UshortGetType" cname="gda_ushort_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </class>
    <class name="Main" cname="GdaMain_">
      <method name="Quit" cname="gda_main_quit" shared="true">
        <return-type type="void" />
      </method>
      <method name="Run" cname="gda_main_run" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaInitFunc" name="init_func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
    </class>
    <class name="Queries" cname="GdaQueries_">
      <method name="DeclareSerial" cname="gda_queries_declare_serial" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdaDictRegisterStruct*" name="reg" />
          <parameter type="guint" name="id" />
        </parameters>
      </method>
      <method name="GetRegister" cname="gda_queries_get_register" shared="true">
        <return-type type="GdaDictRegisterStruct*" />
      </method>
      <method name="GetSerial" cname="gda_queries_get_serial" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GdaDictRegisterStruct*" name="reg" />
        </parameters>
      </method>
    </class>
    <class name="Type" cname="GType_">
      <method name="FromString" cname="g_type_from_string" shared="true">
        <return-type type="GType" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="ToString" cname="g_type_to_string" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
    </class>
    <class name="Value" cname="GdaValue_">
      <method name="Compare" cname="gda_value_compare" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-GValue*" name="value1" />
          <parameter type="const-GValue*" name="value2" />
        </parameters>
      </method>
      <method name="CompareExt" cname="gda_value_compare_ext" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-GValue*" name="value1" />
          <parameter type="const-GValue*" name="value2" />
        </parameters>
      </method>
      <method name="Copy" cname="gda_value_copy" shared="true">
        <return-type type="GValue*" owned="true" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="Free" cname="gda_value_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetBinary" cname="gda_value_get_binary" shared="true">
        <return-type type="const-GdaBinary*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetBlob" cname="gda_value_get_blob" shared="true">
        <return-type type="const-GdaBlob*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetGeometricPoint" cname="gda_value_get_geometric_point" shared="true">
        <return-type type="const-GdaGeometricPoint*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetList" cname="gda_value_get_list" shared="true">
        <return-type type="const-GdaValueList*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetNumeric" cname="gda_value_get_numeric" shared="true">
        <return-type type="const-GdaNumeric*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetShort" cname="gda_value_get_short" shared="true">
        <return-type type="gshort" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetTime" cname="gda_value_get_time" shared="true">
        <return-type type="const-GdaTime*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetTimestamp" cname="gda_value_get_timestamp" shared="true">
        <return-type type="const-GdaTimestamp*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetUshort" cname="gda_value_get_ushort" shared="true">
        <return-type type="gushort" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="IsNull" cname="gda_value_is_null" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="IsNumber" cname="gda_value_is_number" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="ListGetType" cname="gda_value_list_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="New" cname="gda_value_new" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="NewBinary" cname="gda_value_new_binary" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="guchar*" name="val" />
          <parameter type="glong" name="size" />
        </parameters>
      </method>
      <method name="NewFromString" cname="gda_value_new_from_string" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="const-gchar*" name="as_string" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="NewFromXml" cname="gda_value_new_from_xml" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="const-xmlNodePtr" name="node" />
        </parameters>
      </method>
      <method name="NewTimestampFromTimet" cname="gda_value_new_timestamp_from_timet" shared="true">
        <return-type type="GValue*" />
        <parameters>
          <parameter type="time_t" name="val" />
        </parameters>
      </method>
      <method name="ResetWithType" cname="gda_value_reset_with_type" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="SetBinary" cname="gda_value_set_binary" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaBinary*" name="binary" />
        </parameters>
      </method>
      <method name="SetBlob" cname="gda_value_set_blob" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaBlob*" name="val" />
        </parameters>
      </method>
      <method name="SetFromString" cname="gda_value_set_from_string" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-gchar*" name="as_string" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="SetFromValue" cname="gda_value_set_from_value" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GValue*" name="from" />
        </parameters>
      </method>
      <method name="SetGeometricPoint" cname="gda_value_set_geometric_point" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaGeometricPoint*" name="val" />
        </parameters>
      </method>
      <method name="SetList" cname="gda_value_set_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaValueList*" name="val" />
        </parameters>
      </method>
      <method name="SetNull" cname="gda_value_set_null" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetNumeric" cname="gda_value_set_numeric" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaNumeric*" name="val" />
        </parameters>
      </method>
      <method name="SetShort" cname="gda_value_set_short" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-gshort" name="val" />
        </parameters>
      </method>
      <method name="SetTime" cname="gda_value_set_time" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaTime*" name="val" />
        </parameters>
      </method>
      <method name="SetTimestamp" cname="gda_value_set_timestamp" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaTimestamp*" name="val" />
        </parameters>
      </method>
      <method name="SetUshort" cname="gda_value_set_ushort" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-gushort" name="val" />
        </parameters>
      </method>
      <method name="Stringify" cname="gda_value_stringify" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="TakeBinary" cname="gda_value_take_binary" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
          <parameter type="const-GdaBinary*" name="binary" />
        </parameters>
      </method>
      <method name="ToXml" cname="gda_value_to_xml" shared="true">
        <return-type type="xmlNodePtr" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
    </class>
  </namespace>
</api>