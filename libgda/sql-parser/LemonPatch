--- lemon.c.3.7.3	2010-10-10 17:27:59.000000000 +0200
+++ lemon.c	2010-10-10 22:14:05.000000000 +0200
@@ -1404,11 +1404,13 @@
   static int quiet = 0;
   static int statistics = 0;
   static int mhflag = 0;
+  static int local_out_dir = 0;
   static int nolinenosflag = 0;
   static int noResort = 0;
   static struct s_options options[] = {
     {OPT_FLAG, "b", (char*)&basisflag, "Print only the basis in report."},
     {OPT_FLAG, "c", (char*)&compress, "Don't compress the action table."},
+    {OPT_FLAG, "d", (char*)&local_out_dir, "Output files in the current directory."},
     {OPT_FSTR, "D", (char*)handle_D_option, "Define an %ifdef macro."},
     {OPT_FSTR, "T", (char*)handle_T_option, "Specify a template file."},
     {OPT_FLAG, "g", (char*)&rpflag, "Print grammar without actions."},
@@ -1427,7 +1429,7 @@
   int exitcode;
   struct lemon lem;
 
-  atexit(LemonAtExit);
+  /*atexit(LemonAtExit);*/
 
   OptInit(argv,options,stderr);
   if( version ){
@@ -1447,6 +1449,17 @@
   State_init();
   lem.argv0 = argv[0];
   lem.filename = OptArg(0);
+  if (local_out_dir) {
+    char *ptr;
+#ifdef __WIN32__
+    for (ptr = lem.filename + strlen (lem.filename) - 1; (ptr > lem.filename) && (*ptr != '\\'); ptr--);
+#else
+    for (ptr = lem.filename + strlen (lem.filename) - 1; (ptr > lem.filename) && (*ptr != '/'); ptr--);
+#endif
+    if (ptr > lem.filename)
+     lem.filename = ptr + 1;
+  }
+
   lem.basisflag = basisflag;
   lem.nolinenosflag = nolinenosflag;
   Symbol_new("$");
