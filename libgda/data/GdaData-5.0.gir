<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gda" version="5.0"/>
<include name="Gee" version="0.8"/>
<package name="gdadata-5.0"/>
<c:include name="libgda/libgdadata.h"/>
<namespace name="GdaData" version="5.0" c:prefix="GdaData">
	<annotation key="ccode.gir-version" value="5.0"/>
	<annotation key="ccode.cheader-filename" value="libgda/libgdadata.h"/>
	<annotation key="ccode.gir-namespace" value="GdaData"/>
	<errordomain name="ObjectError" get-quark="gda_data_object_error_quark" codes="ObjectError">
</errordomain>
	<enumeration name="ObjectError" c:type="GdaDataObjectError">
		<member name="append" c:identifier="GDA_DATA_OBJECT_ERROR_APPEND" value="0"/>
	</enumeration>
	<class name="Object" c:type="GdaDataObject" glib:type-name="GdaDataObject" glib:get-type="gda_data_object_get_type" glib:type-struct="ObjectClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="ObjectPrivate" c:type="GdaDataObjectPrivate*"/>
		</field>
		<method name="get_field_id" c:identifier="gda_data_object_get_field_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="get_value_id" c:identifier="gda_data_object_get_value_id">
			<parameters>
				<parameter name="result" direction="out" transfer-ownership="full" caller-allocates="1">
					<type name="GObject.Value" c:type="GValue"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
		</method>
		<method name="set_id" c:identifier="gda_data_object_set_id" throws="1">
			<parameters>
				<parameter name="field" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="v" transfer-ownership="none">
					<type name="GObject.Value" c:type="GValue"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="get_value" c:identifier="gda_data_object_get_value" throws="1">
			<parameters>
				<parameter name="field" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="none" allow-none="1">
				<type name="GObject.Value" c:type="GValue*"/>
			</return-value>
		</method>
		<method name="set_value" c:identifier="gda_data_object_set_value" throws="1">
			<parameters>
				<parameter name="field" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="v" transfer-ownership="none">
					<type name="GObject.Value" c:type="GValue"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="save" c:identifier="gda_data_object_save" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="update" c:identifier="gda_data_object_update" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="sql" c:identifier="gda_data_object_sql">
			<return-value transfer-ownership="full">
				<type name="Gda.SqlBuilder" c:type="GdaSqlBuilder*"/>
			</return-value>
		</method>
		<method name="append" c:identifier="gda_data_object_append" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="append" invoker="append" throws="1">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<property name="table">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="record">
			<type name="Gda.DataModel" c:type="GdaDataModel*"/>
		</property>
		<property name="connection" writable="1">
			<type name="Gda.Connection" c:type="GdaConnection*"/>
		</property>
	</class>
	<record name="ObjectClass" c:type="GdaDataObjectClass" glib:is-gtype-struct-for="Object">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="append">
			<callback name="append" c:type="append" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.Object" c:type="GdaDataObject*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
			</callback>
		</field>
	</record>
	<record name="ObjectPrivate" c:type="GdaDataObjectPrivate" disguised="1"/>
	<class name="DbField" c:type="GdaDataDbField" glib:type-name="GdaDataDbField" glib:get-type="gda_data_db_field_get_type" glib:type-struct="DbFieldClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DbFieldPrivate" c:type="GdaDataDbFieldPrivate*"/>
		</field>
		<property name="record" writable="1" construct="1">
			<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
		</property>
		<property name="value" writable="1">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="column-name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="attributes" writable="1" construct="1">
			<type name="GdaData.DbFieldAttribute" c:type="GdaDataDbFieldAttribute"/>
		</property>
	</class>
	<record name="DbFieldClass" c:type="GdaDataDbFieldClass" glib:is-gtype-struct-for="DbField">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DbFieldPrivate" c:type="GdaDataDbFieldPrivate" disguised="1"/>
	<bitfield name="DbFieldAttribute" c:type="GdaDataDbFieldAttribute" glib:type-name="GdaDataDbFieldAttribute" glib:get-type="gda_data_db_field_attribute_get_type">
		<member name="none" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_NONE" value="1"/>
		<member name="is_null" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_IS_NULL" value="2"/>
		<member name="can_be_null" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_CAN_BE_NULL" value="4"/>
		<member name="is_default" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_IS_DEFAULT" value="8"/>
		<member name="can_be_default" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_CAN_BE_DEFAULT" value="16"/>
		<member name="is_unchanged" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_IS_UNCHANGED" value="32"/>
		<member name="actions_shown" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_ACTIONS_SHOWN" value="64"/>
		<member name="data_non_valid" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_DATA_NON_VALID" value="128"/>
		<member name="has_value_orig" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_HAS_VALUE_ORIG" value="256"/>
		<member name="no_modif" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_NO_MODIF" value="512"/>
		<member name="unused" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_UNUSED" value="1024"/>
	</bitfield>
	<class name="DataModelIterator" c:type="GdaDataDataModelIterator" glib:type-name="GdaDataDataModelIterator" glib:get-type="gda_data_data_model_iterator_get_type" glib:type-struct="DataModelIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DataModelIteratorPrivate" c:type="GdaDataDataModelIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gda_data_data_model_iterator_new">
			<parameters>
				<parameter name="model" transfer-ownership="none">
					<type name="Gda.DataModel" c:type="GdaDataModel*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.DataModelIterator" c:type="GdaDataDataModelIterator*"/>
			</return-value>
		</constructor>
		<property name="current-column">
			<type name="gint" c:type="gint"/>
		</property>
		<property name="current-row">
			<type name="gint" c:type="gint"/>
		</property>
	</class>
	<record name="DataModelIteratorClass" c:type="GdaDataDataModelIteratorClass" glib:is-gtype-struct-for="DataModelIterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DataModelIteratorPrivate" c:type="GdaDataDataModelIteratorPrivate" disguised="1"/>
	<class name="DataModelIterable" c:type="GdaDataDataModelIterable" glib:type-name="GdaDataDataModelIterable" glib:get-type="gda_data_data_model_iterable_get_type" glib:type-struct="DataModelIterableClass" parent="Gee.AbstractCollection">
		<implements name="Gda.DataModel"/>
		<field name="parent_instance">
			<type name="Gee.AbstractCollection" c:type="GeeAbstractCollection"/>
		</field>
		<field name="priv">
			<type name="DataModelIterablePrivate" c:type="GdaDataDataModelIterablePrivate*"/>
		</field>
		<constructor name="new" c:identifier="gda_data_data_model_iterable_new">
			<parameters>
				<parameter name="model" transfer-ownership="none">
					<type name="Gda.DataModel" c:type="GdaDataModel*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.DataModelIterable" c:type="GdaDataDataModelIterable*"/>
			</return-value>
		</constructor>
		<method name="foreach" c:identifier="gda_data_data_model_iterable_foreach">
			<parameters>
				<parameter name="f" transfer-ownership="none" closure="1">
					<type name="Gee.ForallFunc" c:type="GeeForallFunc"/>
				</parameter>
				<parameter name="f_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<property name="element-type">
			<type name="GObject.Type" c:type="GType"/>
		</property>
	</class>
	<record name="DataModelIterableClass" c:type="GdaDataDataModelIterableClass" glib:is-gtype-struct-for="DataModelIterable">
		<field name="parent_class">
			<type name="Gee.AbstractCollectionClass" c:type="GeeAbstractCollectionClass"/>
		</field>
	</record>
	<record name="DataModelIterablePrivate" c:type="GdaDataDataModelIterablePrivate" disguised="1"/>
	<interface name="DbCollection" c:type="GdaDataDbCollection" glib:type-name="GdaDataDbCollection" glib:get-type="gda_data_db_collection_get_type" glib:type-struct="DbCollectionIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_tables" c:identifier="gda_data_db_collection_get_tables">
			<parameters>
				<parameter name="schema" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_tables" invoker="get_tables">
			<parameters>
				<parameter name="schema" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="Gee.Collection" c:type="GeeCollection*">
					<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="schemas">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbSchema" c:type="GdaDataDbSchema*"/>
			</type>
		</property>
	</interface>
	<record name="DbCollectionIface" c:type="GdaDataDbCollectionIface" glib:is-gtype-struct-for="DbCollection">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_tables">
			<callback name="get_tables" c:type="get_tables">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbCollection" c:type="GdaDataDbCollection*"/>
					</parameter>
					<parameter name="schema" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="Gee.Collection" c:type="GeeCollection*">
						<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
					</type>
				</return-value>
			</callback>
		</field>
	</record>
	<interface name="DbTable" c:type="GdaDataDbTable" glib:type-name="GdaDataDbTable" glib:get-type="gda_data_db_table_get_type" glib:type-struct="DbTableIface">
		<prerequisite name="GObject.Object"/>
		<method name="iterator" c:identifier="gda_data_db_table_iterator">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterator" c:type="GeeIterator*">
					<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="iterator" invoker="iterator">
			<return-value transfer-ownership="full">
				<type name="Gee.Iterator" c:type="GeeIterator*">
					<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
				</type>
			</return-value>
		</virtual-method>
		<property name="schema" writable="1" construct="1">
			<type name="GdaData.DbSchema" c:type="GdaDataDbSchema*"/>
		</property>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="tables">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
			</type>
		</property>
		<property name="fk-depends">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
			</type>
		</property>
		<property name="fk">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
			</type>
		</property>
	</interface>
	<record name="DbTableIface" c:type="GdaDataDbTableIface" glib:is-gtype-struct-for="DbTable">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="iterator">
			<callback name="iterator" c:type="iterator">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="Gee.Iterator" c:type="GeeIterator*">
						<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
					</type>
				</return-value>
			</callback>
		</field>
	</record>
	<interface name="DbRecord" c:type="GdaDataDbRecord" glib:type-name="GdaDataDbRecord" glib:get-type="gda_data_db_record_get_type" glib:type-struct="DbRecordIface">
		<prerequisite name="GObject.Object"/>
		<property name="table" writable="1" construct="1">
			<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
		</property>
		<property name="fields">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbField" c:type="GdaDataDbField*"/>
			</type>
		</property>
	</interface>
	<record name="DbRecordIface" c:type="GdaDataDbRecordIface" glib:is-gtype-struct-for="DbRecord">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DbSchema" c:type="GdaDataDbSchema" glib:type-name="GdaDataDbSchema" glib:get-type="gda_data_db_schema_get_type" glib:type-struct="DbSchemaIface">
		<prerequisite name="GObject.Object"/>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="tables">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
			</type>
		</property>
	</interface>
	<record name="DbSchemaIface" c:type="GdaDataDbSchemaIface" glib:is-gtype-struct-for="DbSchema">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
</namespace>
</repository>
