<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gee" version="0.8"/>
<include name="Gda" version="5.0"/>
<package name="gdadata-5.0"/>
<c:include name="libgda/data/libgdadata.h"/>
<namespace name="GdaData" version="5.0" c:prefix="GdaData">
	<annotation key="ccode.gir-version" value="5.0"/>
	<annotation key="ccode.cheader-filename" value="libgda/data/libgdadata.h"/>
	<annotation key="ccode.gir-namespace" value="GdaData"/>
	<errordomain name="DbObjectError" get-quark="gda_data_db_object_error_quark" codes="DbObjectError">
</errordomain>
	<enumeration name="DbObjectError" c:type="GdaDataDbObjectError">
		<member name="append" c:identifier="GDA_DATA_DB_OBJECT_ERROR_APPEND" value="0"/>
		<member name="update" c:identifier="GDA_DATA_DB_OBJECT_ERROR_UPDATE" value="1"/>
		<member name="save" c:identifier="GDA_DATA_DB_OBJECT_ERROR_SAVE" value="2"/>
	</enumeration>
	<class name="DataBase" c:type="GdaDataDataBase" glib:type-name="GdaDataDataBase" glib:get-type="gda_data_data_base_get_type" glib:type-struct="DataBaseClass" parent="GObject.Object">
		<implements name="GdaData.DbObject"/>
		<implements name="GdaData.DbNamedObject"/>
		<implements name="GdaData.DbCollection"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DataBasePrivate" c:type="GdaDataDataBasePrivate*"/>
		</field>
		<field name="_schemas">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GdaData.DbSchema" c:type="GdaDataDbSchema*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</field>
		<constructor name="new" c:identifier="gda_data_data_base_new">
			<return-value transfer-ownership="full">
				<type name="GdaData.DataBase" c:type="GdaDataDataBase*"/>
			</return-value>
		</constructor>
	</class>
	<record name="DataBaseClass" c:type="GdaDataDataBaseClass" glib:is-gtype-struct-for="DataBase">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DataBasePrivate" c:type="GdaDataDataBasePrivate" disguised="1"/>
	<class name="Schema" c:type="GdaDataSchema" glib:type-name="GdaDataSchema" glib:get-type="gda_data_schema_get_type" glib:type-struct="SchemaClass" parent="GObject.Object">
		<implements name="GdaData.DbObject"/>
		<implements name="GdaData.DbNamedObject"/>
		<implements name="GdaData.DbSchema"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SchemaPrivate" c:type="GdaDataSchemaPrivate*"/>
		</field>
		<field name="_tables">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</field>
		<constructor name="new" c:identifier="gda_data_schema_new">
			<return-value transfer-ownership="full">
				<type name="GdaData.Schema" c:type="GdaDataSchema*"/>
			</return-value>
		</constructor>
	</class>
	<record name="SchemaClass" c:type="GdaDataSchemaClass" glib:is-gtype-struct-for="Schema">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="SchemaPrivate" c:type="GdaDataSchemaPrivate" disguised="1"/>
	<class name="Table" c:type="GdaDataTable" glib:type-name="GdaDataTable" glib:get-type="gda_data_table_get_type" glib:type-struct="TableClass" parent="GObject.Object">
		<implements name="GdaData.DbObject"/>
		<implements name="GdaData.DbNamedObject"/>
		<implements name="GdaData.DbTable"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TablePrivate" c:type="GdaDataTablePrivate*"/>
		</field>
		<field name="_records">
			<type name="GdaData.DbRecordCollection" c:type="GdaDataDbRecordCollection*"/>
		</field>
		<field name="_fields">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GdaData.DbFieldInfo" c:type="GdaDataDbFieldInfo*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</field>
		<field name="_fk_depends">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</field>
		<field name="_fk">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</field>
		<constructor name="new" c:identifier="gda_data_table_new">
			<return-value transfer-ownership="full">
				<type name="GdaData.Table" c:type="GdaDataTable*"/>
			</return-value>
		</constructor>
	</class>
	<record name="TableClass" c:type="GdaDataTableClass" glib:is-gtype-struct-for="Table">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TablePrivate" c:type="GdaDataTablePrivate" disguised="1"/>
	<class name="Record" c:type="GdaDataRecord" glib:type-name="GdaDataRecord" glib:get-type="gda_data_record_get_type" glib:type-struct="RecordClass" parent="GObject.Object">
		<implements name="GdaData.DbObject"/>
		<implements name="GdaData.DbRecord"/>
		<implements name="Gee.Comparable"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="RecordPrivate" c:type="GdaDataRecordPrivate*"/>
		</field>
		<field name="_fields">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="GObject.Value" c:type="GValue*"/>
				</type>
			</type>
		</field>
		<field name="_keys">
			<type name="Gee.HashMap" c:type="GeeHashMap*">
				<type name="utf8" c:type="gchar*"/>
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="GObject.Value" c:type="GValue*"/>
				</type>
			</type>
		</field>
		<constructor name="new" c:identifier="gda_data_record_new">
			<return-value transfer-ownership="full">
				<type name="GdaData.Record" c:type="GdaDataRecord*"/>
			</return-value>
		</constructor>
	</class>
	<record name="RecordClass" c:type="GdaDataRecordClass" glib:is-gtype-struct-for="Record">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="RecordPrivate" c:type="GdaDataRecordPrivate" disguised="1"/>
	<class name="RecordCollection" c:type="GdaDataRecordCollection" glib:type-name="GdaDataRecordCollection" glib:get-type="gda_data_record_collection_get_type" glib:type-struct="RecordCollectionClass" parent="Gee.AbstractCollection">
		<implements name="GdaData.DbRecordCollection"/>
		<field name="parent_instance">
			<type name="Gee.AbstractCollection" c:type="GeeAbstractCollection"/>
		</field>
		<field name="priv">
			<type name="RecordCollectionPrivate" c:type="GdaDataRecordCollectionPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gda_data_record_collection_new">
			<parameters>
				<parameter name="m" transfer-ownership="none">
					<type name="Gda.DataModel" c:type="GdaDataModel*"/>
				</parameter>
				<parameter name="table" transfer-ownership="none">
					<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.RecordCollection" c:type="GdaDataRecordCollection*"/>
			</return-value>
		</constructor>
		<method name="to_string" c:identifier="gda_data_record_collection_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<property name="model">
			<type name="Gda.DataModel" c:type="GdaDataModel*"/>
		</property>
	</class>
	<record name="RecordCollectionClass" c:type="GdaDataRecordCollectionClass" glib:is-gtype-struct-for="RecordCollection">
		<field name="parent_class">
			<type name="Gee.AbstractCollectionClass" c:type="GeeAbstractCollectionClass"/>
		</field>
	</record>
	<record name="RecordCollectionPrivate" c:type="GdaDataRecordCollectionPrivate" disguised="1"/>
	<class name="RecordCollectionIterator" c:type="GdaDataRecordCollectionIterator" glib:type-name="GdaDataRecordCollectionIterator" glib:get-type="gda_data_record_collection_iterator_get_type" glib:type-struct="RecordCollectionIteratorClass" parent="GObject.Object">
		<implements name="Gee.Traversable"/>
		<implements name="Gee.Iterator"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="RecordCollectionIteratorPrivate" c:type="GdaDataRecordCollectionIteratorPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gda_data_record_collection_iterator_new">
			<parameters>
				<parameter name="iter" transfer-ownership="none">
					<type name="Gda.DataModelIter" c:type="GdaDataModelIter*"/>
				</parameter>
				<parameter name="table" transfer-ownership="none">
					<type name="GdaData.DbTable" c:type="GdaDataDbTable*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.RecordCollectionIterator" c:type="GdaDataRecordCollectionIterator*"/>
			</return-value>
		</constructor>
	</class>
	<record name="RecordCollectionIteratorClass" c:type="GdaDataRecordCollectionIteratorClass" glib:is-gtype-struct-for="RecordCollectionIterator">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="RecordCollectionIteratorPrivate" c:type="GdaDataRecordCollectionIteratorPrivate" disguised="1"/>
	<class name="Field" c:type="GdaDataField" glib:type-name="GdaDataField" glib:get-type="gda_data_field_get_type" glib:type-struct="FieldClass" parent="GObject.Object">
		<implements name="GdaData.DbField"/>
		<implements name="GdaData.DbObject"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="FieldPrivate" c:type="GdaDataFieldPrivate*"/>
		</field>
		<constructor name="new" c:identifier="gda_data_field_new">
			<parameters>
				<parameter name="col_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="attr" transfer-ownership="none">
					<type name="GdaData.DbFieldAttribute" c:type="GdaDataDbFieldAttribute"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.Field" c:type="GdaDataField*"/>
			</return-value>
		</constructor>
	</class>
	<record name="FieldClass" c:type="GdaDataFieldClass" glib:is-gtype-struct-for="Field">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FieldPrivate" c:type="GdaDataFieldPrivate" disguised="1"/>
	<class name="FieldInfo" c:type="GdaDataFieldInfo" glib:type-name="GdaDataFieldInfo" glib:get-type="gda_data_field_info_get_type" glib:type-struct="FieldInfoClass" parent="GObject.Object">
		<implements name="GdaData.DbFieldInfo"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="FieldInfoPrivate" c:type="GdaDataFieldInfoPrivate*"/>
		</field>
	</class>
	<record name="FieldInfoClass" c:type="GdaDataFieldInfoClass" glib:is-gtype-struct-for="FieldInfo">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FieldInfoPrivate" c:type="GdaDataFieldInfoPrivate" disguised="1"/>
	<interface name="DbObject" c:type="GdaDataDbObject" glib:type-name="GdaDataDbObject" glib:get-type="gda_data_db_object_get_type" glib:type-struct="DbObjectIface">
		<prerequisite name="GObject.Object"/>
		<method name="append" c:identifier="gda_data_db_object_append" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<virtual-method name="append" invoker="append" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</virtual-method>
		<method name="update" c:identifier="gda_data_db_object_update" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="update" invoker="update" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="save" c:identifier="gda_data_db_object_save" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="save" invoker="save" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<property name="connection" writable="1">
			<type name="Gda.Connection" c:type="GdaConnection*"/>
		</property>
	</interface>
	<record name="DbObjectIface" c:type="GdaDataDbObjectIface" glib:is-gtype-struct-for="DbObject">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="append">
			<callback name="append" c:type="append" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbObject" c:type="GdaDataDbObject*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="gboolean" c:type="gboolean"/>
				</return-value>
			</callback>
		</field>
		<field name="update">
			<callback name="update" c:type="update" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbObject" c:type="GdaDataDbObject*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
			</callback>
		</field>
		<field name="save">
			<callback name="save" c:type="save" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbObject" c:type="GdaDataDbObject*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
			</callback>
		</field>
	</record>
	<interface name="DbNamedObject" c:type="GdaDataDbNamedObject" glib:type-name="GdaDataDbNamedObject" glib:get-type="gda_data_db_named_object_get_type" glib:type-struct="DbNamedObjectIface">
		<prerequisite name="GdaData.DbObject"/>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
	</interface>
	<record name="DbNamedObjectIface" c:type="GdaDataDbNamedObjectIface" glib:is-gtype-struct-for="DbNamedObject">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DbCollection" c:type="GdaDataDbCollection" glib:type-name="GdaDataDbCollection" glib:get-type="gda_data_db_collection_get_type" glib:type-struct="DbCollectionIface">
		<prerequisite name="GdaData.DbNamedObject"/>
		<property name="schemas">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbSchema" c:type="GdaDataDbSchema*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
	</interface>
	<record name="DbCollectionIface" c:type="GdaDataDbCollectionIface" glib:is-gtype-struct-for="DbCollection">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DbTable" c:type="GdaDataDbTable" glib:type-name="GdaDataDbTable" glib:get-type="gda_data_db_table_get_type" glib:type-struct="DbTableIface">
		<prerequisite name="GdaData.DbNamedObject"/>
		<property name="schema" writable="1" construct="1">
			<type name="GdaData.DbSchema" c:type="GdaDataDbSchema*"/>
		</property>
		<property name="records">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
		<property name="fk-depends">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
		<property name="fk">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
		<property name="fields" writable="1" construct="1">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbFieldInfo" c:type="GdaDataDbFieldInfo*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
	</interface>
	<record name="DbTableIface" c:type="GdaDataDbTableIface" glib:is-gtype-struct-for="DbTable">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DbRecord" c:type="GdaDataDbRecord" glib:type-name="GdaDataDbRecord" glib:get-type="gda_data_db_record_get_type" glib:type-struct="DbRecordIface">
		<prerequisite name="GdaData.DbObject"/>
		<prerequisite name="Gee.Comparable"/>
		<method name="get_value" c:identifier="gda_data_db_record_get_value" throws="1">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</method>
		<virtual-method name="get_value" invoker="get_value" throws="1">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full" allow-none="1">
				<type name="gpointer" c:type="gpointer"/>
			</return-value>
		</virtual-method>
		<method name="set_field" c:identifier="gda_data_db_record_set_field" throws="1">
			<parameters>
				<parameter name="field" transfer-ownership="none">
					<type name="GdaData.DbField" c:type="GdaDataDbField*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="set_field" invoker="set_field" throws="1">
			<parameters>
				<parameter name="field" transfer-ownership="none">
					<type name="GdaData.DbField" c:type="GdaDataDbField*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="get_field" c:identifier="gda_data_db_record_get_field" throws="1">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_field" invoker="get_field" throws="1">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="set_key" c:identifier="gda_data_db_record_set_key" throws="1">
			<parameters>
				<parameter name="field" transfer-ownership="none">
					<type name="GdaData.DbField" c:type="GdaDataDbField*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="set_key" invoker="set_key" throws="1">
			<parameters>
				<parameter name="field" transfer-ownership="none">
					<type name="GdaData.DbField" c:type="GdaDataDbField*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="get_key" c:identifier="gda_data_db_record_get_key" throws="1">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</method>
		<virtual-method name="get_key" invoker="get_key" throws="1">
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
			<return-value transfer-ownership="full">
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</return-value>
		</virtual-method>
		<method name="to_string" c:identifier="gda_data_db_record_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="table" writable="1" construct="1">
			<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
		<property name="fields">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
		<property name="keys">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbField" c:type="GdaDataDbField*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
	</interface>
	<record name="DbRecordIface" c:type="GdaDataDbRecordIface" glib:is-gtype-struct-for="DbRecord">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_value">
			<callback name="get_value" c:type="get_value" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</return-value>
			</callback>
		</field>
		<field name="set_field">
			<callback name="set_field" c:type="set_field" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
					</parameter>
					<parameter name="field" transfer-ownership="none">
						<type name="GdaData.DbField" c:type="GdaDataDbField*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
			</callback>
		</field>
		<field name="get_field">
			<callback name="get_field" c:type="get_field" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="GdaData.DbField" c:type="GdaDataDbField*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
			</callback>
		</field>
		<field name="set_key">
			<callback name="set_key" c:type="set_key" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
					</parameter>
					<parameter name="field" transfer-ownership="none">
						<type name="GdaData.DbField" c:type="GdaDataDbField*">
							<type name="gpointer" c:type="gpointer"/>
						</type>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
			</callback>
		</field>
		<field name="get_key">
			<callback name="get_key" c:type="get_key" throws="1">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
					</parameter>
					<parameter name="name" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="GdaData.DbField" c:type="GdaDataDbField*">
						<type name="gpointer" c:type="gpointer"/>
					</type>
				</return-value>
			</callback>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbRecord" c:type="GdaDataDbRecord*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
			</callback>
		</field>
	</record>
	<interface name="DbField" c:type="GdaDataDbField" glib:type-name="GdaDataDbField" glib:get-type="gda_data_db_field_get_type" glib:type-struct="DbFieldIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="GdaData.DbObject"/>
		<method name="to_string" c:identifier="gda_data_db_field_to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<virtual-method name="to_string" invoker="to_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</virtual-method>
		<property name="value" writable="1">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="column-name">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<property name="attributes">
			<type name="GdaData.DbFieldAttribute" c:type="GdaDataDbFieldAttribute"/>
		</property>
	</interface>
	<record name="DbFieldIface" c:type="GdaDataDbFieldIface" glib:is-gtype-struct-for="DbField">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="to_string">
			<callback name="to_string" c:type="to_string">
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="GdaData.DbField" c:type="GdaDataDbField*"/>
					</parameter>
				</parameters>
				<return-value transfer-ownership="full">
					<type name="utf8" c:type="gchar*"/>
				</return-value>
			</callback>
		</field>
	</record>
	<bitfield name="DbFieldAttribute" c:type="GdaDataDbFieldAttribute" glib:type-name="GdaDataDbFieldAttribute" glib:get-type="gda_data_db_field_attribute_get_type">
		<member name="none" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_NONE" value="1"/>
		<member name="is_null" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_IS_NULL" value="2"/>
		<member name="can_be_null" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_CAN_BE_NULL" value="4"/>
		<member name="is_default" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_IS_DEFAULT" value="8"/>
		<member name="can_be_default" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_CAN_BE_DEFAULT" value="16"/>
		<member name="is_unchanged" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_IS_UNCHANGED" value="32"/>
		<member name="actions_shown" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_ACTIONS_SHOWN" value="64"/>
		<member name="data_non_valid" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_DATA_NON_VALID" value="128"/>
		<member name="has_value_orig" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_HAS_VALUE_ORIG" value="256"/>
		<member name="no_modif" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_NO_MODIF" value="512"/>
		<member name="unused" c:identifier="GDA_DATA_DB_FIELD_ATTRIBUTE_UNUSED" value="1024"/>
	</bitfield>
	<interface name="DbFieldInfo" c:type="GdaDataDbFieldInfo" glib:type-name="GdaDataDbFieldInfo" glib:get-type="gda_data_db_field_info_get_type" glib:type-struct="DbFieldInfoIface">
		<prerequisite name="GObject.Object"/>
		<property name="attributes">
			<type name="GdaData.DbFieldAttribute" c:type="GdaDataDbFieldAttribute"/>
		</property>
		<property name="default-value">
			<type name="gpointer" c:type="gpointer"/>
		</property>
		<property name="name">
			<type name="utf8" c:type="gchar*"/>
		</property>
	</interface>
	<record name="DbFieldInfoIface" c:type="GdaDataDbFieldInfoIface" glib:is-gtype-struct-for="DbFieldInfo">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DbSchema" c:type="GdaDataDbSchema" glib:type-name="GdaDataDbSchema" glib:get-type="gda_data_db_schema_get_type" glib:type-struct="DbSchemaIface">
		<prerequisite name="GdaData.DbNamedObject"/>
		<property name="tables">
			<type name="Gee.Collection" c:type="GeeCollection*">
				<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
					<type name="gpointer" c:type="gpointer"/>
				</type>
			</type>
		</property>
	</interface>
	<record name="DbSchemaIface" c:type="GdaDataDbSchemaIface" glib:is-gtype-struct-for="DbSchema">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="DbRecordCollection" c:type="GdaDataDbRecordCollection" glib:type-name="GdaDataDbRecordCollection" glib:get-type="gda_data_db_record_collection_get_type" glib:type-struct="DbRecordCollectionIface">
		<prerequisite name="GObject.Object"/>
		<prerequisite name="Gee.Traversable"/>
		<prerequisite name="Gee.Iterable"/>
		<prerequisite name="Gee.Collection"/>
		<property name="connection" writable="1">
			<type name="Gda.Connection" c:type="GdaConnection*"/>
		</property>
		<property name="table">
			<type name="GdaData.DbTable" c:type="GdaDataDbTable*">
				<type name="gpointer" c:type="gpointer"/>
			</type>
		</property>
	</interface>
	<record name="DbRecordCollectionIface" c:type="GdaDataDbRecordCollectionIface" glib:is-gtype-struct-for="DbRecordCollection">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
</namespace>
</repository>
