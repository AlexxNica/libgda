%at{
/* XmlQuery: the xml query object
 * Copyright (C) 2000 Gerhard Dieringer
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
%}
%h{

#include "xml-query-bin.h"

%}



class Xml:Query:Target from Xml:Query:Bin {

    public Xml:Query:Item *
    new(void)
    {
        XmlQueryItem *target;

        target = (XmlQueryItem *)(GET_NEW);
        xml_query_item_set_tag(target,"target");

        return target;
    }


    public Xml:Query:Item *
    new_with_data(gchar *tag, gchar *id, gchar *name, Xml:Query:Item *join)
    {
        XmlQueryItem *target;

        target = (XmlQueryItem *)(GET_NEW);
        xml_query_item_set_tag(target,tag);
        if (id != NULL) {
            xml_query_item_set_attrib(target,"id",id);
            xml_query_item_add_id(target,id);
        }
        if (name != NULL)
            xml_query_item_set_attrib(target,"name",name);
        if (join != NULL)
            xml_query_item_add(target,join);

        return target;
    }



    public Xml:Query:Item *
    new_table(void)
    {
        XmlQueryItem *table;

        table = xml_query_target_new();
        xml_query_item_set_tag(table,"table");

	return table;
    }


    public Xml:Query:Item *
    new_table_with_data(gchar *id, gchar *name, Xml:Query:Item *join)
    {
	return xml_query_target_new_with_data("table",id,name,join);
    }


    public Xml:Query:Item *
    new_view(void)
    {
        XmlQueryItem *view;

        view = xml_query_target_new();
        xml_query_item_set_tag(view,"view");

	return view;
    }


    public Xml:Query:Item *
    new_view_with_data(gchar *id, gchar *name, Xml:Query:Item *join)
    {
	return xml_query_target_new_with_data("view",id,name,join);
    }





    override (Xml:Query:Item) gchar *
    to_sql(Xml:Query:Item *parent)
    {
         gchar        *output, *id, *name, *child;
         XmlQueryBin  *bin = XML_QUERY_BIN(parent);

         name = xml_query_item_get_attrib(parent,"name");
         child = TO_SQL(xml_query_bin_get_child(bin));
         id = xml_query_item_get_attrib(parent,"id");
         if (*id != 0)
             output = g_strdup_printf("%s as %s %s",name,id,child);
         else
             output = g_strdup_printf("%s %s",name,child);

         g_free(child);
         return output;
    }


}

