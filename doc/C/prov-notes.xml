<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<chapter id="provider-notes">
  <title>Provider's notes</title>

  <sect1 id="provider_notes_oracle"><title>For Oracle</title>
    <para>
      The following arguments are used to connect to an Oracle database:
      <table frame="all">
        <tgroup cols="3" colsep="1" rowsep="1" align="justify">
          <thead>
	    <row>
              <entry>Argument name</entry>
              <entry>Description</entry>
              <entry>Required</entry>
	    </row>
          </thead>
          <tbody>
	    <row>
              <entry>DB_NAME</entry>
              <entry>Service name: global database name entered during database creation (it combines a database name with a domain name), can be left empty to connect to the default database.</entry>
              <entry>No</entry>
	    </row>
	    <row>
              <entry>HOST</entry>
              <entry>Database server: host on which the database server is running</entry>
              <entry>Yes</entry>
	    </row>
	    <row>
              <entry>PORT</entry>
              <entry>Port: database server port (leave this field empty for the default 1521 port)</entry>
              <entry>No</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
      Note however all the arguments above can be replaced by a single TNSNAME argument (see
      the "Oracle Database Net Services Administrator's Guide" for more information about defining
      connection identifiers).
    </para>
    <para>
      Also refer to the <link linkend="limitations_oracle">Oracle's provider's limitations</link>.
    </para>
  </sect1>

<sect1 id="provider_notes_sqlite"><title>For SQLite</title>
    <para>
      The following arguments are used to connect to an SQLite database:
      <table frame="all">
        <tgroup cols="3" colsep="1" rowsep="1" align="justify">
          <thead>
	    <row>
              <entry>Argument name</entry>
              <entry>Description</entry>
              <entry>Required</entry>
	    </row>
          </thead>
          <tbody>
	    <row>
              <entry>DB_NAME</entry>
              <entry>Name of the database. This should be the name of the database file without
	      the ".db" extension. However when opening a database, if a file named after the DB_NAME
	      value exists then it is used (so beware, for example if DB_NAME is set to "mydb" and a file
	      named "mydb" exists but is not an SQLite database, then an error will occur)</entry>
              <entry>Yes</entry>
	    </row>
	    <row>
              <entry>DB_DIR</entry>
              <entry>The directory where the database file is; if not specified, the current working
	      directory is used.</entry>
              <entry>No</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </para>
    <para>
      Also refer to the <link linkend="limitations_sqlite">SQLite's provider's limitations</link>.
    </para>
  </sect1>

  <sect1 id="provider_notes_sqlcipher"><title>For SQLCipher</title>
  <para>
    The SQLCipher database provider allows one to connect to a database encrypted using the
    <ulink url="http://www.zetetic.net/code/sqlcipher">SQLCipher</ulink> adaptations to the SQLite
    database. This section deals about how to manage the passphrase associated with a database file, please
    also consult the information <ulink url="http://www.zetetic.net/code/sqlcipher">provided by SQLCipher</ulink>
    before attempting to use this database provider.
  </para>
  <para>
    The first noticeable point is that any SQLite database file can be opened using the SQLCipher and
    will remain useable with the "standard" SQLite provider as long as it's not explicitely encrypted using
    a passphrase.
  </para>
  <sect2>
    <title>How to create and encrypted database</title>
    <para>
      To create an encrypted database, you can use the <application>gda-sql</application> and when prompted
      enter the requested passphrase, as:
      <programlisting><![CDATA[prompt> gda-sql-4.0 "SQLCipher://DB_NAME=testcrypt"
Welcome to the GDA SQL console, version 4.1.11

Type: .copyright to show usage and distribution terms
      .? for help with internal commands
      .q (or CTRL-D) to quit
      (the '.' can be replaced by a '\')
      or any query terminated by a semicolon

Opening connection 'c0' for: SQLCipher://DB_NAME=testcrypt
	Password for 'c0':]]></programlisting>
    </para>
  </sect2>
  <sect2>
    <title>How to encrypt an existing database</title>
    <para>
      To encrypt an existing database, connect to the database using the SQLCipher provider and execute the
      following SQL command (replace the passphrase with the requested passphrase):
      <programlisting>PRAGMA key = 'passphrase';</programlisting>
      setting the requested passphrase which will be later required to reopen the database. This step
      prevents opening the database file by the "standard" SQLite provider.
    </para>
  </sect2>
  <sect2>
    <title>How to change the passphrase of an encrypted database</title>
    <para>
      To change an encrypted database's passphrase, open a connection to the database and enter the following
      SQL command (replace the passphrase with the requested new passphrase):
      <programlisting>PRAGMA rekey = 'passphrase';</programlisting>
    </para>
  </sect2>

  <para>
    Also refer to the <link linkend="provider_notes_sqlite">SQLite's provider's notes</link>,
    and <link linkend="limitations_sqlcipher">SQLCipher provider's limitations</link>.
  </para>
  </sect1>
  
</chapter>
