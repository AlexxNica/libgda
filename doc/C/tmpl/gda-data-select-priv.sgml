<!-- ##### SECTION Title ##### -->
Subclassing GdaDataSelect

<!-- ##### SECTION Short_Description ##### -->
Base class for all the data models returned by DBMS providers when a SELECT statement is executed

<!-- ##### SECTION Long_Description ##### -->
<para>
  All database providers should subclass this class when returning a data model after the execution of a SELECT
  statement. Specifically it has the following features:
  <itemizedlist>
    <listitem><para>Manages its list of <link linkend="GdaColumn">GdaColumn</link> using the list exported by the prepared statement object (<link linkend="GdaPStmt">GdaPStmt</link>)</para></listitem>
    <listitem><para>Allows random or cursor based access</para></listitem>
    <listitem><para>Allows for efficient memory usage allowing the subclass to finely tune its memory usage</para></listitem>
    <listitem><para>Provides a generic mechanism for writable data models</para></listitem>
  </itemizedlist>
</para>
<para>
  See the <link linkend="libgda-provider-recordset">Virtual methods for recordsets</link> section for more information
  about how to implement the virtual methods of the subclassed object.
</para>
<para>
  This section documents the methods available for the database provider's implementations.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdaDataSelectClass ##### -->
<para>

</para>

@parent_class: parent object class
@fetch_nb_rows: virtual method which must be implemented when access method is GDA_DATA_MODEL_ACCESS_RANDOM
@fetch_random: virtual method which must be implemented when access method is GDA_DATA_MODEL_ACCESS_RANDOM
@store_all: 
@fetch_next: virtual method which must be implemented when access method is GDA_DATA_MODEL_ACCESS_CURSOR_FORWARD
@fetch_prev: virtual method which must be implemented when access method is GDA_DATA_MODEL_ACCESS_CURSOR_BACKWARD
@fetch_at: virtual method which can be implemented when access method is GDA_DATA_MODEL_ACCESS_CURSOR_FORWARD or GDA_DATA_MODEL_ACCESS_CURSOR_BACKWARD
@_gda_reserved1: 
@_gda_reserved2: 
@_gda_reserved3: 
@_gda_reserved4: 

<!-- ##### FUNCTION gda_data_select_take_row ##### -->
<para>

</para>

@model: 
@row: 
@rownum: 


<!-- ##### FUNCTION gda_data_select_get_stored_row ##### -->
<para>

</para>

@model: 
@rownum: 
@Returns: 


<!-- ##### FUNCTION gda_data_select_get_connection ##### -->
<para>

</para>

@model: 
@Returns: 


<!-- ##### FUNCTION gda_column_set_name ##### -->
<para>

</para>

@column: 
@name: 


<!-- ##### FUNCTION gda_column_set_description ##### -->
<para>

</para>

@column: 
@title: 


<!-- ##### FUNCTION gda_column_set_dbms_type ##### -->
<para>

</para>

@column: 
@dbms_type: 


<!-- ##### FUNCTION gda_column_set_g_type ##### -->
<para>

</para>

@column: 
@type: 


<!-- ##### FUNCTION gda_column_set_allow_null ##### -->
<para>

</para>

@column: 
@allow: 


<!-- ##### FUNCTION gda_column_set_auto_increment ##### -->
<para>

</para>

@column: 
@is_auto: 


<!-- ##### FUNCTION gda_column_set_position ##### -->
<para>

</para>

@column: 
@position: 


<!-- ##### FUNCTION gda_column_set_default_value ##### -->
<para>

</para>

@column: 
@default_value: 


<!-- ##### FUNCTION gda_alphanum_to_text ##### -->
<para>

</para>

@text: 
@Returns: 


<!-- ##### FUNCTION gda_text_to_alphanum ##### -->
<para>

</para>

@text: 
@Returns: 


<!-- ##### FUNCTION gda_data_model_iter_move_next_default ##### -->
<para>

</para>

@model: 
@iter: 
@Returns: 


<!-- ##### FUNCTION gda_data_model_iter_move_prev_default ##### -->
<para>

</para>

@model: 
@iter: 
@Returns: 


<!-- ##### FUNCTION gda_row_invalidate_value ##### -->
<para>

</para>

@row: 
@value: 


<!-- ##### FUNCTION gda_row_value_is_valid ##### -->
<para>

</para>

@row: 
@value: 
@Returns: 


