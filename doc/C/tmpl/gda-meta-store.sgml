<!-- ##### SECTION Title ##### -->
GdaMetaStore

<!-- ##### SECTION Short_Description ##### -->
Dictionary object

<!-- ##### SECTION Long_Description ##### -->
<para>
  Previous versions of &LIBGDA; relied on an XML based file to store dictionary information, such as
  the database's schema (tables, views, etc) and various other information. The problems were that it was
  difficult for an application to integrate its own data into the dictionary and that there were some
  performances problems as the XML file needed to be parsed (and converted into its own in-memory structure)
  before any data could be read out of it.
</para>
<para>
  The new dictionary now relies on a database structure to store its data (see the 
  <link linkend="information_schema">database schema</link> section for a detailled description). The actual database can be a
  single file (using an SQLite database), an entirely in memory database (also using an SQLite database), or
  a more conventional backend such as a PostgreSQL database for a shared dictionary on a server.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdaMetaStore ##### -->
<para>

</para>


<!-- ##### SIGNAL GdaMetaStore::meta-changed ##### -->
<para>

</para>

@gdametastore: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL GdaMetaStore::meta-reset ##### -->
<para>

</para>

@gdametastore: the object which received the signal.

<!-- ##### SIGNAL GdaMetaStore::suggest-update ##### -->
<para>

</para>

@gdametastore: the object which received the signal.
@arg1: 
@Returns: 

<!-- ##### ARG GdaMetaStore:catalog ##### -->
<para>

</para>

<!-- ##### ARG GdaMetaStore:cnc ##### -->
<para>

</para>

<!-- ##### ARG GdaMetaStore:cnc-string ##### -->
<para>

</para>

<!-- ##### ARG GdaMetaStore:schema ##### -->
<para>

</para>

<!-- ##### ENUM GdaMetaStoreError ##### -->
<para>

</para>

@GDA_META_STORE_INCORRECT_SCHEMA_ERROR: 
@GDA_META_STORE_UNSUPPORTED_PROVIDER_ERROR: 
@GDA_META_STORE_INTERNAL_ERROR: 
@GDA_META_STORE_META_CONTEXT_ERROR: 
@GDA_META_STORE_MODIFY_CONTENTS_ERROR: 
@GDA_META_STORE_EXTRACT_SQL_ERROR: 
@GDA_META_STORE_ATTRIBUTE_NOT_FOUND_ERROR: 
@GDA_META_STORE_ATTRIBUTE_ERROR: 
@GDA_META_STORE_SCHEMA_OBJECT_NOT_FOUND_ERROR: 
@GDA_META_STORE_SCHEMA_OBJECT_CONFLICT_ERROR: 
@GDA_META_STORE_SCHEMA_OBJECT_DESCR_ERROR: 
@GDA_META_STORE_TRANSACTION_ALREADY_STARTED_ERROR: 

<!-- ##### STRUCT GdaMetaStoreChange ##### -->
<para>

</para>

@c_type: 
@table_name: 
@keys: 

<!-- ##### ENUM GdaMetaStoreChangeType ##### -->
<para>

</para>

@GDA_META_STORE_ADD: 
@GDA_META_STORE_REMOVE: 
@GDA_META_STORE_MODIFY: 

<!-- ##### STRUCT GdaMetaContext ##### -->
<para>
  The <structname>GdaMetaContext</structname> represents a meta data modification
  context: the <emphasis>how</emphasis> when used with gda_meta_store_modify_with_context(),
  and the <emphasis>what</emphasis> when used with gda_connection_update_meta_store().
</para>

@table_name: the name of the table <emphasis>in the GdaMetaStore's internal database</emphasis>
@size: the size of the @column_names and @column_values arrays
@column_names: an array of column names (columns of the @table_name table)
@column_values: an array of values, one for each column named in @column_names

<!-- ##### FUNCTION gda_meta_store_new ##### -->
<para>

</para>

@cnc_string: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_new_with_file ##### -->
<para>

</para>

@file_name: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_get_version ##### -->
<para>

</para>

@store: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_sql_identifier_quote ##### -->
<para>

</para>

@Param1: 
@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_extract ##### -->
<para>

</para>

@store: 
@select_sql: 
@error: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_schema_get_structure ##### -->
<para>

</para>

@store: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_get_attribute_value ##### -->
<para>

</para>

@store: 
@att_name: 
@att_value: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_set_attribute_value ##### -->
<para>

</para>

@store: 
@att_name: 
@att_value: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_schema_add_custom_object ##### -->
<para>

</para>

@store: 
@xml_description: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_meta_store_get_internal_connection ##### -->
<para>

</para>

@store: 
@Returns: 


