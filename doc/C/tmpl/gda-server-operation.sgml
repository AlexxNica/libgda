<!-- ##### SECTION Title ##### -->
GdaServerOperation

<!-- ##### SECTION Short_Description ##### -->
Handles any DDL query in an abstract way

<!-- ##### SECTION Long_Description ##### -->
<para>
  This object is basically just a data store: it can store named values, the values being
  organized hirarchically by their name which are similar to a Unix file path. For example a value can be read from its path
  using the gda_server_operation_get_value_at() method, or set using the gda_server_operation_set_value_at() method.
</para>
<para>
  Each #GdaServerOperation contains some structure which is usually defined by a database provider to implement
  a specific operation. The structure is composed of the following building blocks:
  <itemizedlist>
    <listitem><para>Named values (internally represented as a #GdaHolder object)</para></listitem>
    <listitem><para>Named values in a vector (internally represented as a #GdaSet object)</para></listitem>
    <listitem><para>Values in an array (internally represented as a #GdaDataModel object)</para></listitem>
    <listitem><para>Sequences of one or more of the previous blocks. A sequence can contain any number of
    instances of the template block (there may be lower and upper boundaries to the number of instances)</para></listitem>
  </itemizedlist>
</para>

<para>
  <emphasis>Important note:</emphasis> #GdaServerOperation objects are usually not created 
  manually using gda_server_operation_new(), but
  using a #GdaServerProvider object with gda_server_provider_create_operation().
  See the <link linkend="DDLIntro">global introduction about DDL</link> for more information.
  Alternatively one can use the <link linkend="libgda-40-Convenience-functions">Convenience functions</link>
  which internally manipulate #GdaServerOperation objects.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdaServerOperation ##### -->
<para>

</para>


<!-- ##### SIGNAL GdaServerOperation::sequence-item-added ##### -->
<para>

</para>

@gdaserveroperation: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### SIGNAL GdaServerOperation::sequence-item-remove ##### -->
<para>

</para>

@gdaserveroperation: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### ARG GdaServerOperation:connection ##### -->
<para>

</para>

<!-- ##### ARG GdaServerOperation:op-type ##### -->
<para>

</para>

<!-- ##### ARG GdaServerOperation:provider ##### -->
<para>

</para>

<!-- ##### ARG GdaServerOperation:spec-filename ##### -->
<para>

</para>

<!-- ##### ENUM GdaServerOperationType ##### -->
<para>

</para>

@GDA_SERVER_OPERATION_CREATE_DB: 
@GDA_SERVER_OPERATION_DROP_DB: 
@GDA_SERVER_OPERATION_CREATE_TABLE: 
@GDA_SERVER_OPERATION_DROP_TABLE: 
@GDA_SERVER_OPERATION_RENAME_TABLE: 
@GDA_SERVER_OPERATION_ADD_COLUMN: 
@GDA_SERVER_OPERATION_DROP_COLUMN: 
@GDA_SERVER_OPERATION_CREATE_INDEX: 
@GDA_SERVER_OPERATION_DROP_INDEX: 
@GDA_SERVER_OPERATION_CREATE_VIEW: 
@GDA_SERVER_OPERATION_DROP_VIEW: 
@GDA_SERVER_OPERATION_LAST: 

<!-- ##### FUNCTION gda_server_operation_get_op_type ##### -->
<para>

</para>

@op: 
@Returns: 


<!-- ##### FUNCTION gda_server_operation_op_type_to_string ##### -->
<para>

</para>

@type: 
@Returns: 


<!-- ##### FUNCTION gda_server_operation_get_value_at ##### -->
<para>

</para>

@op: 
@path_format: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gda_server_operation_set_value_at ##### -->
<para>

</para>

@op: 
@value: 
@error: 
@path_format: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gda_server_operation_save_data_to_xml ##### -->
<para>

</para>

@op: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_server_operation_load_data_from_xml ##### -->
<para>

</para>

@op: 
@node: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_server_operation_is_valid ##### -->
<para>

</para>

@op: 
@xml_file: 
@error: 
@Returns: 


