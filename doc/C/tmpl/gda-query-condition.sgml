<!-- ##### SECTION Title ##### -->
GdaQueryCondition

<!-- ##### SECTION Short_Description ##### -->
Represents a condition within a query

<!-- ##### SECTION Long_Description ##### -->
<para>
This object represents a condition within a query. Usually there is one such object to express a WHERE condition
and sometimes a #GdaQueryJoin object con contain one as well to express a specific joinning condition.
</para>
<para>
There are two types of conditions: 'node' conditions (AND, OR, NOT), where there are one or more
children condition and 'leaf' conditions, where there are only operands.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdaQueryCondition ##### -->
<para>

</para>


<!-- ##### ARG GdaQueryCondition:cond-type ##### -->
<para>

</para>

<!-- ##### ARG GdaQueryCondition:join ##### -->
<para>

</para>

<!-- ##### ARG GdaQueryCondition:query ##### -->
<para>

</para>

<!-- ##### ENUM GdaQueryConditionType ##### -->
<para>

</para>

@GDA_QUERY_CONDITION_NODE_AND: 
@GDA_QUERY_CONDITION_NODE_OR: 
@GDA_QUERY_CONDITION_NODE_NOT: 
@GDA_QUERY_CONDITION_LEAF_EQUAL: 
@GDA_QUERY_CONDITION_LEAF_DIFF: 
@GDA_QUERY_CONDITION_LEAF_SUP: 
@GDA_QUERY_CONDITION_LEAF_SUPEQUAL: 
@GDA_QUERY_CONDITION_LEAF_INF: 
@GDA_QUERY_CONDITION_LEAF_INFEQUAL: 
@GDA_QUERY_CONDITION_LEAF_LIKE: 
@GDA_QUERY_CONDITION_LEAF_SIMILAR: 
@GDA_QUERY_CONDITION_LEAF_REGEX: 
@GDA_QUERY_CONDITION_LEAF_REGEX_NOCASE: 
@GDA_QUERY_CONDITION_LEAF_NOT_REGEX: 
@GDA_QUERY_CONDITION_LEAF_NOT_REGEX_NOCASE: 
@GDA_QUERY_CONDITION_LEAF_IN: 
@GDA_QUERY_CONDITION_LEAF_BETWEEN: 
@GDA_QUERY_CONDITION_TYPE_UNKNOWN: 

<!-- ##### ENUM GdaQueryConditionOperator ##### -->
<para>

</para>

@GDA_QUERY_CONDITION_OP_LEFT: 
@GDA_QUERY_CONDITION_OP_RIGHT: 
@GDA_QUERY_CONDITION_OP_RIGHT2: 

<!-- ##### FUNCTION gda_query_condition_new ##### -->
<para>

</para>

@query: 
@type: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_new_copy ##### -->
<para>

</para>

@orig: 
@replacements: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_new_from_sql ##### -->
<para>

</para>

@query: 
@sql_cond: 
@targets: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_set_cond_type ##### -->
<para>

</para>

@condition: 
@type: 


<!-- ##### FUNCTION gda_query_condition_get_cond_type ##### -->
<para>

</para>

@condition: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_get_children ##### -->
<para>

</para>

@condition: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_get_parent ##### -->
<para>

</para>

@condition: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_get_child_by_xml_id ##### -->
<para>

</para>

@condition: 
@xml_id: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_is_ancestor ##### -->
<para>

</para>

@condition: 
@ancestor: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_is_leaf ##### -->
<para>

</para>

@condition: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_node_add_child ##### -->
<para>

</para>

@condition: 
@child: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_node_del_child ##### -->
<para>

</para>

@condition: 
@child: 


<!-- ##### FUNCTION gda_query_condition_leaf_set_operator ##### -->
<para>

</para>

@condition: 
@op: 
@field: 


<!-- ##### FUNCTION gda_query_condition_leaf_get_operator ##### -->
<para>

</para>

@condition: 
@op: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_represents_join ##### -->
<para>

</para>

@condition: 
@target1: 
@target2: 
@is_equi_join: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_represents_join_strict ##### -->
<para>

</para>

@condition: 
@target1: 
@target2: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_get_main_conditions ##### -->
<para>

</para>

@condition: 
@Returns: 


<!-- ##### FUNCTION gda_query_condition_get_ref_objects_all ##### -->
<para>

</para>

@condition: 
@Returns: 


