<!-- ##### SECTION Title ##### -->
GdaDataHandler

<!-- ##### SECTION Short_Description ##### -->
Interface which provides data handling capabilities

<!-- ##### SECTION Long_Description ##### -->
<para>
  Because data types vary a lot from a DBMS to another, the #GdaDataHandler interface helps
  designing modules which can handle very specific pieces of data through plugins.
  Each object which imlements the #GdaDataHandler interface is expected to handle a subset of
  the possible libgda defined data types.
</para>
<para>
  The #GdaDataHandler object can convert a #GValue to and from both SQL and 'STR'. The SQL representation of a value is 
  the actual string which would be used in an SQL statement (for example a string's SQL representation is surrounded by 
  quotes such as 'that\'s a string'). The 'STR' representation is a human-readable representation of a value appropriate 
  for the user's current locale. The 'STR' respresentation of a string is simply the original string without quotes but 
  a numerical value or date, for instance, will be formatted according to the user's current locale.
</para>
<para>
  Only one object which implements this interface is needed for any given data type, and it mainly contains some
  methods to manage values (as #GValue structures). The #GnomeDbDataEntry interface is complementary to this one since
  it it implemented by widgets where the user can enter or modify some data.
</para>
<para>
  #GdaDataHandler objects specific for each database provider and for each data type can be obtained using 
  <link linkend="gda-server-provider-get-data-handler-gtype">gda_server_provider_get_data_handler_gtype()</link> or
  <link linkend="gda-server-provider-get-data-handler-dbms">gda_server_provider_get_data_handler_dbms()</link>, and
  generic data handlers (for each type) can be obtained using
  <link linkend="gda-get-default-handler">gda_get_default_handler()</link>.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
The #GdaDictType class an the #GnomeDbDataEntry interface.
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdaDataHandler ##### -->
<para>

</para>


<!-- ##### FUNCTION gda_data_handler_get_sql_from_value ##### -->
<para>

</para>

@dh: 
@value: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_get_str_from_value ##### -->
<para>

</para>

@dh: 
@value: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_get_value_from_sql ##### -->
<para>

</para>

@dh: 
@sql: 
@type: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_get_value_from_str ##### -->
<para>

</para>

@dh: 
@str: 
@type: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_get_sane_init_value ##### -->
<para>

</para>

@dh: 
@type: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_get_nb_g_types ##### -->
<para>

</para>

@dh: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_accepts_g_type ##### -->
<para>

</para>

@dh: 
@type: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_get_g_type_index ##### -->
<para>

</para>

@dh: 
@index: 
@Returns: 


<!-- ##### FUNCTION gda_data_handler_get_descr ##### -->
<para>

</para>

@dh: 
@Returns: 


