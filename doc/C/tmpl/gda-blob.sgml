<!-- ##### SECTION Title ##### -->
gda-blob

<!-- ##### SECTION Short_Description ##### -->
BLOB (Binary Large OBject) handling functions.

<!-- ##### SECTION Long_Description ##### -->
<para>
BLOBs are large block of data stored in a database. They are commonly used
to store data files such as audio, images, ...
</para>
<para>
If you get a GdaBlob from a #GdaValue or
<programlisting>
gda_connection_supports (cnc, GDA_CONNECTION_FEATURE_BLOBS);
</programlisting>
returns TRUE, the provider you are using supports BLOBs.
</para>
<para>
If you want to create a new blob, use <link linkend="GDA-CONNECTION-CREATE-BLOB">gda_connection_create_blob</link>.
</para>
<para>
And here goes a sample on how to write to a newly created BLOB:
<programlisting>

/* Returns the number of bytes written */
gint
write_to_new_blob (GdaConnection *cnc, void *buffer, int length)
{
	GdaBlob *blob;
	gint nbytes;
	
	blob = g_new0 (GdaBlob, 1);
	if (!gda_connection_create_blob (cnc, blob)) {
		g_free (blob);
		return false;
	}

	gda_blob_write (blob, buffer, length, &amp;nbytes));
	gda_blob_close (blob);
	gda_blob_free_data (blob);
	g_free (blob);

	/* if gda_blob_write fails, this will be -1 */
	return nbytes;
}

</programlisting>
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### ENUM GdaBlobMode ##### -->
<para>
Access modes.
</para>

@GDA_BLOB_MODE_READ: read-only.
@GDA_BLOB_MODE_WRITE: write-only.
@GDA_BLOB_MODE_RDWR: read / write.

<!-- ##### STRUCT GdaBlob ##### -->
<para>
The only user-serviceable field in this structure is @user_data. The rest
are used by the provider or libgda itself.
</para>

@open: 
@read: 
@write: 
@lseek: 
@close: 
@remove: 
@stringify: 
@free_data: 
@priv_data: 
@user_data: 

<!-- ##### FUNCTION gda_blob_open ##### -->
<para>

</para>

@blob: 
@mode: 
@Returns: 


<!-- ##### FUNCTION gda_blob_read ##### -->
<para>

</para>

@blob: 
@buf: 
@size: 
@bytes_read: 
@Returns: 


<!-- ##### FUNCTION gda_blob_write ##### -->
<para>

</para>

@blob: 
@buf: 
@size: 
@bytes_written: 
@Returns: 


<!-- ##### FUNCTION gda_blob_lseek ##### -->
<para>

</para>

@blob: 
@offset: 
@whence: 
@Returns: 


<!-- ##### FUNCTION gda_blob_close ##### -->
<para>

</para>

@blob: 
@Returns: 


<!-- ##### FUNCTION gda_blob_remove ##### -->
<para>

</para>

@blob: 
@Returns: 


<!-- ##### FUNCTION gda_blob_free_data ##### -->
<para>

</para>

@blob: 


