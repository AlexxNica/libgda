<!-- ##### SECTION Title ##### -->
Blobs

<!-- ##### SECTION Short_Description ##### -->
Binary data and BLOBs handling

<!-- ##### SECTION Long_Description ##### -->
<para>
This object is a base class for individual database providers which support BLOB types. It supports
operations to read and write data in a BLOB value (of type GDA_BLOB_TYPE).
</para>

<para>
Libgda offers two methods to manipulate binary values as two containers: <link linkend="GdaBinary">GdaBinary</link> 
and <link linkend="GdaBlob">GdaBlob</link>:
<itemizedlist>
  <listitem><para>When reading from a data model returned by &LIBGDA; binary data will often be in a GdaBlob object, and the
      associated <link linkend="GdaBlobOp">GdaBlobOp</link> object can be used to manipulate the binary object (in a 
      database for example)</para></listitem>
  <listitem><para>When the binary value is created by the user, then there is no point in using a GdaBlob as
      there can not be any <link linkend="GdaBlobOp">GdaBlobOp</link> object, so the GdaBinary container is 
      enough.</para></listitem>
</itemizedlist>
</para>

<para>
  Note that a <link linkend="GdaBlob">GdaBlob</link> value will often not contain any data (or only some part of the actual BLOB)
  and that it's up to the user to use the associated <link linkend="GdaBlobOp">GdaBlobOp</link> object to "load" the data into
  the container (into the actual process heap).
</para>

<para>
  See the <link linkend="libgda-provider-blobop">Virtual methods for Blob operations</link> section for more information
  about how to implement the virtual methods when creating a database provider.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdaBlobOp ##### -->
<para>

</para>


<!-- ##### FUNCTION gda_blob_op_get_length ##### -->
<para>

</para>

@op: 
@Returns: 


<!-- ##### FUNCTION gda_blob_op_read ##### -->
<para>

</para>

@op: 
@blob: 
@offset: 
@size: 
@Returns: 


<!-- ##### FUNCTION gda_blob_op_read_all ##### -->
<para>

</para>

@op: 
@blob: 
@Returns: 


<!-- ##### FUNCTION gda_blob_op_write ##### -->
<para>

</para>

@op: 
@blob: 
@offset: 
@Returns: 


<!-- ##### FUNCTION gda_blob_op_write_all ##### -->
<para>

</para>

@op: 
@blob: 
@Returns: 


