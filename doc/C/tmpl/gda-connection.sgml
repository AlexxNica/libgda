<!-- ##### SECTION Title ##### -->
GdaConnection

<!-- ##### SECTION Short_Description ##### -->
A connection to a database

<!-- ##### SECTION Long_Description ##### -->
<para>
  Each connection to a database is represented by a #GdaConnection object. A connection is created (and opened)
  using gda_connection_open_from_dsn() if a data source has been defined, or gda_connection_open_from_string() otherwise.
  It is not recommended to create a #GdaConnection object using g_object_new() as the results are unpredictable (some
  parts won't correctly be initialized).
</para>
<para>
  Use the connection object to execute statements, use transactions, get meta data information, ...
</para>
<para>
  If supported by the database provider being used, statements can be executed asynchronously instead of
  blocking the execution thread untill the execution of a statement is finished. Each database provider
  is free to implement this feature as it wishes (using the API or using threads). The steps involved to
  execute a statement are then:
  <itemizedlist>
    <listitem><para>Request the statement execution using
	<link linkend="gda-connection-async-statement-execute">gda_connection_async_statement_execute() which returns an
	  execution ID to be used to identify a specific request</link></para></listitem>
    <listitem><para>Do some useful things (that is why async. statements' excution are for)</para></listitem>
    <listitem><para>Use one or more times 
	<link linkend="gda-connection-async-fetch-result">gda_connection_async_fetch_result()</link> to see
	if the execution is finished, using the request ID</para></listitem>
    <listitem><para>Use <link linkend="gda-connection-async-cancel">gda_connection_async_cancel()</link> to cancel
	the execution of a statement</para></listitem>
  </itemizedlist>
</para>
<para>
  The #GdaConnection object implements its own locking mechanism so it is thread-safe. However ad some database
  providers rely on an API which does not support threads or supports it only partially, the connections
  opened using those providers will only be accessible from the thread which created them (any other thread will
  be blocked trying to access the connection, use the
  <link linkend="gda-lockable-try-lock">gda_lockable_try_lock()</link> method to check it the connection
  is usable from a thread).
</para>
<para>
  If a connection really needs to be accessed by several threads at once, then it is possible to pass the
  #GDA_CONNECTION_OPTIONS_THREAD_SAFE flag when opening it. This flag requests that the real connection
  be created and really accessed in a <emphasis>private</emphasis> sub thread.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### SECTION Image ##### -->


<!-- ##### STRUCT GdaConnection ##### -->
<para>

</para>


<!-- ##### SIGNAL GdaConnection::conn-closed ##### -->
<para>

</para>

@:

@gdaconnection: the object which received the signal.

<!-- ##### SIGNAL GdaConnection::conn-opened ##### -->
<para>

</para>

@:

@gdaconnection: the object which received the signal.

<!-- ##### SIGNAL GdaConnection::conn-to-close ##### -->
<para>

</para>

@:

@gdaconnection: the object which received the signal.

<!-- ##### SIGNAL GdaConnection::dsn-changed ##### -->
<para>

</para>

@:

@gdaconnection: the object which received the signal.

<!-- ##### SIGNAL GdaConnection::error ##### -->
<para>

</para>

@: 
@:

@gdaconnection: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL GdaConnection::transaction-status-changed ##### -->
<para>

</para>

@:

@gdaconnection: the object which received the signal.

<!-- ##### ARG GdaConnection:auth-string ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:cnc-string ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:dsn ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:events-history-size ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:is-wrapper ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:meta-store ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:monitor-wrapped-in-mainloop ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:options ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:provider ##### -->
<para>

</para>

<!-- ##### ARG GdaConnection:thread-owner ##### -->
<para>

</para>

<!-- ##### ENUM GdaConnectionOptions ##### -->
<para>

</para>

@GDA_CONNECTION_OPTIONS_NONE: 
@GDA_CONNECTION_OPTIONS_READ_ONLY: 
@GDA_CONNECTION_OPTIONS_SQL_IDENTIFIERS_CASE_SENSITIVE: 
@GDA_CONNECTION_OPTIONS_THREAD_SAFE: 
@GDA_CONNECTION_OPTIONS_THREAD_ISOLATED: 
@GDA_CONNECTION_OPTIONS_AUTO_META_DATA: 

<!-- ##### ENUM GdaConnectionError ##### -->
<para>

</para>

@GDA_CONNECTION_DSN_NOT_FOUND_ERROR: 
@GDA_CONNECTION_PROVIDER_NOT_FOUND_ERROR: 
@GDA_CONNECTION_PROVIDER_ERROR: 
@GDA_CONNECTION_NO_CNC_SPEC_ERROR: 
@GDA_CONNECTION_NO_PROVIDER_SPEC_ERROR: 
@GDA_CONNECTION_OPEN_ERROR: 
@GDA_CONNECTION_STATEMENT_TYPE_ERROR: 
@GDA_CONNECTION_CANT_LOCK_ERROR: 
@GDA_CONNECTION_TASK_NOT_FOUND_ERROR: 
@GDA_CONNECTION_UNSUPPORTED_THREADS_ERROR: 
@GDA_CONNECTION_CLOSED_ERROR: 

<!-- ##### MACRO GDA_CONNECTION_ERROR ##### -->
<para>

</para>



<!-- ##### FUNCTION gda_connection_open_from_dsn ##### -->
<para>

</para>

@dsn: 
@auth_string: 
@options: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_open_from_string ##### -->
<para>

</para>

@provider_name: 
@cnc_string: 
@auth_string: 
@options: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_open ##### -->
<para>

</para>

@cnc: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_close ##### -->
<para>

</para>

@cnc: 


<!-- ##### FUNCTION gda_connection_close_no_warning ##### -->
<para>

</para>

@cnc: 


<!-- ##### FUNCTION gda_connection_is_opened ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_create_parser ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_value_to_sql_string ##### -->
<para>

</para>

@cnc: 
@from: 
@Returns: 


<!-- ##### FUNCTION gda_connection_quote_sql_identifier ##### -->
<para>

</para>

@cnc: 
@id: 
@Returns: 


<!-- ##### FUNCTION gda_connection_statement_to_sql ##### -->
<para>

</para>

@cnc: 
@stmt: 
@params: 
@flags: 
@params_used: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_statement_prepare ##### -->
<para>

</para>

@cnc: 
@stmt: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_statement_execute ##### -->
<para>

</para>

@cnc: 
@stmt: 
@params: 
@model_usage: 
@last_insert_row: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_statement_execute_select ##### -->
<para>

</para>

@cnc: 
@stmt: 
@params: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_statement_execute_select_full ##### -->
<para>

</para>

@cnc: 
@stmt: 
@params: 
@model_usage: 
@col_types: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_statement_execute_select_fullv ##### -->
<para>

</para>

@cnc: 
@stmt: 
@params: 
@model_usage: 
@error: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gda_connection_statement_execute_non_select ##### -->
<para>

</para>

@cnc: 
@stmt: 
@params: 
@last_insert_row: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_repetitive_statement_execute ##### -->
<para>

</para>

@cnc: 
@rstmt: 
@model_usage: 
@col_types: 
@stop_on_error: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_batch_execute ##### -->
<para>

</para>

@cnc: 
@batch: 
@params: 
@model_usage: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_begin_transaction ##### -->
<para>

</para>

@cnc: 
@name: 
@level: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_commit_transaction ##### -->
<para>

</para>

@cnc: 
@name: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_rollback_transaction ##### -->
<para>

</para>

@cnc: 
@name: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_add_savepoint ##### -->
<para>

</para>

@cnc: 
@name: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_rollback_savepoint ##### -->
<para>

</para>

@cnc: 
@name: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_delete_savepoint ##### -->
<para>

</para>

@cnc: 
@name: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_async_statement_execute ##### -->
<para>

</para>

@cnc: 
@stmt: 
@params: 
@model_usage: 
@col_types: 
@need_last_insert_row: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_async_fetch_result ##### -->
<para>

</para>

@cnc: 
@task_id: 
@last_insert_row: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_async_cancel ##### -->
<para>

</para>

@cnc: 
@task_id: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_transaction_status ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_options ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_provider ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_provider_name ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_dsn ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_cnc_string ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_authentication ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_events ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_create_operation ##### -->
<para>

</para>

@cnc: 
@type: 
@options: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_perform_operation ##### -->
<para>

</para>

@cnc: 
@op: 
@error: 
@Returns: 


<!-- ##### ENUM GdaConnectionFeature ##### -->
<para>

</para>

@GDA_CONNECTION_FEATURE_AGGREGATES: 
@GDA_CONNECTION_FEATURE_BLOBS: 
@GDA_CONNECTION_FEATURE_INDEXES: 
@GDA_CONNECTION_FEATURE_INHERITANCE: 
@GDA_CONNECTION_FEATURE_NAMESPACES: 
@GDA_CONNECTION_FEATURE_PROCEDURES: 
@GDA_CONNECTION_FEATURE_SEQUENCES: 
@GDA_CONNECTION_FEATURE_SQL: 
@GDA_CONNECTION_FEATURE_TRANSACTIONS: 
@GDA_CONNECTION_FEATURE_SAVEPOINTS: 
@GDA_CONNECTION_FEATURE_SAVEPOINTS_REMOVE: 
@GDA_CONNECTION_FEATURE_TRIGGERS: 
@GDA_CONNECTION_FEATURE_UPDATABLE_CURSOR: 
@GDA_CONNECTION_FEATURE_USERS: 
@GDA_CONNECTION_FEATURE_VIEWS: 
@GDA_CONNECTION_FEATURE_XA_TRANSACTIONS: 
@GDA_CONNECTION_FEATURE_MULTI_THREADING: 
@GDA_CONNECTION_FEATURE_LAST: 

<!-- ##### FUNCTION gda_connection_supports_feature ##### -->
<para>

</para>

@cnc: 
@feature: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_meta_store ##### -->
<para>

</para>

@cnc: 
@Returns: 


<!-- ##### FUNCTION gda_connection_update_meta_store ##### -->
<para>

</para>

@cnc: 
@context: 
@error: 
@Returns: 


<!-- ##### ENUM GdaConnectionMetaType ##### -->
<para>

</para>

@GDA_CONNECTION_META_NAMESPACES: 
@GDA_CONNECTION_META_TYPES: 
@GDA_CONNECTION_META_TABLES: 
@GDA_CONNECTION_META_VIEWS: 
@GDA_CONNECTION_META_FIELDS: 
@GDA_CONNECTION_META_INDEXES: 

<!-- ##### FUNCTION gda_connection_get_meta_store_data ##### -->
<para>

</para>

@cnc: 
@meta_type: 
@error: 
@nb_filters: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gda_connection_get_meta_store_data_v ##### -->
<para>

</para>

@cnc: 
@meta_type: 
@filters: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_parse_sql_string ##### -->
<para>

</para>

@cnc: 
@sql: 
@params: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_execute_select_command ##### -->
<para>

</para>

@cnc: 
@sql: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_execute_non_select_command ##### -->
<para>

</para>

@cnc: 
@sql: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_insert_row_into_table ##### -->
<para>

</para>

@cnc: 
@table: 
@error: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gda_connection_insert_row_into_table_v ##### -->
<para>

</para>

@cnc: 
@table: 
@col_names: 
@values: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_update_row_in_table ##### -->
<para>

</para>

@cnc: 
@table: 
@condition_column_name: 
@condition_value: 
@error: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gda_connection_update_row_in_table_v ##### -->
<para>

</para>

@cnc: 
@table: 
@condition_column_name: 
@condition_value: 
@col_names: 
@values: 
@error: 
@Returns: 


<!-- ##### FUNCTION gda_connection_delete_row_from_table ##### -->
<para>

</para>

@cnc: 
@table: 
@condition_column_name: 
@condition_value: 
@error: 
@Returns: 


