<!-- ##### SECTION Title ##### -->
GdaDictExtend

<!-- ##### SECTION Short_Description ##### -->
Make GdaDict manage other types of objects

<!-- ##### SECTION Long_Description ##### -->
<para>
As provided by &LIBGDA;, the <link linkend="GdaDict">GdaDict</link> object manages objects related to a database
structure (a <link linkend="GdaDictDatabase">GdaDictDatabase</link> object) and its environment (data types, functions,
etc). However it might be convenient to make the GdaDict object handle arbitrary lists of objects of the same type (provided
objects inherit <link linkend="GdaObject">GdaObject</link>).
</para>
<para>
To "register" a new type of object to a dictionary, all one has to do is create a
<link linkend="GdaDictRegisterStruct">GdaDictRegisterStruct</link> structure, and call the
<link linkend="gda_dict_register_object_type">gda_dict_register_object_type()</link> function. It is also
possible to make that registration automatic for any new GdaDict object using the 
<link linkend="gda_dict_class_always_register">gda_dict_class_always_register()</link> function.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GdaDictRegisterStruct ##### -->
<para>

</para>

@type: the GType type of object to register
@sort: TRUE if sorting based on the name of the object (as provided by <link linkend="gda_object_get_name">gda_object_get_name()</link>) must be applied when storing objects in the @assumed_objects list
@free: a function to call when the structure is destroyed, if NULL, then g_free() is used
@all_objects: a list of all the objects of this type which have been declared and which are assumed (read only)
@assumed_objects: a list of all the objects of this type which are assumed by the dictionary (read only)
@dbms_sync_key: 
@dbms_sync_descr: 
@dbms_sync: a function which is called when updating the lists of objects with the database, or NULL if no update is possible
@get_objects: a function to get the list of objects, used by <link linkend="gda_dict_get_objects">gda_dict_get_objects()</link>, or NULL to use default implementation
@get_by_name: a function to get an object from its name, used by <link linkend="gda_dict_get_object_by_name">gda_dict_get_object_by_name()</link>, or NULL to use default implementation
@xml_group_tag: the name of the tag belog which are listed all the objects when saving or loading in an XML file
@load_xml_tree: the function used to save in an XML tree, or NULL if saving not supported
@save_xml_tree: the function used to load from an XML tree, or NULL if loading not supported

<!-- ##### USER_FUNCTION GdaDictRegFreeFunc ##### -->
<para>

</para>

@Param1: 
@Param2: 


<!-- ##### USER_FUNCTION GdaDictRegSyncFunc ##### -->
<para>

</para>

@Param1: 
@limit_object_name: 
@Param3: 
@Returns: 


<!-- ##### USER_FUNCTION GdaDictRegGetListFunc ##### -->
<para>

</para>

@Param1: 
@Returns: 


<!-- ##### USER_FUNCTION GdaDictRegSaveFunc ##### -->
<para>

</para>

@Param1: 
@Param2: 
@Param3: 
@Returns: 


<!-- ##### USER_FUNCTION GdaDictRegLoadFunc ##### -->
<para>

</para>

@Param1: 
@Param2: 
@Param3: 
@Returns: 


<!-- ##### USER_FUNCTION GdaDictGetObjFunc ##### -->
<para>

</para>

@Param1: 
@Param2: 
@Returns: 


<!-- ##### FUNCTION gda_dict_class_always_register ##### -->
<para>

</para>

@Param1: 


<!-- ##### FUNCTION gda_dict_register_object_type ##### -->
<para>

</para>

@dict: 
@reg: 


<!-- ##### FUNCTION gda_dict_get_object_type_registration ##### -->
<para>

</para>

@dict: 
@type: 
@Returns: 


