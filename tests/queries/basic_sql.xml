<?xml version="1.0"?>
<unit>
  <test name="param_0">
    <sql expected="D">SELECT (## /* type:int4 */ IS NOT NULL)</sql>
    <render_as>SELECT ( ## /* type:"int4" */ IS NOT NULL)</render_as>
    <params>
      <param type="int4"/>
    </params>
  </test>

  <test name="param_0_b">
    <sql expected="D">SELECT ('PR' IS NOT NULL)</sql>
    <render_as>SELECT ('PR' IS NOT NULL)</render_as>
  </test>

  <test name="param_type_1">
    <sql expected="D">SELECT ## /* type:int4 */ i=10</sql>
    <render_as>SELECT ## /* type:"int4" */ i=10</render_as>
    <params>
      <param type="int4"/>
    </params>
  </test>

  <test name="param_type_2">
    <sql expected="D">SELECT ## /* type:"int4" */ i=10</sql>
    <params>
      <param type="int4"/>
    </params>
  </test>

  <test name="param_type_3">
    <sql expected="D">SELECT ## /*type:'int4'*/ i=10</sql>
    <render_as>SELECT ## /* type:"int4" */ i=10</render_as>
    <params>
      <param type="int4"/>
    </params>
  </test>

<test name="param_name_1">
    <sql expected="D">SELECT ## /* name:+12 */ i=10</sql>
    <render_as when_gda="FALSE">SELECT ## /* name:"+12" */ i=10</render_as>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" name:"+12" */ i=10</render_as>
    <params>
      <param name="+12"/>
    </params>
  </test>

  <test name="param_name_2">
    <sql expected="D">SELECT ## /* name:"+12" */ i=10</sql>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" name:"+12" */ i=10</render_as>
    <render_as when_gda="FALSE">SELECT ## /* name:"+12" */ i=10</render_as>
    <params>
      <param name="+12"/>
    </params>
  </test>

  <test name="param_name_3">
    <sql expected="D">SELECT ## /*name:'+12'*/ i=10</sql>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" name:"+12" */ i=10</render_as>
    <render_as when_gda="FALSE">SELECT ## /* name:"+12" */ i=10</render_as>
    <params>
      <param name="+12"/>
    </params>
  </test>

<test name="param_name_4">
    <sql expected="D">SELECT ## /* name:-10 */ i=10</sql>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" name:"-10" */ i=10</render_as>
    <render_as when_gda="FALSE">SELECT ## /* name:"-10" */ i=10</render_as>
    <params>
      <param name="-10"/>
    </params>
  </test>

  <test name="param_name_5">
    <sql expected="D">SELECT ## /* name:"-10" */ i=10</sql>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" name:"-10" */ i=10</render_as>
    <params>
      <param name="-10"/>
    </params>
  </test>

  <test name="param_name_6">
    <sql expected="D">SELECT ## /*name:'-10'*/ i=10</sql>
    <render_as when_gda="FALSE">SELECT ## /* name:"-10" */ i=10</render_as>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" name:"-10" */ i=10</render_as>
    <params>
      <param name="-10"/>
    </params>
  </test>

  <test name="param_descr_1">
    <sql expected="D">SELECT ## /* descr:ADescription */ i=10</sql>
    <render_as when_gda="FALSE">SELECT ## /* descr:"ADescription" */ i=10</render_as>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" descr:"ADescription" */ i=10</render_as>
    <params>
      <param descr="ADescription"/>
    </params>
  </test>

  <test name="param_descr_2">
    <sql expected="D">SELECT ## /* descr:"A description" */ i=10</sql>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" descr:"A description" */ i=10</render_as>
    <params>
      <param descr="A description"/>
    </params>
  </test>

  <test name="param_descr_3">
    <sql expected="D">SELECT ## /*descr:'A description'*/ i=10</sql>
    <render_as when_gda="FALSE">SELECT ## /* descr:"A description" */ i=10</render_as>
    <render_as when_gda="TRUE">SELECT ## /* type:"gchararray" descr:"A description" */ i=10</render_as>
    <params>
      <param descr="A description"/>
    </params>
  </test>

  <test name="param2_2">
    <sql expected="D">SELECT 1234 /* type:"gint" */, i=10</sql>
    <params>
      <param type="gint" default="1234" default_type="gint"/>
    </params>
  </test>

  <test name="string1">
    <sql expected="D" n_stmts="2">SELECT 'string with a ;' i=10; INSERT hello;</sql>
    <render_as>SELECT 'string with a ;' i=10; INSERT hello</render_as>
  </test>

  <test name="string2">
    <sql expected="S">UPDATE contacts SET name_first = 'Murray;' WHERE contact_id = 0</sql>
    <render_as>UPDATE contacts SET name_first='Murray;' WHERE contact_id=0</render_as>
  </test>

  <test name="string3">
    <sql expected="D">select bar from jcw.foo where qux &lt;&gt; ';'</sql>
  </test>

  <test name="string4">
    <sql expected="D">select bar from jcw.foo where \qux &lt;&gt; ';'</sql>
  </test>

  <test name="string5">
    <sql expected="D" n_stmts="2">select bar from jcw.foo where ; qux &lt;&gt; '\;'</sql>
  </test>

  <test name="string6">
    <sql expected="D" n_stmts="2">select bar from jcw.foo where ; update qux &lt;&gt; '\;'</sql>
  </test>

  <test name="string7">
    <sql expected="D" n_stmts="2">select bar from jcw.foo where \; qux &lt;&gt; 'String\;'</sql>
    <render_as>select bar from jcw.foo where \ ; qux &lt;&gt; 'String\;'</render_as>
  </test>

  <test name="string8">
    <sql expected="D" n_stmts="0"></sql>
  </test>

  <test name="string9">
    <sql expected="D" n_stmts="0">;</sql>
  </test>

  <test name="string10">
    <sql expected="D">Select field AS "my field" , 'sdfjk', func (sdlkfj + slkdjf) - sdlkf</sql>
    <render_as>Select field AS "my field" , 'sdfjk' , func (sdlkfj + slkdjf) - sdlkf</render_as>
  </test>

  <test name="string11">
    <sql expected="D" n_stmts="2">update kmj, sdfjk, ##/*name:"tit;i"*/ '+ ##/*name:"tot;o"*/,' ; COMMIT sdlkfj</sql>
    <render_as when_gda="FALSE">update kmj, sdfjk, ## /* name:"tit;i" */ '+ ##/*name:"tot;o"*/,' ; COMMIT sdlkfj</render_as>
    <render_as when_gda="TRUE">update kmj, sdfjk, ## /* type:"gchararray" name:"tit;i" */ '+ ##/*name:"tot;o"*/,' </render_as>
    <params>
      <param name="tit;i"/>
    </params>
  </test>

  <test name="string12">
    <sql expected="D">delete kmj, sdfjk /*name:"tit'i"*/ sdlkfj slkdjf sdlkf</sql>
    <render_as when_gda="FALSE">delete kmj, sdfjk /* name:"tit'i" */ sdlkfj slkdjf sdlkf</render_as>
    <render_as when_gda="TRUE">delete kmj, 'sdfjk' /* type:"gchararray" name:"tit'i" */ sdlkfj slkdjf sdlkf</render_as>
    <params>
      <param name="tit'i" default="sdfjk" default_type="gchararray"/>
    </params>
  </test>

  <test name="string13">
    <sql expected="">insert kmj, 'sdfjk /*name:"t'iti"*/' sdlkfj slkdjf sdlkf</sql>
  </test>

  <test name="string14">
    <sql expected="D">SELECT kmj, "sdfjk /*name:"titi"*/" sdlkfj slkdjf sdlkf</sql>
    <render_as>SELECT kmj, "sdfjk /*name:" titi "*/" sdlkfj slkdjf sdlkf</render_as>
  </test>

  <test name="string15">
    <sql expected="D">SELECT schema.table.field || ##/*name:"Postfix" type:"varchar"*/</sql>
    <render_as when_gda="FALSE">SELECT schema.table.field || ## /* name:"Postfix" type:"varchar" */</render_as>
    <render_as when_gda="TRUE">SELECT schema.table.field || ## /* type:"varchar" name:"Postfix" */</render_as>
    <params>
      <param name="Postfix" type="varchar"/>
    </params>
  </test>

  <test name="string16">
    <sql expected="D" n_stmts="2">SELECT afield; UPDATE a firld</sql>
    <render_as>SELECT afield ; UPDATE a firld</render_as>
  </test>

  <test name="string17">
    <sql expected="D">SELECTR id FROM table WHERE id = 1234.5 /* name:id type:gfloat */</sql>
    <render_as when_gda="FALSE">SELECTR id FROM table WHERE id = 1234.5 /* name:"id" type:"gfloat" */</render_as>
    <render_as when_gda="TRUE">SELECTR id FROM table WHERE id = 1234.500000 /* type:"gfloat" name:"id" */</render_as>
    <params>
      <param name="id" type="gfloat" default="1234.5"/>
    </params>
  </test>

  <test name="string17.1">
    <sql expected="D">SELECTR id FROM table WHERE id = 1234.5 /* name:id type:gfloat */ more text</sql>
    <render_as when_gda="FALSE">SELECTR id FROM table WHERE id = 1234.5 /* name:"id" type:"gfloat" */ more text</render_as>
    <render_as when_gda="TRUE">SELECTR id FROM table WHERE id = 1234.500000 /* type:"gfloat" name:"id" */ more text</render_as>
    <params>
      <param name="id" type="gfloat" default="1234.5"/>
    </params>
  </test>

  <test name="string18">
    <sql expected="D" n_stmts="2">SELECTR id FROM table WHERE id is null; SELECTR id FROM table WHERE id is not null</sql>
  </test>

  <test name="limit1">
    <sql expected="S">SELECT id FROM table WHERE id > 100 LIMIT 10</sql>
    <render_as>SELECT id FROM table AS t1 WHERE id > 100 LIMIT 10</render_as>
  </test>

  <test name="limit2">
    <sql expected="S">SELECT id FROM table WHERE id > 100 LIMIT 10 OFFSET 15</sql>
    <render_as>SELECT id FROM table AS t1 WHERE id > 100 LIMIT 10 OFFSET 15</render_as>
  </test>

  <test name="limit3">
    <sql expected="S">SELECT id FROM table WHERE id > 100 LIMIT 15,10</sql>
    <render_as>SELECT id FROM table AS t1 WHERE id > 100 LIMIT 10 OFFSET 15</render_as>
  </test>
</unit>
